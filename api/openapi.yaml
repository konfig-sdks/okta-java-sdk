openapi: 3.0.0
info:
  contact:
    email: devex-public@okta.com
    name: Okta Developer Team
    url: https://developer.okta.com/
  description: Allows customers to easily access the Okta API
  license:
    name: Apache-2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://developer.okta.com/terms/
  title: Okta API
  version: 2.16.0
  x-api-status-urls: false
  x-konfig-ignore:
    object-with-no-properties: true
  x-konfig-has-globally-required-security: true
  x-konfig-uses-multipart-form-data: true
externalDocs:
  description: Find more info here
  url: https://developer.okta.com/docs/api/getting_started/design_principles.html
servers:
- url: https://your-subdomain.okta.com
tags:
- name: User
- name: Application
- name: AuthorizationServer
- name: Group
- name: IdentityProvider
- name: Brand
- name: Org
- name: Policy
- name: UserFactor
- name: EventHook
- name: InlineHook
- name: TrustedOrigin
- name: NetworkZone
- name: Authenticator
- name: Domain
- name: UserType
- name: Subscription
- name: Template
- name: Feature
- name: UserSchema
- name: LinkedObject
- name: Session
- name: ProfileMapping
- name: GroupSchema
- name: ThreatInsight
- name: Log
paths:
  /api/v1/apps:
    get:
      description: Enumerates apps added to your organization with pagination. A subset
        of apps can be returned that match a supported filter expression or query.
      operationId: Application_listApps
      parameters:
      - explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the pagination cursor for the next page of apps
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the number of results for a page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: -1
          example: -1
          format: int32
          type: integer
          x-konfig-original-example: -1
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-apps-get-parameters-2-schema
        style: form
      - description: "Filters apps by status, user.id, group.id or credentials.signing.kid\
          \ expression"
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: Traverses users link relationship and optionally embeds Application
          User resource
        explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: includeNonDeleted
        required: false
        schema:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-apps-get-parameters-5-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationListAppsResponse'
          description: Success
      security:
      - api_token: []
      summary: List Applications
      tags:
      - Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-apps
      x-accepts: application/json
    post:
      description: Adds a new application to your Okta organization.
      operationId: Application_createNew
      parameters:
      - description: Executes activation lifecycle operation when creating the app
        explode: true
        in: query
        name: activate
        required: false
        schema:
          default: true
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-apps-post-parameters-0-schema
        style: form
      - explode: false
        in: header
        name: OktaAccessGateway-Agent
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Application'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: Success
      security:
      - api_token: []
      summary: Add Application
      tags:
      - Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-apps
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/apps/{appId}:
    delete:
      description: Removes an inactive application.
      operationId: Application_removeInactive
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
      security:
      - api_token: []
      summary: Delete Application
      tags:
      - Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-apps-appId
      x-accepts: application/json
    get:
      description: Fetches an application from your Okta organization by `id`.
      operationId: Application_getById
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: Success
      security:
      - api_token: []
      summary: Get Application
      tags:
      - Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-apps-appId
      x-accepts: application/json
    put:
      description: Updates an application in your organization.
      operationId: Application_updateApplicationInOrg
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Application'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: Success
      security:
      - api_token: []
      summary: Update Application
      tags:
      - Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-v1-apps-appId
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/apps/{appId}/connections/default:
    get:
      description: Get default Provisioning Connection for application
      operationId: Application_getDefaultProvisioningConnection
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningConnection'
          description: Success
        "404":
          description: Not Found
      security:
      - api_token: []
      summary: Fetches the default Provisioning Connection for an application.
      tags:
      - Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-apps-appId-connections-default
      x-accepts: application/json
    post:
      description: Set default Provisioning Connection for application
      operationId: Application_setDefaultProvisioningConnection
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: activate
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvisioningConnectionRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningConnection'
          description: Created
        "400":
          description: Bad Request
        "404":
          description: Not Found
      security:
      - api_token: []
      summary: Sets the default Provisioning Connection for an application.
      tags:
      - Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-apps-appId-connections-default
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/apps/{appId}/connections/default/lifecycle/activate:
    post:
      description: Activates the default Provisioning Connection for an application.
      operationId: Application_activateDefaultProvisioningConnection
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
      security:
      - api_token: []
      summary: Activate default Provisioning Connection for application
      tags:
      - Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-apps-appId-connections-default-lifecycle-activate
      x-accepts: application/json
  /api/v1/apps/{appId}/connections/default/lifecycle/deactivate:
    post:
      description: Deactivates the default Provisioning Connection for an application.
      operationId: Application_deactivateDefaultProvisioningConnection
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
      security:
      - api_token: []
      summary: Deactivate default Provisioning Connection for application
      tags:
      - Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-apps-appId-connections-default-lifecycle-deactivate
      x-accepts: application/json
  /api/v1/apps/{appId}/credentials/csrs:
    get:
      description: Enumerates Certificate Signing Requests for an application
      operationId: Application_listCsrsForApplication
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationListCsrsForApplicationResponse'
          description: Success
      security:
      - api_token: []
      summary: List Certificate Signing Requests for Application
      tags:
      - Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-apps-appId-credentials-csrs
      x-accepts: application/json
    post:
      description: Generates a new key pair and returns the Certificate Signing Request
        for it.
      operationId: Application_generateCsrForApplication
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/CsrMetadata'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Csr'
          description: Created
      security:
      - api_token: []
      summary: Generate Certificate Signing Request for Application
      tags:
      - Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-apps-appId-credentials-csrs
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/apps/{appId}/credentials/csrs/{csrId}:
    delete:
      operationId: Application_deleteCsrById
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: csrId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      tags:
      - Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-apps-appId-credentials-csrs-csrId
      x-accepts: application/json
    get:
      operationId: Application_getCredentialsCsrs
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: csrId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Csr'
          description: Success
      security:
      - api_token: []
      tags:
      - Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-apps-appId-credentials-csrs-csrId
      x-accepts: application/json
  /api/v1/apps/{appId}/credentials/csrs/{csrId}/lifecycle/publish:
    post:
      operationId: Application_publishCsrLifecycle
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: csrId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
          description: Created
      security:
      - api_token: []
      tags:
      - Application
      x-okta-multi-operation:
      - operationId: publishCerCert
        parameters:
        - in: body
          name: certificate
          required: true
          type: string
        consumes:
        - application/x-x509-ca-cert
        encoding: base64
      - operationId: publishBinaryCerCert
        parameters:
        - format: binary
          in: body
          name: certificate
          required: true
          type: string
        consumes:
        - application/x-x509-ca-cert
      - operationId: publishDerCert
        parameters:
        - in: body
          name: certificate
          required: true
          type: string
        consumes:
        - application/pkix-cert
        encoding: base64
      - operationId: publishBinaryDerCert
        parameters:
        - format: binary
          in: body
          name: certificate
          required: true
          type: string
        consumes:
        - application/pkix-cert
      - operationId: publishBinaryPemCert
        parameters:
        - format: binary
          in: body
          name: certificate
          required: true
          type: string
        consumes:
        - application/x-pem-file
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-apps-appId-credentials-csrs-csrId-lifecycle-publish
      x-accepts: application/json
  /api/v1/apps/{appId}/credentials/keys:
    get:
      description: Enumerates key credentials for an application
      operationId: Application_listKeyCredentials
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationListKeyCredentialsResponse'
          description: Success
      security:
      - api_token: []
      summary: List Key Credentials for Application
      tags:
      - Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-apps-appId-credentials-keys
      x-accepts: application/json
  /api/v1/apps/{appId}/credentials/keys/generate:
    post:
      description: Generates a new X.509 certificate for an application key credential
      operationId: Application_generateX509Certificate
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: validityYears
        required: false
        schema:
          type: integer
        style: form
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
          description: Created
      security:
      - api_token: []
      tags:
      - Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-apps-appId-credentials-keys-generate
      x-accepts: application/json
  /api/v1/apps/{appId}/credentials/keys/{keyId}:
    get:
      description: Gets a specific application key credential by kid
      operationId: Application_getKeyCredential
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: keyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
          description: Success
      security:
      - api_token: []
      summary: Get Key Credential for Application
      tags:
      - Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-apps-appId-credentials-keys-keyId
      x-accepts: application/json
  /api/v1/apps/{appId}/credentials/keys/{keyId}/clone:
    post:
      description: Clones a X.509 certificate for an application key credential from
        a source application to target application.
      operationId: Application_cloneApplicationKeyCredential
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: keyId
        required: true
        schema:
          type: string
        style: simple
      - description: Unique key of the target Application
        explode: true
        in: query
        name: targetAid
        required: true
        schema:
          type: string
        style: form
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
          description: Created
      security:
      - api_token: []
      summary: Clone Application Key Credential
      tags:
      - Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-apps-appId-credentials-keys-keyId-clone
      x-accepts: application/json
  /api/v1/apps/{appId}/credentials/secrets:
    get:
      description: Enumerates the client's collection of secrets
      operationId: Application_listClientSecrets
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationListClientSecretsResponse'
          description: Success
      security:
      - api_token: []
      summary: List client secrets
      tags:
      - Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-apps-appId-credentials-secrets
      x-accepts: application/json
    post:
      description: Adds a new secret to the client's collection of secrets.
      operationId: Application_addClientSecret
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientSecretMetadata'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientSecret'
          description: Created
      security:
      - api_token: []
      summary: Add new client secret
      tags:
      - Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-apps-appId-credentials-secrets
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/apps/{appId}/credentials/secrets/{secretId}:
    delete:
      description: Removes a secret from the client's collection of secrets.
      operationId: Application_removeSecret
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: secretId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      tags:
      - Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-apps-appId-credentials-secrets-secretId
      x-accepts: application/json
    get:
      description: Gets a specific client secret by secretId
      operationId: Application_getClientSecret
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: secretId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientSecret'
          description: Success
      security:
      - api_token: []
      summary: Get client secret
      tags:
      - Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-apps-appId-credentials-secrets-secretId
      x-accepts: application/json
  /api/v1/apps/{appId}/credentials/secrets/{secretId}/lifecycle/activate:
    post:
      description: Activates a specific client secret by secretId
      operationId: Application_activateClientSecret
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: secretId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientSecret'
          description: Success
      security:
      - api_token: []
      summary: Activate a client secret
      tags:
      - Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-apps-appId-credentials-secrets-secretId-lifecycle-activate
      x-accepts: application/json
  /api/v1/apps/{appId}/credentials/secrets/{secretId}/lifecycle/deactivate:
    post:
      description: Deactivates a specific client secret by secretId
      operationId: Application_deactivateClientSecretById
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: secretId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientSecret'
          description: Success
      security:
      - api_token: []
      summary: Deactivate a client secret
      tags:
      - Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-apps-appId-credentials-secrets-secretId-lifecycle-deactivate
      x-accepts: application/json
  /api/v1/apps/{appId}/features:
    get:
      description: List Features for application
      operationId: Application_listFeatures
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationListFeaturesResponse'
          description: Success
        "404":
          description: Not Found
      security:
      - api_token: []
      summary: Fetches the Feature objects for an application.
      tags:
      - Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-apps-appId-features
      x-accepts: application/json
  /api/v1/apps/{appId}/features/{name}:
    get:
      description: Fetches a Feature object for an application.
      operationId: Application_getFeature
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationFeature'
          description: Success
        "404":
          description: Not Found
      security:
      - api_token: []
      summary: Fetches a Feature object for an application.
      tags:
      - Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-apps-appId-features-name
      x-accepts: application/json
    put:
      description: Updates a Feature object for an application.
      operationId: Application_updateFeature
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CapabilitiesObject'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationFeature'
          description: Success
        "404":
          description: Not Found
      security:
      - api_token: []
      summary: Updates a Feature object for an application.
      tags:
      - Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-v1-apps-appId-features-name
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/apps/{appId}/grants:
    get:
      description: Lists all scope consent grants for the application
      operationId: Application_listScopeConsentGrants
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationListScopeConsentGrantsResponse'
          description: Success
      security:
      - api_token: []
      tags:
      - Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-apps-appId-grants
      x-accepts: application/json
    post:
      description: Grants consent for the application to request an OAuth 2.0 Okta
        scope
      operationId: Application_grantConsentToScope
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuth2ScopeConsentGrant'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2ScopeConsentGrant'
          description: Created
      security:
      - api_token: []
      tags:
      - Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-apps-appId-grants
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/apps/{appId}/grants/{grantId}:
    delete:
      description: Revokes permission for the application to request the given scope
      operationId: Application_revokePermission
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: grantId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      tags:
      - Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-apps-appId-grants-grantId
      x-accepts: application/json
    get:
      description: Fetches a single scope consent grant for the application
      operationId: Application_getSingleScopeConsentGrant
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: grantId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2ScopeConsentGrant'
          description: Success
      security:
      - api_token: []
      tags:
      - Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-apps-appId-grants-grantId
      x-accepts: application/json
  /api/v1/apps/{appId}/groups:
    get:
      description: Enumerates group assignments for an application.
      operationId: Application_listGroupsAssigned
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the pagination cursor for the next page of assignments
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the number of results for a page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: -1
          example: -1
          format: int32
          type: integer
          x-konfig-original-example: -1
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-apps-appId-groups-get-parameters-3-schema
        style: form
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationListGroupsAssignedResponse'
          description: Success
      security:
      - api_token: []
      summary: List Groups Assigned to Application
      tags:
      - Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-apps-appId-groups
      x-accepts: application/json
  /api/v1/apps/{appId}/groups/{groupId}:
    delete:
      description: Removes a group assignment from an application.
      operationId: Application_removeGroupAssignment
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      summary: Remove Group from Application
      tags:
      - Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-apps-appId-groups-groupId
      x-accepts: application/json
    get:
      description: Fetches an application group assignment
      operationId: Application_getGroupAssignment
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGroupAssignment'
          description: Success
      security:
      - api_token: []
      summary: Get Assigned Group for Application
      tags:
      - Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-apps-appId-groups-groupId
      x-accepts: application/json
    put:
      description: Assigns a group to an application
      operationId: Application_assignGroupTo
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationGroupAssignment'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGroupAssignment'
          description: Success
      security:
      - api_token: []
      summary: Assign Group to Application
      tags:
      - Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-v1-apps-appId-groups-groupId
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/apps/{appId}/lifecycle/activate:
    post:
      description: Activates an inactive application.
      operationId: Application_activateInactive
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
      security:
      - api_token: []
      summary: Activate Application
      tags:
      - Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-apps-appId-lifecycle-activate
      x-accepts: application/json
  /api/v1/apps/{appId}/lifecycle/deactivate:
    post:
      description: Deactivates an active application.
      operationId: Application_deactivateLifecycle
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
      security:
      - api_token: []
      summary: Deactivate Application
      tags:
      - Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-apps-appId-lifecycle-deactivate
      x-accepts: application/json
  /api/v1/apps/{appId}/logo:
    post:
      description: Update the logo for an application.
      operationId: Application_updateLogo
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/uploadApplicationLogo'
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "404":
          description: Not Found
      security:
      - api_token: []
      summary: "The file must be in PNG, JPG, or GIF format, and less than 1 MB in\
        \ size. For best results use landscape orientation, a transparent background,\
        \ and a minimum size of 420px by 120px to prevent upscaling."
      tags:
      - Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-apps-appId-logo
      x-content-type: multipart/form-data
      x-accepts: application/json
  /api/v1/apps/{appId}/policies/{policyId}:
    put:
      description: Assign an application to a specific policy. This unassigns the
        application from its currently assigned policy.
      operationId: Application_assignPolicyToApplication
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: policyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      summary: Update application policy
      tags:
      - Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-v1-apps-appId-policies-policyId
      x-accepts: application/json
  /api/v1/apps/{appId}/sso/saml/metadata:
    get:
      description: Previews SAML metadata based on a specific key credential for an
        application
      operationId: Application_previewSamlAppMetadata
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - description: unique key identifier of an Application Key Credential
        explode: true
        in: query
        name: kid
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ApplicationPreviewSamlAppMetadataResponse'
          description: Success
      security:
      - api_token: []
      tags:
      - Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-apps-appId-sso-saml-metadata
      x-accepts: application/xml
  /api/v1/apps/{appId}/tokens:
    delete:
      description: Revokes all tokens for the specified application
      operationId: Application_revokeAllTokens
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      tags:
      - Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-apps-appId-tokens
      x-accepts: application/json
    get:
      description: Lists all tokens for the application
      operationId: Application_listTokens
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          example: 20
          format: int32
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-apps-appId-tokens-get-parameters-3-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationListTokensResponse'
          description: Success
      security:
      - api_token: []
      tags:
      - Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-apps-appId-tokens
      x-accepts: application/json
  /api/v1/apps/{appId}/tokens/{tokenId}:
    delete:
      description: Revokes the specified token for the specified application
      operationId: Application_revokeToken
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tokenId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      tags:
      - Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-apps-appId-tokens-tokenId
      x-accepts: application/json
    get:
      description: Gets a token for the specified application
      operationId: Application_getToken
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tokenId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Token'
          description: Success
      security:
      - api_token: []
      tags:
      - Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-apps-appId-tokens-tokenId
      x-accepts: application/json
  /api/v1/apps/{appId}/users:
    get:
      description: "Enumerates all assigned [application users](https://raw.githubusercontent.com)\
        \ for an application."
      operationId: Application_listAssignedUsers
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: query_scope
        required: false
        schema:
          type: string
        style: form
      - description: specifies the pagination cursor for the next page of assignments
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: specifies the number of results for a page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: -1
          example: -1
          format: int32
          type: integer
          x-konfig-original-example: -1
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-apps-appId-users-get-parameters-4-schema
        style: form
      - explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationListAssignedUsersResponse'
          description: Success
      security:
      - api_token: []
      summary: List Users Assigned to Application
      tags:
      - Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-apps-appId-users
      x-accepts: application/json
    post:
      description: "Assigns an user to an application with [credentials](https://raw.githubusercontent.com)\
        \ and an app-specific [profile](https://raw.githubusercontent.com). Profile\
        \ mappings defined for the application are first applied before applying any\
        \ profile properties specified in the request."
      operationId: Application_assignUserToApplication
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/AppUser'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUser'
          description: Success
      security:
      - api_token: []
      summary: Assign User to Application for SSO & Provisioning
      tags:
      - Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-apps-appId-users
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/apps/{appId}/users/{userId}:
    delete:
      description: Removes an assignment for a user from an application.
      operationId: Application_removeUserFrom
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: sendEmail
        required: false
        schema:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-apps-appId-users-userId-delete-parameters-2-schema
        style: form
        x-okta-added-version: 1.5.0
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      summary: Remove User from Application
      tags:
      - Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-apps-appId-users-userId
      x-accepts: application/json
    get:
      description: Fetches a specific user assignment for application by `id`.
      operationId: Application_getSpecificUserAssignment
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUser'
          description: Success
      security:
      - api_token: []
      summary: Get Assigned User for Application
      tags:
      - Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-apps-appId-users-userId
      x-accepts: application/json
    post:
      description: Updates a user's profile for an application
      operationId: Application_updateProfileForUser
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/AppUser'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUser'
          description: Success
      security:
      - api_token: []
      summary: Update Application Profile for Assigned User
      tags:
      - Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-apps-appId-users-userId
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/authenticators:
    get:
      description: List Authenticators
      operationId: Authenticator_listAllAvailable
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticatorListAllAvailableResponse'
          description: Success
      security:
      - api_token: []
      summary: Lists all available Authenticators
      tags:
      - Authenticator
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-authenticators
      x-accepts: application/json
    post:
      description: Create Authenticator
      operationId: Authenticator_createNew
      parameters:
      - explode: true
        in: query
        name: activate
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        $ref: '#/components/requestBodies/Authenticator'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authenticator'
          description: Success
      security:
      - api_token: []
      summary: Create an Authenticator
      tags:
      - Authenticator
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-authenticators
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/authenticators/{authenticatorId}:
    get:
      description: Success
      operationId: Authenticator_getSuccess
      parameters:
      - explode: false
        in: path
        name: authenticatorId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authenticator'
          description: Success
      security:
      - api_token: []
      tags:
      - Authenticator
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-authenticators-authenticatorId
      x-accepts: application/json
    put:
      description: Updates an authenticator
      operationId: Authenticator_updateAuthenticator
      parameters:
      - explode: false
        in: path
        name: authenticatorId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Authenticator'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authenticator'
          description: Success
      security:
      - api_token: []
      summary: Update Authenticator
      tags:
      - Authenticator
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-v1-authenticators-authenticatorId
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/authenticators/{authenticatorId}/lifecycle/activate:
    post:
      description: Success
      operationId: Authenticator_activateLifecycleSuccess
      parameters:
      - explode: false
        in: path
        name: authenticatorId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authenticator'
          description: Success
      security:
      - api_token: []
      tags:
      - Authenticator
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-authenticators-authenticatorId-lifecycle-activate
      x-accepts: application/json
  /api/v1/authenticators/{authenticatorId}/lifecycle/deactivate:
    post:
      description: Success
      operationId: Authenticator_deactivateLifecycleSuccess
      parameters:
      - explode: false
        in: path
        name: authenticatorId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authenticator'
          description: Success
      security:
      - api_token: []
      tags:
      - Authenticator
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-authenticators-authenticatorId-lifecycle-deactivate
      x-accepts: application/json
  /api/v1/authorizationServers:
    get:
      description: Success
      operationId: AuthorizationServer_listServers
      parameters:
      - explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServerListServersResponse'
          description: Success
      security:
      - api_token: []
      tags:
      - AuthorizationServer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-authorizationServers
      x-accepts: application/json
    post:
      description: Success
      operationId: AuthorizationServer_createNewServer
      requestBody:
        $ref: '#/components/requestBodies/AuthorizationServer'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServer'
          description: Success
        "201":
          description: Created
      security:
      - api_token: []
      tags:
      - AuthorizationServer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-authorizationServers
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/authorizationServers/{authServerId}:
    delete:
      description: Success
      operationId: AuthorizationServer_deleteSuccess
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      tags:
      - AuthorizationServer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-authorizationServers-authServerId
      x-accepts: application/json
    get:
      description: Success
      operationId: AuthorizationServer_getById
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServer'
          description: Success
      security:
      - api_token: []
      tags:
      - AuthorizationServer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-authorizationServers-authServerId
      x-accepts: application/json
    put:
      description: Success
      operationId: AuthorizationServer_updateById
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/AuthorizationServer'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServer'
          description: Success
      security:
      - api_token: []
      tags:
      - AuthorizationServer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-v1-authorizationServers-authServerId
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/authorizationServers/{authServerId}/claims:
    get:
      description: Success
      operationId: AuthorizationServer_getClaims
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServerGetClaimsResponse'
          description: Success
      security:
      - api_token: []
      tags:
      - AuthorizationServer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-authorizationServers-authServerId-claims
      x-accepts: application/json
    post:
      description: Success
      operationId: AuthorizationServer_createClaims
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/OAuth2Claim'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Claim'
          description: Created
        "201":
          description: Success
      security:
      - api_token: []
      tags:
      - AuthorizationServer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-authorizationServers-authServerId-claims
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/authorizationServers/{authServerId}/claims/{claimId}:
    delete:
      description: Success
      operationId: AuthorizationServer_deleteClaim
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: claimId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      tags:
      - AuthorizationServer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-authorizationServers-authServerId-claims-claimId
      x-accepts: application/json
    get:
      description: Success
      operationId: AuthorizationServer_getClaims
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: claimId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Claim'
          description: Success
      security:
      - api_token: []
      tags:
      - AuthorizationServer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-authorizationServers-authServerId-claims-claimId
      x-accepts: application/json
    put:
      description: Success
      operationId: AuthorizationServer_updateClaimSuccess
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: claimId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/OAuth2Claim'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Claim'
          description: Success
      security:
      - api_token: []
      tags:
      - AuthorizationServer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-v1-authorizationServers-authServerId-claims-claimId
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/authorizationServers/{authServerId}/clients:
    get:
      description: Success
      operationId: AuthorizationServer_listClients
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServerListClientsResponse'
          description: Success
      security:
      - api_token: []
      tags:
      - AuthorizationServer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-authorizationServers-authServerId-clients
      x-accepts: application/json
  /api/v1/authorizationServers/{authServerId}/clients/{clientId}/tokens:
    delete:
      description: Success
      operationId: AuthorizationServer_deleteClientToken
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: clientId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      tags:
      - AuthorizationServer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-authorizationServers-authServerId-clients-clientId-tokens
      x-accepts: application/json
    get:
      description: Success
      operationId: AuthorizationServer_getClientTokens
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: clientId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: -1
          example: -1
          format: int32
          type: integer
          x-konfig-original-example: -1
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-authorizationServers-authServerId-clients-clientId-tokens-get-parameters-4-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServerGetClientTokensResponse'
          description: Success
      security:
      - api_token: []
      tags:
      - AuthorizationServer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-authorizationServers-authServerId-clients-clientId-tokens
      x-accepts: application/json
  /api/v1/authorizationServers/{authServerId}/clients/{clientId}/tokens/{tokenId}:
    delete:
      description: Success
      operationId: AuthorizationServer_deleteAuthToken
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: clientId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tokenId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      tags:
      - AuthorizationServer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-authorizationServers-authServerId-clients-clientId-tokens-tokenId
      x-accepts: application/json
    get:
      description: Success
      operationId: AuthorizationServer_getClientAuthToken
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: clientId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tokenId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2RefreshToken'
          description: Success
      security:
      - api_token: []
      tags:
      - AuthorizationServer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-authorizationServers-authServerId-clients-clientId-tokens-tokenId
      x-accepts: application/json
  /api/v1/authorizationServers/{authServerId}/credentials/keys:
    get:
      description: Success
      operationId: AuthorizationServer_listCredentialsKeys
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServerListCredentialsKeysResponse'
          description: Success
      security:
      - api_token: []
      tags:
      - AuthorizationServer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-authorizationServers-authServerId-credentials-keys
      x-accepts: application/json
  /api/v1/authorizationServers/{authServerId}/credentials/lifecycle/keyRotate:
    post:
      description: Success
      operationId: AuthorizationServer_rotateKeyLifecycle
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JwkUse'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServerRotateKeyLifecycleResponse'
          description: Success
      security:
      - api_token: []
      tags:
      - AuthorizationServer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-authorizationServers-authServerId-credentials-lifecycle-keyRotate
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/authorizationServers/{authServerId}/lifecycle/activate:
    post:
      description: Success
      operationId: AuthorizationServer_activateLifecycleSuccess
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
      security:
      - api_token: []
      tags:
      - AuthorizationServer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-authorizationServers-authServerId-lifecycle-activate
      x-accepts: application/json
  /api/v1/authorizationServers/{authServerId}/lifecycle/deactivate:
    post:
      description: Success
      operationId: AuthorizationServer_deactivateLifecycle
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
      security:
      - api_token: []
      tags:
      - AuthorizationServer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-authorizationServers-authServerId-lifecycle-deactivate
      x-accepts: application/json
  /api/v1/authorizationServers/{authServerId}/policies:
    get:
      description: Success
      operationId: AuthorizationServer_getPoliciesSuccess
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServerGetPoliciesSuccessResponse'
          description: Success
      security:
      - api_token: []
      tags:
      - AuthorizationServer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-authorizationServers-authServerId-policies
      x-accepts: application/json
    post:
      description: Success
      operationId: AuthorizationServer_createPolicy
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/AuthorizationServerPolicy'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServerPolicy'
          description: Success
        "201":
          description: Created
      security:
      - api_token: []
      tags:
      - AuthorizationServer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-authorizationServers-authServerId-policies
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/authorizationServers/{authServerId}/policies/{policyId}:
    delete:
      description: Success
      operationId: AuthorizationServer_deletePolicyById
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: policyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      tags:
      - AuthorizationServer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-authorizationServers-authServerId-policies-policyId
      x-accepts: application/json
    get:
      description: Success
      operationId: AuthorizationServer_getPolicies
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: policyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServerPolicy'
          description: Success
      security:
      - api_token: []
      tags:
      - AuthorizationServer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-authorizationServers-authServerId-policies-policyId
      x-accepts: application/json
    put:
      description: Success
      operationId: AuthorizationServer_updatePolicySuccess
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: policyId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/AuthorizationServerPolicy'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServerPolicy'
          description: Success
      security:
      - api_token: []
      tags:
      - AuthorizationServer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-v1-authorizationServers-authServerId-policies-policyId
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/authorizationServers/{authServerId}/policies/{policyId}/lifecycle/activate:
    post:
      description: Activate Authorization Server Policy
      operationId: AuthorizationServer_activatePolicyLifecycle
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: policyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
      security:
      - api_token: []
      tags:
      - AuthorizationServer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-authorizationServers-authServerId-policies-policyId-lifecycle-activate
      x-accepts: application/json
  /api/v1/authorizationServers/{authServerId}/policies/{policyId}/lifecycle/deactivate:
    post:
      description: Deactivate Authorization Server Policy
      operationId: AuthorizationServer_deactivatePolicyLifecycle
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: policyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
      security:
      - api_token: []
      tags:
      - AuthorizationServer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-authorizationServers-authServerId-policies-policyId-lifecycle-deactivate
      x-accepts: application/json
  /api/v1/authorizationServers/{authServerId}/policies/{policyId}/rules:
    get:
      description: Enumerates all policy rules for the specified Custom Authorization
        Server and Policy.
      operationId: AuthorizationServer_enumeratePolicyRules
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: policyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServerEnumeratePolicyRulesResponse'
          description: Success
      security:
      - api_token: []
      tags:
      - AuthorizationServer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-authorizationServers-authServerId-policies-policyId-rules
      x-accepts: application/json
    post:
      description: Creates a policy rule for the specified Custom Authorization Server
        and Policy.
      operationId: AuthorizationServer_createPolicyRule
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: policyId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/AuthorizationServerPolicyRule'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServerPolicyRule'
          description: Success
      security:
      - api_token: []
      tags:
      - AuthorizationServer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-authorizationServers-authServerId-policies-policyId-rules
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/authorizationServers/{authServerId}/policies/{policyId}/rules/{ruleId}:
    delete:
      description: Deletes a Policy Rule defined in the specified Custom Authorization
        Server and Policy.
      operationId: AuthorizationServer_deletePolicyRule
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: policyId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ruleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      tags:
      - AuthorizationServer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-authorizationServers-authServerId-policies-policyId-rules-ruleId
      x-accepts: application/json
    get:
      description: Returns a Policy Rule by ID that is defined in the specified Custom
        Authorization Server and Policy.
      operationId: AuthorizationServer_getPolicyRuleById
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: policyId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ruleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServerPolicyRule'
          description: Success
      security:
      - api_token: []
      tags:
      - AuthorizationServer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-authorizationServers-authServerId-policies-policyId-rules-ruleId
      x-accepts: application/json
    put:
      description: Updates the configuration of the Policy Rule defined in the specified
        Custom Authorization Server and Policy.
      operationId: AuthorizationServer_updatePolicyRuleConfiguration
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: policyId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ruleId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/AuthorizationServerPolicyRule'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServerPolicyRule'
          description: Success
      security:
      - api_token: []
      tags:
      - AuthorizationServer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-v1-authorizationServers-authServerId-policies-policyId-rules-ruleId
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/authorizationServers/{authServerId}/policies/{policyId}/rules/{ruleId}/lifecycle/activate:
    post:
      description: Activate Authorization Server Policy Rule
      operationId: AuthorizationServer_activatePolicyRule
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: policyId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ruleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
      security:
      - api_token: []
      tags:
      - AuthorizationServer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-authorizationServers-authServerId-policies-policyId-rules-ruleId-lifecycle-activate
      x-accepts: application/json
  /api/v1/authorizationServers/{authServerId}/policies/{policyId}/rules/{ruleId}/lifecycle/deactivate:
    post:
      description: Deactivate Authorization Server Policy Rule
      operationId: AuthorizationServer_deactivatePolicyRule
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: policyId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ruleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
      security:
      - api_token: []
      tags:
      - AuthorizationServer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-authorizationServers-authServerId-policies-policyId-rules-ruleId-lifecycle-deactivate
      x-accepts: application/json
  /api/v1/authorizationServers/{authServerId}/scopes:
    get:
      description: Success
      operationId: AuthorizationServer_getScopes
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: -1
          example: -1
          format: int32
          type: integer
          x-konfig-original-example: -1
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-authorizationServers-authServerId-scopes-get-parameters-4-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServerGetScopesResponse'
          description: Success
      security:
      - api_token: []
      tags:
      - AuthorizationServer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-authorizationServers-authServerId-scopes
      x-accepts: application/json
    post:
      description: Success
      operationId: AuthorizationServer_createScope
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/OAuth2Scope'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Scope'
          description: Success
        "201":
          description: Success
      security:
      - api_token: []
      tags:
      - AuthorizationServer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-authorizationServers-authServerId-scopes
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/authorizationServers/{authServerId}/scopes/{scopeId}:
    delete:
      description: Success
      operationId: AuthorizationServer_deleteScope
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: scopeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      tags:
      - AuthorizationServer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-authorizationServers-authServerId-scopes-scopeId
      x-accepts: application/json
    get:
      description: Success
      operationId: AuthorizationServer_getScopes
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: scopeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Scope'
          description: Success
      security:
      - api_token: []
      tags:
      - AuthorizationServer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-authorizationServers-authServerId-scopes-scopeId
      x-accepts: application/json
    put:
      description: Success
      operationId: AuthorizationServer_updateScopeSuccess
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: scopeId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/OAuth2Scope'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Scope'
          description: Success
      security:
      - api_token: []
      tags:
      - AuthorizationServer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-v1-authorizationServers-authServerId-scopes-scopeId
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/brands:
    get:
      description: List all the brands in your org.
      operationId: Brand_getAllBrands
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandGetAllBrandsResponse'
          description: Success
      security:
      - api_token: []
      summary: List Brands
      tags:
      - Brand
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-brands
      x-accepts: application/json
  /api/v1/brands/{brandId}:
    get:
      description: Fetches a brand by `brandId`
      operationId: Brand_getById
      parameters:
      - explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
          description: Success
        "404":
          description: Not Found
      security:
      - api_token: []
      summary: Get Brand
      tags:
      - Brand
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-brands-brandId
      x-accepts: application/json
    put:
      description: Updates a brand by `brandId`
      operationId: Brand_updateByBrandId
      parameters:
      - explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Brand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
          description: Success
        "400":
          description: Bad Request
      security:
      - api_token: []
      summary: Update Brand
      tags:
      - Brand
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-v1-brands-brandId
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/brands/{brandId}/templates/email:
    get:
      description: List email templates in your organization with pagination.
      operationId: Brand_listEmailTemplates
      parameters:
      - explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: Specifies the pagination cursor for the next page of email templates.
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the number of results returned (maximum 200)
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          example: 20
          format: int32
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-brands-brandId-templates-email-get-parameters-2-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandListEmailTemplatesResponse'
          description: Success
      security:
      - api_token: []
      summary: List Email Templates
      tags:
      - Brand
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-brands-brandId-templates-email
      x-accepts: application/json
  /api/v1/brands/{brandId}/templates/email/{templateName}:
    get:
      description: Fetch an email template by templateName
      operationId: Brand_getEmailTemplate
      parameters:
      - explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: templateName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailTemplate'
          description: Success
      security:
      - api_token: []
      summary: Get Email Template
      tags:
      - Brand
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-brands-brandId-templates-email-templateName
      x-accepts: application/json
  /api/v1/brands/{brandId}/templates/email/{templateName}/customizations:
    delete:
      description: Delete all customizations for an email template. Also known as
        “Reset to Default”.
      operationId: Brand_deleteEmailTemplateCustomizations
      parameters:
      - explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: templateName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success
      security:
      - api_token: []
      summary: Delete Email Template Customization
      tags:
      - Brand
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-brands-brandId-templates-email-templateName-customizations
      x-accepts: application/json
    get:
      description: List all email customizations for an email template
      operationId: Brand_listEmailTemplateCustomizations
      parameters:
      - explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: templateName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandListEmailTemplateCustomizationsResponse'
          description: Success
      security:
      - api_token: []
      summary: List Email Template Customization
      tags:
      - Brand
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-brands-brandId-templates-email-templateName-customizations
      x-accepts: application/json
    post:
      description: Create an email customization
      operationId: Brand_createEmailTemplateCustomization
      parameters:
      - explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: templateName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/EmailTemplateCustomizationRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailTemplateCustomization'
          description: Success
        "409":
          description: Conflict
      security:
      - api_token: []
      summary: Create Email Template Customization
      tags:
      - Brand
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-brands-brandId-templates-email-templateName-customizations
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/brands/{brandId}/templates/email/{templateName}/customizations/{customizationId}:
    delete:
      description: Delete an email customization
      operationId: Brand_deleteEmailCustomization
      parameters:
      - explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: templateName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: customizationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "409":
          description: Conflict
      security:
      - api_token: []
      summary: Delete Email Customization
      tags:
      - Brand
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-brands-brandId-templates-email-templateName-customizations-customizationId
      x-accepts: application/json
    get:
      description: Fetch an email customization by id.
      operationId: Brand_getEmailTemplateCustomizationById
      parameters:
      - explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: templateName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: customizationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailTemplateCustomization'
          description: Success
      security:
      - api_token: []
      summary: Get Email Template Customization
      tags:
      - Brand
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-brands-brandId-templates-email-templateName-customizations-customizationId
      x-accepts: application/json
    put:
      description: Update an email customization
      operationId: Brand_updateEmailCustomization
      parameters:
      - explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: templateName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: customizationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/EmailTemplateCustomizationRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailTemplateCustomization'
          description: Success
        "409":
          description: Conflict
      security:
      - api_token: []
      summary: Update Email Customization
      tags:
      - Brand
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-v1-brands-brandId-templates-email-templateName-customizations-customizationId
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/brands/{brandId}/templates/email/{templateName}/customizations/{customizationId}/preview:
    get:
      description: Get a preview of an email template customization.
      operationId: Brand_getEmailCustomizationPreview
      parameters:
      - explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: templateName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: customizationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailTemplateContent'
          description: Success
      security:
      - api_token: []
      summary: Get Preview Content of Email Customization
      tags:
      - Brand
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-brands-brandId-templates-email-templateName-customizations-customizationId-preview
      x-accepts: application/json
  /api/v1/brands/{brandId}/templates/email/{templateName}/default-content:
    get:
      description: Fetch the default content for an email template.
      operationId: Brand_getEmailTemplateDefaultContent
      parameters:
      - explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: templateName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailTemplateContent'
          description: Success
      security:
      - api_token: []
      summary: Get Default Content of Email Template
      tags:
      - Brand
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-brands-brandId-templates-email-templateName-default-content
      x-accepts: application/json
  /api/v1/brands/{brandId}/templates/email/{templateName}/default-content/preview:
    get:
      description: Fetch a preview of an email template's default content by populating
        velocity references with the current user's environment.
      operationId: Brand_getEmailTemplateDefaultContentPreview
      parameters:
      - explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: templateName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailTemplateContent'
          description: Success
      security:
      - api_token: []
      summary: Get Preview of Email Template Default Content
      tags:
      - Brand
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-brands-brandId-templates-email-templateName-default-content-preview
      x-accepts: application/json
  /api/v1/brands/{brandId}/templates/email/{templateName}/test:
    post:
      description: "Send a test email to the current users primary and secondary email\
        \ addresses. The email content is selected based on the following priority:\
        \ An email customization specifically for the users locale. The default language\
        \ of email customizations. The email templates default content."
      operationId: Brand_getEmailTemplateDefaultContentPreview
      parameters:
      - explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: templateName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailTemplateTestRequest'
        required: true
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      summary: Get Preview of Email Template Default Content
      tags:
      - Brand
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-brands-brandId-templates-email-templateName-test
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/brands/{brandId}/themes:
    get:
      description: List all the themes in your brand
      operationId: Brand_getThemes
      parameters:
      - explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandGetThemesResponse'
          description: Success
      security:
      - api_token: []
      summary: Get Brand Themes
      tags:
      - Brand
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-brands-brandId-themes
      x-accepts: application/json
  /api/v1/brands/{brandId}/themes/{themeId}:
    get:
      description: Fetches a theme for a brand
      operationId: Brand_getThemeById
      parameters:
      - explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: themeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThemeResponse'
          description: Success
      security:
      - api_token: []
      summary: Get a theme for a brand
      tags:
      - Brand
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-brands-brandId-themes-themeId
      x-accepts: application/json
    put:
      description: Updates a theme for a brand
      operationId: Brand_updateTheme
      parameters:
      - explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: themeId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Theme'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThemeResponse'
          description: Success
        "400":
          description: Bad Request
        "404":
          description: Not Found
      security:
      - api_token: []
      summary: Update a theme for a brand
      tags:
      - Brand
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-v1-brands-brandId-themes-themeId
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/brands/{brandId}/themes/{themeId}/background-image:
    delete:
      description: Deletes a Theme background image
      operationId: Brand_deleteThemeBackgroundImage
      parameters:
      - explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: themeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
      security:
      - api_token: []
      summary: Deletes a Theme background image
      tags:
      - Brand
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-brands-brandId-themes-themeId-background-image
      x-accepts: application/json
    post:
      description: Updates the background image for your Theme
      operationId: Brand_updateThemeBackgroundImage
      parameters:
      - explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: themeId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/uploadApplicationLogo'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageUploadResponse'
          description: Created
        "400":
          description: Bad Request
        "404":
          description: Not Found
      security:
      - api_token: []
      summary: Updates the background image for your Theme
      tags:
      - Brand
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-brands-brandId-themes-themeId-background-image
      x-content-type: multipart/form-data
      x-accepts: application/json
  /api/v1/brands/{brandId}/themes/{themeId}/favicon:
    delete:
      description: Deletes a Theme favicon. The org then uses the Okta default favicon.
      operationId: Brand_deleteThemeFavicon
      parameters:
      - explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: themeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
      security:
      - api_token: []
      summary: Deletes a Theme favicon. The org then uses the Okta default favicon.
      tags:
      - Brand
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-brands-brandId-themes-themeId-favicon
      x-accepts: application/json
    post:
      description: Updates the favicon for your theme
      operationId: Brand_updateThemeFavicon
      parameters:
      - explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: themeId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/uploadApplicationLogo'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageUploadResponse'
          description: Created
        "400":
          description: Bad Request
        "404":
          description: Not Found
      security:
      - api_token: []
      summary: Updates the favicon for your theme
      tags:
      - Brand
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-brands-brandId-themes-themeId-favicon
      x-content-type: multipart/form-data
      x-accepts: application/json
  /api/v1/brands/{brandId}/themes/{themeId}/logo:
    delete:
      description: Deletes a Theme logo. The org then uses the Okta default logo.
      operationId: Brand_deleteThemeLogo
      parameters:
      - explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: themeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
      security:
      - api_token: []
      summary: Deletes a Theme logo. The org then uses the Okta default logo.
      tags:
      - Brand
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-brands-brandId-themes-themeId-logo
      x-accepts: application/json
    post:
      description: Updates the logo for your Theme
      operationId: Brand_updateThemeLogo
      parameters:
      - explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: themeId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/uploadApplicationLogo'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageUploadResponse'
          description: Success
        "400":
          description: Bad Request
        "404":
          description: Not Found
      security:
      - api_token: []
      summary: Update a themes logo
      tags:
      - Brand
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-brands-brandId-themes-themeId-logo
      x-content-type: multipart/form-data
      x-accepts: application/json
  /api/v1/domains:
    get:
      description: List all verified custom Domains for the org.
      operationId: Domain_listVerifiedCustom
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainListResponse'
          description: Success
      security:
      - api_token: []
      summary: List Domains
      tags:
      - Domain
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-domains
      x-accepts: application/json
    post:
      description: Creates your domain.
      operationId: Domain_createNewDomain
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Domain'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
          description: Success
      security:
      - api_token: []
      summary: Create Domain
      tags:
      - Domain
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-domains
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/domains/{domainId}:
    delete:
      description: Deletes a Domain by `id`.
      operationId: Domain_removeById
      parameters:
      - explode: false
        in: path
        name: domainId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      summary: Delete Domain
      tags:
      - Domain
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-domains-domainId
      x-accepts: application/json
    get:
      description: Fetches a Domain by `id`.
      operationId: Domain_getById
      parameters:
      - explode: false
        in: path
        name: domainId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
          description: Success
      security:
      - api_token: []
      summary: Get Domain
      tags:
      - Domain
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-domains-domainId
      x-accepts: application/json
  /api/v1/domains/{domainId}/certificate:
    put:
      description: Creates the Certificate for the Domain.
      operationId: Domain_createCertificate
      parameters:
      - explode: false
        in: path
        name: domainId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainCertificate'
        required: true
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      summary: Create Certificate
      tags:
      - Domain
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-v1-domains-domainId-certificate
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/domains/{domainId}/verify:
    post:
      description: Verifies the Domain by `id`.
      operationId: Domain_verifyById
      parameters:
      - explode: false
        in: path
        name: domainId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
          description: Success
      security:
      - api_token: []
      summary: Verify Domain
      tags:
      - Domain
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-domains-domainId-verify
      x-accepts: application/json
  /api/v1/eventHooks:
    get:
      description: Success
      operationId: EventHook_listSuccessEvents
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHookListSuccessEventsResponse'
          description: Success
      security:
      - api_token: []
      tags:
      - EventHook
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-eventHooks
      x-accepts: application/json
    post:
      description: Success
      operationId: EventHook_createSuccess
      requestBody:
        $ref: '#/components/requestBodies/EventHook'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHook'
          description: Success
      security:
      - api_token: []
      tags:
      - EventHook
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-eventHooks
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/eventHooks/{eventHookId}:
    delete:
      description: Success
      operationId: EventHook_removeSuccessEvent
      parameters:
      - explode: false
        in: path
        name: eventHookId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      tags:
      - EventHook
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-eventHooks-eventHookId
      x-accepts: application/json
    get:
      description: Success
      operationId: EventHook_getSuccessEvent
      parameters:
      - explode: false
        in: path
        name: eventHookId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHook'
          description: Success
      security:
      - api_token: []
      tags:
      - EventHook
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-eventHooks-eventHookId
      x-accepts: application/json
    put:
      description: Success
      operationId: EventHook_updateSuccessEvent
      parameters:
      - explode: false
        in: path
        name: eventHookId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/EventHook'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHook'
          description: Success
      security:
      - api_token: []
      tags:
      - EventHook
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-v1-eventHooks-eventHookId
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/eventHooks/{eventHookId}/lifecycle/activate:
    post:
      description: Success
      operationId: EventHook_activateLifecycleSuccess
      parameters:
      - explode: false
        in: path
        name: eventHookId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHook'
          description: Success
      security:
      - api_token: []
      tags:
      - EventHook
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-eventHooks-eventHookId-lifecycle-activate
      x-accepts: application/json
  /api/v1/eventHooks/{eventHookId}/lifecycle/deactivate:
    post:
      description: Success
      operationId: EventHook_deactivateLifecycleEvent
      parameters:
      - explode: false
        in: path
        name: eventHookId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHook'
          description: Success
      security:
      - api_token: []
      tags:
      - EventHook
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-eventHooks-eventHookId-lifecycle-deactivate
      x-accepts: application/json
  /api/v1/eventHooks/{eventHookId}/lifecycle/verify:
    post:
      description: Success
      operationId: EventHook_verifyLifecycleSuccess
      parameters:
      - explode: false
        in: path
        name: eventHookId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHook'
          description: Success
      security:
      - api_token: []
      tags:
      - EventHook
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-eventHooks-eventHookId-lifecycle-verify
      x-accepts: application/json
  /api/v1/features:
    get:
      description: Success
      operationId: Feature_getSuccess
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureGetSuccessResponse'
          description: Success
      security:
      - api_token: []
      tags:
      - Feature
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-features
      x-accepts: application/json
  /api/v1/features/{featureId}:
    get:
      description: Success
      operationId: Feature_getSuccessById
      parameters:
      - explode: false
        in: path
        name: featureId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
          description: Success
      security:
      - api_token: []
      tags:
      - Feature
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-features-featureId
      x-accepts: application/json
  /api/v1/features/{featureId}/dependencies:
    get:
      description: Success
      operationId: Feature_listDependencies
      parameters:
      - explode: false
        in: path
        name: featureId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureListDependenciesResponse'
          description: Success
      security:
      - api_token: []
      tags:
      - Feature
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-features-featureId-dependencies
      x-accepts: application/json
  /api/v1/features/{featureId}/dependents:
    get:
      description: Success
      operationId: Feature_listDependents
      parameters:
      - explode: false
        in: path
        name: featureId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureListDependentsResponse'
          description: Success
      security:
      - api_token: []
      tags:
      - Feature
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-features-featureId-dependents
      x-accepts: application/json
  /api/v1/features/{featureId}/{lifecycle}:
    post:
      description: Success
      operationId: Feature_createLifecycleSuccess
      parameters:
      - explode: false
        in: path
        name: featureId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: lifecycle
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: mode
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
          description: Success
      security:
      - api_token: []
      tags:
      - Feature
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-features-featureId-lifecycle
      x-accepts: application/json
  /api/v1/groups:
    get:
      description: Enumerates groups in your organization with pagination. A subset
        of groups can be returned that match a supported filter expression or query.
      operationId: Group_list
      parameters:
      - description: Searches the name property of groups for matching value
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Filter expression for groups
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the pagination cursor for the next page of groups
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the number of group results in a page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10000
          example: 10000
          format: int32
          type: integer
          x-konfig-original-example: 10000
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-groups-get-parameters-3-schema
        style: form
      - description: "If specified, it causes additional metadata to be included in\
          \ the response."
        explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      - description: "Searches for groups with a supported filtering expression for\
          \ all attributes except for _embedded, _links, and objectClass"
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupListResponse'
          description: Success
      security:
      - api_token: []
      summary: List Groups
      tags:
      - Group
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-groups
      x-accepts: application/json
    post:
      description: Adds a new group with `OKTA_GROUP` type to your organization.
      operationId: Group_createNewGroup
      requestBody:
        $ref: '#/components/requestBodies/Group'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: Success
      security:
      - api_token: []
      summary: Add Group
      tags:
      - Group
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-groups
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/groups/rules:
    get:
      description: Lists all group rules for your organization.
      operationId: Group_getAllRules
      parameters:
      - description: Specifies the number of rule results in a page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          example: 50
          format: int32
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-groups-rules-get-parameters-0-schema
        style: form
      - description: Specifies the pagination cursor for the next page of rules
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the keyword to search fules for
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "If specified as `groupIdToGroupNameMap`, then show group names"
        explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
        x-okta-added-version: 1.3.0
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupGetAllRulesResponse'
          description: Success
      security:
      - api_token: []
      summary: List Group Rules
      tags:
      - Group
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-groups-rules
      x-accepts: application/json
    post:
      description: Creates a group rule to dynamically add users to the specified
        group if they match the condition
      operationId: Group_addRule
      requestBody:
        $ref: '#/components/requestBodies/GroupRule'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupRule'
          description: Success
      security:
      - api_token: []
      summary: Create Group Rule
      tags:
      - Group
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-groups-rules
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/groups/rules/{ruleId}:
    delete:
      description: Removes a specific group rule by id from your organization
      operationId: Group_removeRuleById
      parameters:
      - explode: false
        in: path
        name: ruleId
        required: true
        schema:
          type: string
        style: simple
      - description: Indicates whether to keep or remove users from groups assigned
          by this rule.
        explode: true
        in: query
        name: removeUsers
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "202":
          description: Accepted
      security:
      - api_token: []
      summary: Delete a group Rule
      tags:
      - Group
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-groups-rules-ruleId
      x-accepts: application/json
    get:
      description: Fetches a specific group rule by id from your organization
      operationId: Group_getGroupRuleById
      parameters:
      - explode: false
        in: path
        name: ruleId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupRule'
          description: Success
      security:
      - api_token: []
      summary: Get Group Rule
      tags:
      - Group
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-groups-rules-ruleId
      x-accepts: application/json
    put:
      description: Updates a group rule. Only `INACTIVE` rules can be updated.
      operationId: Group_updateRule
      parameters:
      - explode: false
        in: path
        name: ruleId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/GroupRule'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupRule'
          description: Success
      security:
      - api_token: []
      tags:
      - Group
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-v1-groups-rules-ruleId
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/groups/rules/{ruleId}/lifecycle/activate:
    post:
      description: Activates a specific group rule by id from your organization
      operationId: Group_activateRuleLifecycle
      parameters:
      - explode: false
        in: path
        name: ruleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      summary: Activate a group Rule
      tags:
      - Group
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-groups-rules-ruleId-lifecycle-activate
      x-accepts: application/json
  /api/v1/groups/rules/{ruleId}/lifecycle/deactivate:
    post:
      description: Deactivates a specific group rule by id from your organization
      operationId: Group_deactivateRuleLifecycle
      parameters:
      - explode: false
        in: path
        name: ruleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      summary: Deactivate a group Rule
      tags:
      - Group
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-groups-rules-ruleId-lifecycle-deactivate
      x-accepts: application/json
  /api/v1/groups/{groupId}:
    delete:
      description: Removes a group with `OKTA_GROUP` type from your organization.
      operationId: Group_removeOperation
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      summary: Remove Group
      tags:
      - Group
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-groups-groupId
      x-accepts: application/json
    get:
      description: Fetches a group from your organization.
      operationId: Group_getRules
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: Success
      security:
      - api_token: []
      summary: List Group Rules
      tags:
      - Group
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-groups-groupId
      x-accepts: application/json
    put:
      description: Updates the profile for a group with `OKTA_GROUP` type from your
        organization.
      operationId: Group_updateProfile
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Group'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: Success
      security:
      - api_token: []
      summary: Update Group
      tags:
      - Group
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-v1-groups-groupId
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/groups/{groupId}/apps:
    get:
      description: Enumerates all applications that are assigned to a group.
      operationId: Group_listAssignedApps
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      - description: Specifies the pagination cursor for the next page of apps
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the number of app results for a page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          example: 20
          format: int32
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-groups-groupId-apps-get-parameters-2-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupListAssignedAppsResponse'
          description: Success
      security:
      - api_token: []
      summary: List Assigned Applications
      tags:
      - Group
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-groups-groupId-apps
      x-accepts: application/json
  /api/v1/groups/{groupId}/roles:
    get:
      description: Success
      operationId: Group_getRoleList
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupGetRoleListResponse'
          description: Success
      security:
      - api_token: []
      tags:
      - Group
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-groups-groupId-roles
      x-accepts: application/json
    post:
      description: Assigns a Role to a Group
      operationId: Group_assignRoleToGroup
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: disableNotifications
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        $ref: '#/components/requestBodies/AssignRoleRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: Success
        "201":
          description: Success
      security:
      - api_token: []
      tags:
      - Group
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-groups-groupId-roles
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/groups/{groupId}/roles/{roleId}:
    delete:
      description: Unassigns a Role from a Group
      operationId: Group_unassignRole
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      tags:
      - Group
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-groups-groupId-roles-roleId
      x-accepts: application/json
    get:
      description: Success
      operationId: Group_getRoleSuccess
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: Success
      security:
      - api_token: []
      tags:
      - Group
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-groups-groupId-roles-roleId
      x-accepts: application/json
  /api/v1/groups/{groupId}/roles/{roleId}/targets/catalog/apps:
    get:
      description: "Lists all App targets for an `APP_ADMIN` Role assigned to a Group.\
        \ This methods return list may include full Applications or Instances. The\
        \ response for an instance will have an `ID` value, while Application will\
        \ not have an ID."
      operationId: Group_getRoleTargetsCatalogApps
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          example: 20
          format: int32
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-groups-groupId-roles-roleId-targets-catalog-apps-get-parameters-3-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupGetRoleTargetsCatalogAppsResponse'
          description: Success
      security:
      - api_token: []
      tags:
      - Group
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-groups-groupId-roles-roleId-targets-catalog-apps
      x-accepts: application/json
  /api/v1/groups/{groupId}/roles/{roleId}/targets/catalog/apps/{appName}:
    delete:
      description: Success
      operationId: Group_deleteTargetGroupRolesCatalogApps
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      tags:
      - Group
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-groups-groupId-roles-roleId-targets-catalog-apps-appName
      x-accepts: application/json
    put:
      description: Success
      operationId: Group_updateRolesCatalogApps
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
      security:
      - api_token: []
      tags:
      - Group
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-v1-groups-groupId-roles-roleId-targets-catalog-apps-appName
      x-accepts: application/json
  /api/v1/groups/{groupId}/roles/{roleId}/targets/catalog/apps/{appName}/{applicationId}:
    delete:
      description: Remove App Instance Target to App Administrator Role given to a
        Group
      operationId: Group_removeAppInstanceTargetToAppAdminRoleGivenToGroup
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      summary: Remove App Instance Target to App Administrator Role given to a Group
      tags:
      - Group
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-groups-groupId-roles-roleId-targets-catalog-apps-appName-applicationId
      x-accepts: application/json
    put:
      description: Add App Instance Target to App Administrator Role given to a Group
      operationId: Group_addAppInstanceTargetToAppAdminRoleGivenToGroup
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      summary: Add App Instance Target to App Administrator Role given to a Group
      tags:
      - Group
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-v1-groups-groupId-roles-roleId-targets-catalog-apps-appName-applicationId
      x-accepts: application/json
  /api/v1/groups/{groupId}/roles/{roleId}/targets/groups:
    get:
      description: Success
      operationId: Group_listRoleTargetsGroups
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          example: 20
          format: int32
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-groups-groupId-roles-roleId-targets-groups-get-parameters-3-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupListRoleTargetsGroupsResponse'
          description: Success
      security:
      - api_token: []
      tags:
      - Group
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-groups-groupId-roles-roleId-targets-groups
      x-accepts: application/json
  /api/v1/groups/{groupId}/roles/{roleId}/targets/groups/{targetGroupId}:
    delete:
      description: ""
      operationId: Group_removeTargetGroup
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: targetGroupId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      tags:
      - Group
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-groups-groupId-roles-roleId-targets-groups-targetGroupId
      x-accepts: application/json
    put:
      description: ""
      operationId: Group_updateTargetGroupsRole
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: targetGroupId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      tags:
      - Group
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-v1-groups-groupId-roles-roleId-targets-groups-targetGroupId
      x-accepts: application/json
  /api/v1/groups/{groupId}/users:
    get:
      description: Enumerates all users that are a member of a group.
      operationId: Group_enumerateGroupMembers
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      - description: Specifies the pagination cursor for the next page of users
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the number of user results in a page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 1000
          example: 1000
          format: int32
          type: integer
          x-konfig-original-example: 1000
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-groups-groupId-users-get-parameters-2-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupEnumerateGroupMembersResponse'
          description: Success
      security:
      - api_token: []
      summary: List Group Members
      tags:
      - Group
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-groups-groupId-users
      x-accepts: application/json
  /api/v1/groups/{groupId}/users/{userId}:
    delete:
      description: Removes a user from a group with 'OKTA_GROUP' type.
      operationId: Group_removeUserFrom
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      summary: Remove User from Group
      tags:
      - Group
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-groups-groupId-users-userId
      x-accepts: application/json
    put:
      description: Adds a user to a group with 'OKTA_GROUP' type.
      operationId: Group_addUserToGroup
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      summary: Add User to Group
      tags:
      - Group
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-v1-groups-groupId-users-userId
      x-accepts: application/json
  /api/v1/idps:
    get:
      description: Enumerates IdPs in your organization with pagination. A subset
        of IdPs can be returned that match a supported filter expression or query.
      operationId: IdentityProvider_list
      parameters:
      - description: Searches the name property of IdPs for matching value
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the pagination cursor for the next page of IdPs
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the number of IdP results in a page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          example: 20
          format: int32
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-idps-get-parameters-2-schema
        style: form
      - description: Filters IdPs by type
        explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProviderListResponse'
          description: Success
      security:
      - api_token: []
      summary: List Identity Providers
      tags:
      - IdentityProvider
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-idps
      x-accepts: application/json
    post:
      description: Adds a new IdP to your organization.
      operationId: IdentityProvider_addNewIdp
      requestBody:
        $ref: '#/components/requestBodies/IdentityProvider'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProvider'
          description: Success
      security:
      - api_token: []
      summary: Add Identity Provider
      tags:
      - IdentityProvider
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-idps
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/idps/credentials/keys:
    get:
      description: Enumerates IdP key credentials.
      operationId: IdentityProvider_enumerateIdpKeys
      parameters:
      - description: Specifies the pagination cursor for the next page of keys
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the number of key results in a page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          example: 20
          format: int32
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-idps-credentials-keys-get-parameters-1-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProviderEnumerateIdpKeysResponse'
          description: Success
      security:
      - api_token: []
      summary: List Keys
      tags:
      - IdentityProvider
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-idps-credentials-keys
      x-accepts: application/json
    post:
      description: Adds a new X.509 certificate credential to the IdP key store.
      operationId: IdentityProvider_addX509CertificatePublicKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JsonWebKey'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
          description: Success
      security:
      - api_token: []
      summary: Add X.509 Certificate Public Key
      tags:
      - IdentityProvider
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-idps-credentials-keys
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/idps/credentials/keys/{keyId}:
    delete:
      description: Deletes a specific IdP Key Credential by `kid` if it is not currently
        being used by an Active or Inactive IdP.
      operationId: IdentityProvider_deleteKeyCredential
      parameters:
      - explode: false
        in: path
        name: keyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      summary: Delete Key
      tags:
      - IdentityProvider
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-idps-credentials-keys-keyId
      x-accepts: application/json
    get:
      description: Gets a specific IdP Key Credential by `kid`
      operationId: IdentityProvider_getKeyCredentialByIdp
      parameters:
      - explode: false
        in: path
        name: keyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
          description: Success
      security:
      - api_token: []
      summary: Get Key
      tags:
      - IdentityProvider
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-idps-credentials-keys-keyId
      x-accepts: application/json
  /api/v1/idps/{idpId}:
    delete:
      description: Removes an IdP from your organization.
      operationId: IdentityProvider_removeIdp
      parameters:
      - explode: false
        in: path
        name: idpId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      summary: Delete Identity Provider
      tags:
      - IdentityProvider
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-idps-idpId
      x-accepts: application/json
    get:
      description: Fetches an IdP by `id`.
      operationId: IdentityProvider_getByIdp
      parameters:
      - explode: false
        in: path
        name: idpId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProvider'
          description: Success
      security:
      - api_token: []
      summary: Get Identity Provider
      tags:
      - IdentityProvider
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-idps-idpId
      x-accepts: application/json
    put:
      description: Updates the configuration for an IdP.
      operationId: IdentityProvider_updateConfiguration
      parameters:
      - explode: false
        in: path
        name: idpId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/IdentityProvider'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProvider'
          description: Success
      security:
      - api_token: []
      summary: Update Identity Provider
      tags:
      - IdentityProvider
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-v1-idps-idpId
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/idps/{idpId}/credentials/csrs:
    get:
      description: Enumerates Certificate Signing Requests for an IdP
      operationId: IdentityProvider_listCsrsForCertificateSigningRequests
      parameters:
      - explode: false
        in: path
        name: idpId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProviderListCsrsForCertificateSigningRequestsResponse'
          description: Success
      security:
      - api_token: []
      summary: List Certificate Signing Requests for IdP
      tags:
      - IdentityProvider
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-idps-idpId-credentials-csrs
      x-accepts: application/json
    post:
      description: Generates a new key pair and returns a Certificate Signing Request
        for it.
      operationId: IdentityProvider_generateCsr
      parameters:
      - explode: false
        in: path
        name: idpId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/CsrMetadata'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Csr'
          description: Created
      security:
      - api_token: []
      summary: Generate Certificate Signing Request for IdP
      tags:
      - IdentityProvider
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-idps-idpId-credentials-csrs
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/idps/{idpId}/credentials/csrs/{csrId}:
    delete:
      description: Revoke a Certificate Signing Request and delete the key pair from
        the IdP
      operationId: IdentityProvider_revokeCsrForIdentityProvider
      parameters:
      - explode: false
        in: path
        name: idpId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: csrId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      tags:
      - IdentityProvider
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-idps-idpId-credentials-csrs-csrId
      x-accepts: application/json
    get:
      description: Gets a specific Certificate Signing Request model by id
      operationId: IdentityProvider_getCsrByIdp
      parameters:
      - explode: false
        in: path
        name: idpId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: csrId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Csr'
          description: Success
      security:
      - api_token: []
      tags:
      - IdentityProvider
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-idps-idpId-credentials-csrs-csrId
      x-accepts: application/json
  /api/v1/idps/{idpId}/credentials/csrs/{csrId}/lifecycle/publish:
    post:
      description: Update the Certificate Signing Request with a signed X.509 certificate
        and add it into the signing key credentials for the IdP.
      operationId: IdentityProvider_updateCsrLifecyclePublish
      parameters:
      - explode: false
        in: path
        name: idpId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: csrId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
          description: Created
      security:
      - api_token: []
      tags:
      - IdentityProvider
      x-okta-multi-operation:
      - operationId: publishCerCertForIdentityProvider
        parameters:
        - in: body
          name: certificate
          required: true
          type: string
        consumes:
        - application/x-x509-ca-cert
        encoding: base64
      - operationId: publishBinaryCerCertForIdentityProvider
        parameters:
        - format: binary
          in: body
          name: certificate
          required: true
          type: string
        consumes:
        - application/x-x509-ca-cert
      - operationId: publishDerCertForIdentityProvider
        parameters:
        - in: body
          name: certificate
          required: true
          type: string
        consumes:
        - application/pkix-cert
        encoding: base64
      - operationId: publishBinaryDerCertForIdentityProvider
        parameters:
        - format: binary
          in: body
          name: certificate
          required: true
          type: string
        consumes:
        - application/pkix-cert
      - operationId: publishBinaryPemCertForIdentityProvider
        parameters:
        - format: binary
          in: body
          name: certificate
          required: true
          type: string
        consumes:
        - application/x-pem-file
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-idps-idpId-credentials-csrs-csrId-lifecycle-publish
      x-accepts: application/json
  /api/v1/idps/{idpId}/credentials/keys:
    get:
      description: Enumerates signing key credentials for an IdP
      operationId: IdentityProvider_listSigningKeyCredentials
      parameters:
      - explode: false
        in: path
        name: idpId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProviderListSigningKeyCredentialsResponse'
          description: Success
      security:
      - api_token: []
      summary: List Signing Key Credentials for IdP
      tags:
      - IdentityProvider
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-idps-idpId-credentials-keys
      x-accepts: application/json
  /api/v1/idps/{idpId}/credentials/keys/generate:
    post:
      description: Generates a new X.509 certificate for an IdP signing key credential
        to be used for signing assertions sent to the IdP
      operationId: IdentityProvider_generateNewSigningKeyCredential
      parameters:
      - explode: false
        in: path
        name: idpId
        required: true
        schema:
          type: string
        style: simple
      - description: expiry of the IdP Key Credential
        explode: true
        in: query
        name: validityYears
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
          description: Success
      security:
      - api_token: []
      summary: Generate New IdP Signing Key Credential
      tags:
      - IdentityProvider
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-idps-idpId-credentials-keys-generate
      x-accepts: application/json
  /api/v1/idps/{idpId}/credentials/keys/{keyId}:
    get:
      description: Gets a specific IdP Key Credential by `kid`
      operationId: IdentityProvider_getSigningKeyCredentialByIdp
      parameters:
      - explode: false
        in: path
        name: idpId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: keyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
          description: Success
      security:
      - api_token: []
      summary: Get Signing Key Credential for IdP
      tags:
      - IdentityProvider
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-idps-idpId-credentials-keys-keyId
      x-accepts: application/json
  /api/v1/idps/{idpId}/credentials/keys/{keyId}/clone:
    post:
      description: Clones a X.509 certificate for an IdP signing key credential from
        a source IdP to target IdP
      operationId: IdentityProvider_cloneSigningKeyCredential
      parameters:
      - explode: false
        in: path
        name: idpId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: keyId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: targetIdpId
        required: true
        schema:
          type: string
        style: form
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
          description: Created
      security:
      - api_token: []
      summary: Clone Signing Key Credential for IdP
      tags:
      - IdentityProvider
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-idps-idpId-credentials-keys-keyId-clone
      x-accepts: application/json
  /api/v1/idps/{idpId}/lifecycle/activate:
    post:
      description: Activates an inactive IdP.
      operationId: IdentityProvider_activateIdpLifecycle
      parameters:
      - explode: false
        in: path
        name: idpId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProvider'
          description: Success
      security:
      - api_token: []
      summary: Activate Identity Provider
      tags:
      - IdentityProvider
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-idps-idpId-lifecycle-activate
      x-accepts: application/json
  /api/v1/idps/{idpId}/lifecycle/deactivate:
    post:
      description: Deactivates an active IdP.
      operationId: IdentityProvider_deactivateIdp
      parameters:
      - explode: false
        in: path
        name: idpId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProvider'
          description: Success
      security:
      - api_token: []
      summary: Deactivate Identity Provider
      tags:
      - IdentityProvider
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-idps-idpId-lifecycle-deactivate
      x-accepts: application/json
  /api/v1/idps/{idpId}/users:
    get:
      description: Find all the users linked to an identity provider
      operationId: IdentityProvider_getUser
      parameters:
      - explode: false
        in: path
        name: idpId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProviderGetUserResponse'
          description: Success
      security:
      - api_token: []
      summary: Find Users
      tags:
      - IdentityProvider
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-idps-idpId-users
      x-accepts: application/json
  /api/v1/idps/{idpId}/users/{userId}:
    delete:
      description: Removes the link between the Okta user and the IdP user.
      operationId: IdentityProvider_unlinkUser
      parameters:
      - explode: false
        in: path
        name: idpId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      summary: Unlink User from IdP
      tags:
      - IdentityProvider
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-idps-idpId-users-userId
      x-accepts: application/json
    get:
      description: Fetches a linked IdP user by ID
      operationId: IdentityProvider_getLinkedUserById
      parameters:
      - explode: false
        in: path
        name: idpId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProviderApplicationUser'
          description: Success
      security:
      - api_token: []
      tags:
      - IdentityProvider
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-idps-idpId-users-userId
      x-accepts: application/json
    post:
      description: Links an Okta user to an existing Social Identity Provider. This
        does not support the SAML2 Identity Provider Type
      operationId: IdentityProvider_linkUserToIdpWithoutTransaction
      parameters:
      - explode: false
        in: path
        name: idpId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserIdentityProviderLinkRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProviderApplicationUser'
          description: Success
      security:
      - api_token: []
      summary: Link a user to a Social IdP without a transaction
      tags:
      - IdentityProvider
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-idps-idpId-users-userId
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/idps/{idpId}/users/{userId}/credentials/tokens:
    get:
      description: Fetches the tokens minted by the Social Authentication Provider
        when the user authenticates with Okta via Social Auth.
      operationId: IdentityProvider_getSocialAuthTokens
      parameters:
      - explode: false
        in: path
        name: idpId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProviderGetSocialAuthTokensResponse'
          description: Success
      security:
      - api_token: []
      summary: Social Authentication Token Operation
      tags:
      - IdentityProvider
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-idps-idpId-users-userId-credentials-tokens
      x-accepts: application/json
  /api/v1/inlineHooks:
    get:
      description: Success
      operationId: InlineHook_getSuccess
      parameters:
      - explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineHookGetSuccessResponse'
          description: Success
      security:
      - api_token: []
      tags:
      - InlineHook
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-inlineHooks
      x-accepts: application/json
    post:
      description: Success
      operationId: InlineHook_createSuccess
      requestBody:
        $ref: '#/components/requestBodies/InlineHook'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineHook'
          description: Success
      security:
      - api_token: []
      tags:
      - InlineHook
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-inlineHooks
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/inlineHooks/{inlineHookId}:
    delete:
      description: "Deletes the Inline Hook matching the provided id. Once deleted,\
        \ the Inline Hook is unrecoverable. As a safety precaution, only Inline Hooks\
        \ with a status of INACTIVE are eligible for deletion."
      operationId: InlineHook_deleteMatchingById
      parameters:
      - explode: false
        in: path
        name: inlineHookId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      tags:
      - InlineHook
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-inlineHooks-inlineHookId
      x-accepts: application/json
    get:
      description: Gets an inline hook by ID
      operationId: InlineHook_getById
      parameters:
      - explode: false
        in: path
        name: inlineHookId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineHook'
          description: Success
      security:
      - api_token: []
      tags:
      - InlineHook
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-inlineHooks-inlineHookId
      x-accepts: application/json
    put:
      description: Updates an inline hook by ID
      operationId: InlineHook_updateById
      parameters:
      - explode: false
        in: path
        name: inlineHookId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/InlineHook'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineHook'
          description: Success
      security:
      - api_token: []
      tags:
      - InlineHook
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-v1-inlineHooks-inlineHookId
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/inlineHooks/{inlineHookId}/execute:
    post:
      description: Executes the Inline Hook matching the provided inlineHookId using
        the request body as the input. This will send the provided data through the
        Channel and return a response if it matches the correct data contract. This
        execution endpoint should only be used for testing purposes.
      operationId: InlineHook_executeWithInput
      parameters:
      - explode: false
        in: path
        name: inlineHookId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InlineHookPayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineHookResponse'
          description: Success
      security:
      - api_token: []
      tags:
      - InlineHook
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-inlineHooks-inlineHookId-execute
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/inlineHooks/{inlineHookId}/lifecycle/activate:
    post:
      description: Activates the Inline Hook matching the provided id
      operationId: InlineHook_activateLifecycle
      parameters:
      - explode: false
        in: path
        name: inlineHookId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineHook'
          description: Success
      security:
      - api_token: []
      tags:
      - InlineHook
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-inlineHooks-inlineHookId-lifecycle-activate
      x-accepts: application/json
  /api/v1/inlineHooks/{inlineHookId}/lifecycle/deactivate:
    post:
      description: Deactivates the Inline Hook matching the provided id
      operationId: InlineHook_deactivateLifecycle
      parameters:
      - explode: false
        in: path
        name: inlineHookId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineHook'
          description: Success
      security:
      - api_token: []
      tags:
      - InlineHook
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-inlineHooks-inlineHookId-lifecycle-deactivate
      x-accepts: application/json
  /api/v1/logs:
    get:
      description: The Okta System Log API provides read access to your organization’s
        system log. This API provides more functionality than the Events API
      operationId: Log_getListEvents
      parameters:
      - explode: true
        in: query
        name: since
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: until
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          example: 100
          type: integer
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-logs-get-parameters-4-schema
        style: form
      - explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          default: ASCENDING
          example: ASCENDING
          type: string
          x-konfig-original-example: ASCENDING
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-logs-get-parameters-5-schema
        style: form
      - explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogGetListEventsResponse'
          description: Success
      security:
      - api_token: []
      summary: Fetch a list of events from your Okta organization system log.
      tags:
      - Log
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-logs
      x-accepts: application/json
  /api/v1/mappings:
    get:
      description: Enumerates Profile Mappings in your organization with pagination.
      operationId: ProfileMapping_listWithPagination
      parameters:
      - explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: -1
          example: -1
          format: int32
          type: integer
          x-konfig-original-example: -1
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-mappings-get-parameters-1-schema
        style: form
      - explode: true
        in: query
        name: sourceId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: targetId
        required: false
        schema:
          default: ""
          example: ""
          type: string
          x-konfig-original-example: ""
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-mappings-get-parameters-3-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileMappingListWithPaginationResponse'
          description: Success
      security:
      - api_token: []
      tags:
      - ProfileMapping
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-mappings
      x-accepts: application/json
  /api/v1/mappings/{mappingId}:
    get:
      description: Fetches a single Profile Mapping referenced by its ID.
      operationId: ProfileMapping_getById
      parameters:
      - explode: false
        in: path
        name: mappingId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileMapping'
          description: Success
      security:
      - api_token: []
      summary: Get Profile Mapping
      tags:
      - ProfileMapping
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-mappings-mappingId
      x-accepts: application/json
    post:
      description: "Updates an existing Profile Mapping by adding, updating, or removing\
        \ one or many Property Mappings."
      operationId: ProfileMapping_updatePropertyMappings
      parameters:
      - explode: false
        in: path
        name: mappingId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileMapping'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileMapping'
          description: Success
      security:
      - api_token: []
      summary: Update Profile Mapping
      tags:
      - ProfileMapping
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-mappings-mappingId
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/meta/schemas/apps/{appInstanceId}/default:
    get:
      description: Fetches the Schema for an App User
      operationId: UserSchema_getUserSchema
      parameters:
      - explode: false
        in: path
        name: appInstanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchema'
          description: successful operation
      security:
      - api_token: []
      summary: Fetches the Schema for an App User
      tags:
      - UserSchema
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-meta-schemas-apps-appInstanceId-default
      x-accepts: application/json
    post:
      description: Partial updates on the User Profile properties of the Application
        User Schema.
      operationId: UserSchema_partialUpdateUserProfile
      parameters:
      - explode: false
        in: path
        name: appInstanceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSchema'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchema'
          description: successful operation
      security:
      - api_token: []
      summary: Partial updates on the User Profile properties of the Application User
        Schema.
      tags:
      - UserSchema
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-meta-schemas-apps-appInstanceId-default
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/meta/schemas/group/default:
    get:
      description: Fetches the group schema
      operationId: GroupSchema_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupSchema'
          description: successful operation
      security:
      - api_token: []
      summary: Fetches the group schema
      tags:
      - GroupSchema
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-meta-schemas-group-default
      x-accepts: application/json
    post:
      description: "Updates, adds ore removes one or more custom Group Profile properties\
        \ in the schema"
      operationId: GroupSchema_updateCustomProperties
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupSchema'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupSchema'
          description: successful operation
      security:
      - api_token: []
      summary: "Updates, adds ore removes one or more custom Group Profile properties\
        \ in the schema"
      tags:
      - GroupSchema
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-meta-schemas-group-default
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/meta/schemas/user/linkedObjects:
    get:
      description: Success
      operationId: LinkedObject_getUserLinkedObjects
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedObjectGetUserLinkedObjectsResponse'
          description: Success
      security:
      - api_token: []
      tags:
      - LinkedObject
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-meta-schemas-user-linkedObjects
      x-accepts: application/json
    post:
      description: Success
      operationId: LinkedObject_createLinkedObject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkedObject'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedObject'
          description: Created
      security:
      - api_token: []
      tags:
      - LinkedObject
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-meta-schemas-user-linkedObjects
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/meta/schemas/user/linkedObjects/{linkedObjectName}:
    delete:
      description: Success
      operationId: LinkedObject_deleteUserLinkedObject
      parameters:
      - explode: false
        in: path
        name: linkedObjectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      tags:
      - LinkedObject
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-meta-schemas-user-linkedObjects-linkedObjectName
      x-accepts: application/json
    get:
      description: Success
      operationId: LinkedObject_getUserLinkedObjects
      parameters:
      - explode: false
        in: path
        name: linkedObjectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedObject'
          description: Success
      security:
      - api_token: []
      tags:
      - LinkedObject
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-meta-schemas-user-linkedObjects-linkedObjectName
      x-accepts: application/json
  /api/v1/meta/schemas/user/{schemaId}:
    get:
      description: Fetches the schema for a Schema Id.
      operationId: UserSchema_getSchemaById
      parameters:
      - explode: false
        in: path
        name: schemaId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchema'
          description: Success
      security:
      - api_token: []
      summary: Fetches the schema for a Schema Id.
      tags:
      - UserSchema
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-meta-schemas-user-schemaId
      x-accepts: application/json
    post:
      description: Partial updates on the User Profile properties of the user schema.
      operationId: UserSchema_partialUpdateUserProfile
      parameters:
      - explode: false
        in: path
        name: schemaId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSchema'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchema'
          description: Success
      security:
      - api_token: []
      tags:
      - UserSchema
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-meta-schemas-user-schemaId
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/meta/types/user:
    get:
      description: Fetches all User Types in your org
      operationId: UserType_getAllUserTypes
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTypeGetAllUserTypesResponse'
          description: Success
      security:
      - api_token: []
      tags:
      - UserType
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-meta-types-user
      x-accepts: application/json
    post:
      description: "Creates a new User Type. A default User Type is automatically\
        \ created along with your org, and you may add another 9 User Types for a\
        \ maximum of 10."
      operationId: UserType_createNewUserType
      requestBody:
        $ref: '#/components/requestBodies/UserType'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserType'
          description: Success
      security:
      - api_token: []
      tags:
      - UserType
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-meta-types-user
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/meta/types/user/{typeId}:
    delete:
      description: "Deletes a User Type permanently. This operation is not permitted\
        \ for the default type, nor for any User Type that has existing users"
      operationId: UserType_deletePermanently
      parameters:
      - explode: false
        in: path
        name: typeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      tags:
      - UserType
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-meta-types-user-typeId
      x-accepts: application/json
    get:
      description: Fetches a User Type by ID. The special identifier `default` may
        be used to fetch the default User Type.
      operationId: UserType_getById
      parameters:
      - explode: false
        in: path
        name: typeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserType'
          description: Success
      security:
      - api_token: []
      tags:
      - UserType
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-meta-types-user-typeId
      x-accepts: application/json
    post:
      description: Updates an existing User Type
      operationId: UserType_updateExistingType
      parameters:
      - explode: false
        in: path
        name: typeId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/UserType'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserType'
          description: Success
      security:
      - api_token: []
      tags:
      - UserType
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-meta-types-user-typeId
      x-content-type: application/json
      x-accepts: application/json
    put:
      description: Replace an existing User Type
      operationId: UserType_replaceExistingType
      parameters:
      - explode: false
        in: path
        name: typeId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/UserType'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserType'
          description: Success
      security:
      - api_token: []
      tags:
      - UserType
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-v1-meta-types-user-typeId
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/org:
    get:
      description: Get settings of your organization.
      operationId: Org_getSettings
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgSetting'
          description: Success
      security:
      - api_token: []
      summary: Get org settings
      tags:
      - Org
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-org
      x-accepts: application/json
    post:
      description: Partial update settings of your organization.
      operationId: Org_updateSettings
      requestBody:
        $ref: '#/components/requestBodies/OrgSetting'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgSetting'
          description: Success
      security:
      - api_token: []
      summary: Partial update Org setting
      tags:
      - Org
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-org
      x-content-type: application/json
      x-accepts: application/json
    put:
      description: Update settings of your organization.
      operationId: Org_updateSetting
      requestBody:
        $ref: '#/components/requestBodies/OrgSetting'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgSetting'
          description: Success
      security:
      - api_token: []
      summary: Update Org setting
      tags:
      - Org
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-v1-org
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/org/contacts:
    get:
      description: Gets Contact Types of your organization.
      operationId: Org_listContactTypes
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgListContactTypesResponse'
          description: Success
      security:
      - api_token: []
      summary: Get org contact types
      tags:
      - Org
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-org-contacts
      x-accepts: application/json
  /api/v1/org/contacts/{contactType}:
    get:
      description: Retrieves the URL of the User associated with the specified Contact
        Type.
      operationId: Org_getContactUser
      parameters:
      - explode: false
        in: path
        name: contactType
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgContactUser'
          description: Success
      security:
      - api_token: []
      summary: Get org contact user
      tags:
      - Org
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-org-contacts-contactType
      x-accepts: application/json
    put:
      description: Updates the User associated with the specified Contact Type.
      operationId: Org_updateContactUser
      parameters:
      - explode: false
        in: path
        name: contactType
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserIdString'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgContactUser'
          description: Success
      security:
      - api_token: []
      summary: Update org contact user
      tags:
      - Org
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-v1-org-contacts-contactType
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/org/logo:
    post:
      description: Updates the logo for your organization.
      operationId: Org_updateOrganizationLogo
      requestBody:
        $ref: '#/components/requestBodies/uploadApplicationLogo'
      responses:
        "201":
          description: Created
      security:
      - api_token: []
      summary: Update org logo
      tags:
      - Org
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-org-logo
      x-content-type: multipart/form-data
      x-accepts: application/json
  /api/v1/org/preferences:
    get:
      description: Gets preferences of your organization.
      operationId: Org_getOrgPreferences
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgPreferences'
          description: Success
      security:
      - api_token: []
      summary: Get org preferences
      tags:
      - Org
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-org-preferences
      x-accepts: application/json
  /api/v1/org/preferences/hideEndUserFooter:
    post:
      description: Hide the Okta UI footer for all end users of your organization.
      operationId: Org_hideEndUserFooter
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgPreferences'
          description: Success
      security:
      - api_token: []
      summary: Show Okta UI Footer
      tags:
      - Org
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-org-preferences-hideEndUserFooter
      x-accepts: application/json
  /api/v1/org/preferences/showEndUserFooter:
    post:
      description: Makes the Okta UI footer visible for all end users of your organization.
      operationId: Org_makeOktaUiFooterVisible
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgPreferences'
          description: Success
      security:
      - api_token: []
      summary: Show Okta UI Footer
      tags:
      - Org
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-org-preferences-showEndUserFooter
      x-accepts: application/json
  /api/v1/org/privacy/oktaCommunication:
    get:
      description: Gets Okta Communication Settings of your organization.
      operationId: Org_getOktaCommunicationSettings
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgOktaCommunicationSetting'
          description: Success
      security:
      - api_token: []
      summary: Get Okta Communication Settings
      tags:
      - Org
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-org-privacy-oktaCommunication
      x-accepts: application/json
  /api/v1/org/privacy/oktaCommunication/optIn:
    post:
      description: Opts in all users of this org to Okta Communication emails.
      operationId: Org_optInOktaCommunicationEmails
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgOktaCommunicationSetting'
          description: Success
      security:
      - api_token: []
      summary: Opt in all users to Okta Communication emails
      tags:
      - Org
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-org-privacy-oktaCommunication-optIn
      x-accepts: application/json
  /api/v1/org/privacy/oktaCommunication/optOut:
    post:
      description: Opts out all users of this org from Okta Communication emails.
      operationId: Org_optOutOktaCommunicationEmails
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgOktaCommunicationSetting'
          description: Success
      security:
      - api_token: []
      summary: Opt out all users from Okta Communication emails
      tags:
      - Org
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-org-privacy-oktaCommunication-optOut
      x-accepts: application/json
  /api/v1/org/privacy/oktaSupport:
    get:
      description: Gets Okta Support Settings of your organization.
      operationId: Org_getOktaSupportSettings
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgOktaSupportSettingsObj'
          description: Success
      security:
      - api_token: []
      summary: Get Okta Support settings
      tags:
      - Org
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-org-privacy-oktaSupport
      x-accepts: application/json
  /api/v1/org/privacy/oktaSupport/extend:
    post:
      description: Extends the length of time that Okta Support can access your org
        by 24 hours. This means that 24 hours are added to the remaining access time.
      operationId: Org_extendOktaSupport
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgOktaSupportSettingsObj'
          description: Success
      security:
      - api_token: []
      summary: Extend Okta Support
      tags:
      - Org
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-org-privacy-oktaSupport-extend
      x-accepts: application/json
  /api/v1/org/privacy/oktaSupport/grant:
    post:
      description: Enables you to temporarily allow Okta Support to access your org
        as an administrator for eight hours.
      operationId: Org_grantOktaSupportAccess
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgOktaSupportSettingsObj'
          description: Success
      security:
      - api_token: []
      summary: Grant Okta Support
      tags:
      - Org
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-org-privacy-oktaSupport-grant
      x-accepts: application/json
  /api/v1/org/privacy/oktaSupport/revoke:
    post:
      description: Revokes Okta Support access to your organization.
      operationId: Org_extendOktaSupport
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgOktaSupportSettingsObj'
          description: Success
      security:
      - api_token: []
      summary: Extend Okta Support
      tags:
      - Org
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-org-privacy-oktaSupport-revoke
      x-accepts: application/json
  /api/v1/policies:
    get:
      description: Gets all policies with the specified type.
      operationId: Policy_getAllWithType
      parameters:
      - explode: true
        in: query
        name: type
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: status
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          default: ""
          example: ""
          type: string
          x-konfig-original-example: ""
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-policies-get-parameters-2-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyGetAllWithTypeResponse'
          description: Success
      security:
      - api_token: []
      tags:
      - Policy
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-policies
      x-accepts: application/json
    post:
      description: Creates a policy.
      operationId: Policy_createNewPolicy
      parameters:
      - explode: true
        in: query
        name: activate
        required: false
        schema:
          default: true
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-policies-post-parameters-0-schema
        style: form
      requestBody:
        $ref: '#/components/requestBodies/Policy'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
          description: Success
      security:
      - api_token: []
      tags:
      - Policy
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-policies
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/policies/{policyId}:
    delete:
      description: Removes a policy.
      operationId: Policy_removePolicyOperation
      parameters:
      - explode: false
        in: path
        name: policyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
      security:
      - api_token: []
      tags:
      - Policy
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-policies-policyId
      x-accepts: application/json
    get:
      description: Gets a policy.
      operationId: Policy_getPolicy
      parameters:
      - explode: false
        in: path
        name: policyId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          default: ""
          example: ""
          type: string
          x-konfig-original-example: ""
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-policies-policyId-get-parameters-1-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
          description: Success
      security:
      - api_token: []
      tags:
      - Policy
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-policies-policyId
      x-accepts: application/json
    put:
      description: Updates a policy.
      operationId: Policy_updateOperation
      parameters:
      - explode: false
        in: path
        name: policyId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Policy'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
          description: Success
      security:
      - api_token: []
      tags:
      - Policy
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-v1-policies-policyId
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/policies/{policyId}/lifecycle/activate:
    post:
      description: Activates a policy.
      operationId: Policy_activateLifecycle
      parameters:
      - explode: false
        in: path
        name: policyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      tags:
      - Policy
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-policies-policyId-lifecycle-activate
      x-accepts: application/json
  /api/v1/policies/{policyId}/lifecycle/deactivate:
    post:
      description: Deactivates a policy.
      operationId: Policy_deactivateLifecycle
      parameters:
      - explode: false
        in: path
        name: policyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      tags:
      - Policy
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-policies-policyId-lifecycle-deactivate
      x-accepts: application/json
  /api/v1/policies/{policyId}/rules:
    get:
      description: Enumerates all policy rules.
      operationId: Policy_enumerateRules
      parameters:
      - explode: false
        in: path
        name: policyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyEnumerateRulesResponse'
          description: Success
      security:
      - api_token: []
      tags:
      - Policy
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-policies-policyId-rules
      x-accepts: application/json
    post:
      description: Creates a policy rule.
      operationId: Policy_createRule
      parameters:
      - explode: false
        in: path
        name: policyId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/PolicyRule'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyRule'
          description: Success
      security:
      - api_token: []
      tags:
      - Policy
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-policies-policyId-rules
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/policies/{policyId}/rules/{ruleId}:
    delete:
      description: Removes a policy rule.
      operationId: Policy_removeRule
      parameters:
      - explode: false
        in: path
        name: policyId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ruleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      tags:
      - Policy
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-policies-policyId-rules-ruleId
      x-accepts: application/json
    get:
      description: Gets a policy rule.
      operationId: Policy_getPolicyRule
      parameters:
      - explode: false
        in: path
        name: policyId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ruleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyRule'
          description: Success
      security:
      - api_token: []
      tags:
      - Policy
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-policies-policyId-rules-ruleId
      x-accepts: application/json
    put:
      description: Updates a policy rule.
      operationId: Policy_updateRule
      parameters:
      - explode: false
        in: path
        name: policyId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ruleId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/PolicyRule'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyRule'
          description: Success
      security:
      - api_token: []
      tags:
      - Policy
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-v1-policies-policyId-rules-ruleId
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/policies/{policyId}/rules/{ruleId}/lifecycle/activate:
    post:
      description: Activates a policy rule.
      operationId: Policy_activateRuleLifecycle
      parameters:
      - explode: false
        in: path
        name: policyId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ruleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
      security:
      - api_token: []
      tags:
      - Policy
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-policies-policyId-rules-ruleId-lifecycle-activate
      x-accepts: application/json
  /api/v1/policies/{policyId}/rules/{ruleId}/lifecycle/deactivate:
    post:
      description: Deactivates a policy rule.
      operationId: Policy_deactivateRuleLifecycle
      parameters:
      - explode: false
        in: path
        name: policyId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ruleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      tags:
      - Policy
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-policies-policyId-rules-ruleId-lifecycle-deactivate
      x-accepts: application/json
  /api/v1/roles/{roleTypeOrRoleId}/subscriptions:
    get:
      description: When roleType List all subscriptions of a Role. Else when roleId
        List subscriptions of a Custom Role
      operationId: Subscription_listRoleSubscriptions
      parameters:
      - explode: false
        in: path
        name: roleTypeOrRoleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionListRoleSubscriptionsResponse'
          description: Success
        "404":
          description: Not Found
      security:
      - api_token: []
      summary: List all subscriptions of a Custom Role
      tags:
      - Subscription
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-roles-roleTypeOrRoleId-subscriptions
      x-accepts: application/json
  /api/v1/roles/{roleTypeOrRoleId}/subscriptions/{notificationType}:
    get:
      description: When roleType Get subscriptions of a Role with a specific notification
        type. Else when roleId Get subscription of a Custom Role with a specific notification
        type.
      operationId: Subscription_getRoleSubscriptionsByNotificationType
      parameters:
      - explode: false
        in: path
        name: roleTypeOrRoleId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: notificationType
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: Success
        "404":
          description: Not Found
      security:
      - api_token: []
      summary: Get subscriptions of a Custom Role with a specific notification type
      tags:
      - Subscription
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-roles-roleTypeOrRoleId-subscriptions-notificationType
      x-accepts: application/json
  /api/v1/roles/{roleTypeOrRoleId}/subscriptions/{notificationType}/subscribe:
    post:
      description: "When roleType Subscribes a Role to a specific notification type.\
        \ When you change the subscription status of a Role, it overrides the subscription\
        \ of any individual user of that Role. Else when roleId Subscribes a Custom\
        \ Role to a specific notification type. When you change the subscription status\
        \ of a Custom Role, it overrides the subscription of any individual user of\
        \ that Custom Role."
      operationId: Subscription_roleNotificationSubscribe
      parameters:
      - explode: false
        in: path
        name: roleTypeOrRoleId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: notificationType
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "404":
          description: Not Found
      security:
      - api_token: []
      summary: Subscribe a Custom Role to a specific notification type
      tags:
      - Subscription
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-roles-roleTypeOrRoleId-subscriptions-notificationType-subscribe
      x-accepts: application/json
  /api/v1/roles/{roleTypeOrRoleId}/subscriptions/{notificationType}/unsubscribe:
    post:
      description: "When roleType Unsubscribes a Role from a specific notification\
        \ type. When you change the subscription status of a Role, it overrides the\
        \ subscription of any individual user of that Role. Else when roleId Unsubscribes\
        \ a Custom Role from a specific notification type. When you change the subscription\
        \ status of a Custom Role, it overrides the subscription of any individual\
        \ user of that Custom Role."
      operationId: Subscription_customRoleNotificationUnsubscribe
      parameters:
      - explode: false
        in: path
        name: roleTypeOrRoleId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: notificationType
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "404":
          description: Not Found
      security:
      - api_token: []
      summary: Unsubscribe a Custom Role from a specific notification type
      tags:
      - Subscription
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-roles-roleTypeOrRoleId-subscriptions-notificationType-unsubscribe
      x-accepts: application/json
  /api/v1/sessions:
    post:
      description: "Creates a new session for a user with a valid session token. Use\
        \ this API if, for example, you want to set the session cookie yourself instead\
        \ of allowing Okta to set it, or want to hold the session ID in order to delete\
        \ a session via the API instead of visiting the logout URL."
      operationId: Session_createSessionWithToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSessionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
          description: Success
        "400":
          description: Bad Request
      security:
      - api_token: []
      summary: Create Session with Session Token
      tags:
      - Session
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-sessions
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/sessions/{sessionId}:
    delete:
      description: ""
      operationId: Session_close
      parameters:
      - explode: false
        in: path
        name: sessionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "404":
          description: Not Found
      security:
      - api_token: []
      summary: Close Session
      tags:
      - Session
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-sessions-sessionId
      x-accepts: application/json
    get:
      description: Get details about a session.
      operationId: Session_getDetails
      parameters:
      - explode: false
        in: path
        name: sessionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
          description: Success
      security:
      - api_token: []
      tags:
      - Session
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-sessions-sessionId
      x-accepts: application/json
  /api/v1/sessions/{sessionId}/lifecycle/refresh:
    post:
      description: ""
      operationId: Session_refreshLifecycle
      parameters:
      - explode: false
        in: path
        name: sessionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
          description: Success
        "404":
          description: Not Found
      security:
      - api_token: []
      summary: Refresh Session
      tags:
      - Session
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-sessions-sessionId-lifecycle-refresh
      x-accepts: application/json
  /api/v1/templates/sms:
    get:
      description: Enumerates custom SMS templates in your organization. A subset
        of templates can be returned that match a template type.
      operationId: Template_enumerateSmsTemplates
      parameters:
      - explode: true
        in: query
        name: templateType
        required: false
        schema:
          type: string
        style: form
        x-openapi-v3-schema-ref: '#/definitions/SmsTemplateType'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateEnumerateSmsTemplatesResponse'
          description: Success
      security:
      - api_token: []
      summary: List SMS Templates
      tags:
      - Template
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-templates-sms
      x-accepts: application/json
    post:
      description: Adds a new custom SMS template to your organization.
      operationId: Template_addNewCustomSms
      requestBody:
        $ref: '#/components/requestBodies/SmsTemplate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsTemplate'
          description: Success
      security:
      - api_token: []
      summary: Add SMS Template
      tags:
      - Template
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-templates-sms
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/templates/sms/{templateId}:
    delete:
      description: Removes an SMS template.
      operationId: Template_removeSms
      parameters:
      - explode: false
        in: path
        name: templateId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      summary: Remove SMS Template
      tags:
      - Template
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-templates-sms-templateId
      x-accepts: application/json
    get:
      description: Fetches a specific template by `id`
      operationId: Template_getById
      parameters:
      - explode: false
        in: path
        name: templateId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsTemplate'
          description: Success
      security:
      - api_token: []
      summary: Get SMS Template
      tags:
      - Template
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-templates-sms-templateId
      x-accepts: application/json
    post:
      description: 'Updates only some of the SMS template properties:'
      operationId: Template_partialSmsUpdate
      parameters:
      - explode: false
        in: path
        name: templateId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/SmsTemplate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsTemplate'
          description: Success
      security:
      - api_token: []
      summary: Partial SMS Template Update
      tags:
      - Template
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-templates-sms-templateId
      x-content-type: application/json
      x-accepts: application/json
    put:
      description: Updates the SMS template.
      operationId: Template_updateSmsTemplate
      parameters:
      - explode: false
        in: path
        name: templateId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/SmsTemplate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsTemplate'
          description: Success
      security:
      - api_token: []
      summary: Update SMS Template
      tags:
      - Template
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-v1-templates-sms-templateId
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/threats/configuration:
    get:
      description: Gets current ThreatInsight configuration
      operationId: ThreatInsight_getCurrentConfiguration
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreatInsightConfiguration'
          description: Success
      security:
      - api_token: []
      tags:
      - ThreatInsight
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-threats-configuration
      x-accepts: application/json
    post:
      description: Updates ThreatInsight configuration
      operationId: ThreatInsight_updateConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThreatInsightConfiguration'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreatInsightConfiguration'
          description: Success
      security:
      - api_token: []
      tags:
      - ThreatInsight
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-threats-configuration
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/trustedOrigins:
    get:
      description: Success
      operationId: TrustedOrigin_getList
      parameters:
      - explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: -1
          example: -1
          format: int32
          type: integer
          x-konfig-original-example: -1
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-trustedOrigins-get-parameters-3-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedOriginGetListResponse'
          description: Success
      security:
      - api_token: []
      tags:
      - TrustedOrigin
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-trustedOrigins
      x-accepts: application/json
    post:
      description: Success
      operationId: TrustedOrigin_createSuccess
      requestBody:
        $ref: '#/components/requestBodies/TrustedOrigin'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedOrigin'
          description: Success
      security:
      - api_token: []
      tags:
      - TrustedOrigin
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-trustedOrigins
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/trustedOrigins/{trustedOriginId}:
    delete:
      description: Success
      operationId: TrustedOrigin_deleteSuccess
      parameters:
      - explode: false
        in: path
        name: trustedOriginId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
      security:
      - api_token: []
      tags:
      - TrustedOrigin
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-trustedOrigins-trustedOriginId
      x-accepts: application/json
    get:
      description: Success
      operationId: TrustedOrigin_getSuccessById
      parameters:
      - explode: false
        in: path
        name: trustedOriginId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedOrigin'
          description: Success
      security:
      - api_token: []
      tags:
      - TrustedOrigin
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-trustedOrigins-trustedOriginId
      x-accepts: application/json
    put:
      description: Success
      operationId: TrustedOrigin_updateSuccess
      parameters:
      - explode: false
        in: path
        name: trustedOriginId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/TrustedOrigin'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedOrigin'
          description: Success
      security:
      - api_token: []
      tags:
      - TrustedOrigin
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-v1-trustedOrigins-trustedOriginId
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/trustedOrigins/{trustedOriginId}/lifecycle/activate:
    post:
      description: Success
      operationId: TrustedOrigin_activateLifecycleSuccess
      parameters:
      - explode: false
        in: path
        name: trustedOriginId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedOrigin'
          description: Success
      security:
      - api_token: []
      tags:
      - TrustedOrigin
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-trustedOrigins-trustedOriginId-lifecycle-activate
      x-accepts: application/json
  /api/v1/trustedOrigins/{trustedOriginId}/lifecycle/deactivate:
    post:
      description: Success
      operationId: TrustedOrigin_deactivateLifecycleSuccess
      parameters:
      - explode: false
        in: path
        name: trustedOriginId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedOrigin'
          description: Success
      security:
      - api_token: []
      tags:
      - TrustedOrigin
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-trustedOrigins-trustedOriginId-lifecycle-deactivate
      x-accepts: application/json
  /api/v1/users:
    get:
      description: "Lists users that do not have a status of 'DEPROVISIONED' (by default),\
        \ up to the maximum (200 for most orgs), with pagination in most cases. A\
        \ subset of users can be returned that match a supported filter expression\
        \ or search criteria."
      operationId: User_listActiveUsers
      parameters:
      - description: "Finds a user that matches firstName, lastName, and email properties"
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the pagination cursor for the next page of users
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the number of results returned
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          example: 10
          format: int32
          type: integer
          x-konfig-original-example: 10
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-users-get-parameters-2-schema
        style: form
      - description: Filters users with a supported expression for a subset of properties
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: Searches for users with a supported filtering  expression for
          most properties
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListActiveUsersResponse'
          description: Success
      security:
      - api_token: []
      summary: List Users
      tags:
      - User
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-users
      x-accepts: application/json
    post:
      description: Creates a new user in your Okta organization with or without credentials.
      operationId: User_createNewUser
      parameters:
      - description: Executes activation lifecycle operation when creating the user
        explode: true
        in: query
        name: activate
        required: false
        schema:
          default: true
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-users-post-parameters-0-schema
        style: form
      - description: Indicates whether to create a user with a specified authentication
          provider
        explode: true
        in: query
        name: provider
        required: false
        schema:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-users-post-parameters-1-schema
        style: form
      - description: "With activate=true, set nextLogin to \"changePassword\" to have\
          \ the password be EXPIRED, so user must change it the next time they log\
          \ in."
        explode: true
        in: query
        name: nextLogin
        required: false
        schema:
          default: ""
          example: ""
          type: string
          x-konfig-original-example: ""
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-users-post-parameters-2-schema
        style: form
        x-okta-added-version: 0.14.0
        x-openapi-v3-schema-ref: '#/definitions/UserNextLogin'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Success
      security:
      - api_token: []
      summary: Create User
      tags:
      - User
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-users
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/users/{associatedUserId}/linkedObjects/{primaryRelationshipName}/{primaryUserId}:
    put:
      operationId: User_updateLinkedObject
      parameters:
      - explode: false
        in: path
        name: associatedUserId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: primaryRelationshipName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: primaryUserId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success
      security:
      - api_token: []
      tags:
      - User
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-v1-users-associatedUserId-linkedObjects-primaryRelationshipName-primaryUserId
      x-accepts: application/json
  /api/v1/users/{userId}:
    delete:
      description: Deletes a user permanently.  This operation can only be performed
        on users that have a `DEPROVISIONED` status.  **This action cannot be recovered!**
      operationId: User_deletePermanently
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: sendEmail
        required: false
        schema:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-users-userId-delete-parameters-1-schema
        style: form
        x-okta-added-version: 1.5.0
      responses:
        "202":
          description: ACCEPTED
      security:
      - api_token: []
      summary: Delete User
      tags:
      - User
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-users-userId
      x-accepts: application/json
    get:
      description: Fetches a user from your Okta organization.
      operationId: User_getOktaUser
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Success
      security:
      - api_token: []
      summary: Get User
      tags:
      - User
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-users-userId
      x-accepts: application/json
    post:
      description: Update a user's profile or credentials with partial update semantics.
      operationId: User_updateProfile
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: strict
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        $ref: '#/components/requestBodies/User'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Success
      security:
      - api_token: []
      tags:
      - User
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-users-userId
      x-content-type: application/json
      x-accepts: application/json
    put:
      description: Update a user's profile and/or credentials using strict-update
        semantics.
      operationId: User_updateProfile
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: strict
        required: false
        schema:
          type: boolean
        style: form
        x-okta-added-version: 1.10.0
      requestBody:
        $ref: '#/components/requestBodies/User'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Success
      security:
      - api_token: []
      summary: Update User
      tags:
      - User
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-v1-users-userId
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/users/{userId}/appLinks:
    get:
      description: Fetches appLinks for all direct or indirect (via group membership)
        assigned applications.
      operationId: User_listAssignedAppLinks
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListAssignedAppLinksResponse'
          description: Success
      security:
      - api_token: []
      summary: Get Assigned App Links
      tags:
      - User
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-users-userId-appLinks
      x-accepts: application/json
  /api/v1/users/{userId}/clients:
    get:
      description: Lists all client resources for which the specified user has grants
        or tokens.
      operationId: User_listClients
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListClientsResponse'
          description: Success
      security:
      - api_token: []
      tags:
      - User
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-users-userId-clients
      x-accepts: application/json
  /api/v1/users/{userId}/clients/{clientId}/grants:
    delete:
      description: Revokes all grants for the specified user and client
      operationId: User_revokeGrantsForUserAndClient
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: clientId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      tags:
      - User
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-users-userId-clients-clientId-grants
      x-accepts: application/json
    get:
      description: Lists all grants for a specified user and client
      operationId: User_listGrantsForClient
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: clientId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          example: 20
          format: int32
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-users-userId-clients-clientId-grants-get-parameters-4-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListGrantsForClientResponse'
          description: Success
      security:
      - api_token: []
      tags:
      - User
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-users-userId-clients-clientId-grants
      x-accepts: application/json
  /api/v1/users/{userId}/clients/{clientId}/tokens:
    delete:
      description: Revokes all refresh tokens issued for the specified User and Client.
      operationId: User_revokeAllTokens
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: clientId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      tags:
      - User
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-users-userId-clients-clientId-tokens
      x-accepts: application/json
    get:
      description: Lists all refresh tokens issued for the specified User and Client.
      operationId: User_listRefreshTokensForUserAndClient
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: clientId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          example: 20
          format: int32
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-users-userId-clients-clientId-tokens-get-parameters-4-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListRefreshTokensForUserAndClientResponse'
          description: Success
      security:
      - api_token: []
      tags:
      - User
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-users-userId-clients-clientId-tokens
      x-accepts: application/json
  /api/v1/users/{userId}/clients/{clientId}/tokens/{tokenId}:
    delete:
      description: Revokes the specified refresh token.
      operationId: User_revokeTokenForClient
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: clientId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tokenId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      tags:
      - User
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-users-userId-clients-clientId-tokens-tokenId
      x-accepts: application/json
    get:
      description: Gets a refresh token issued for the specified User and Client.
      operationId: User_getClientRefreshToken
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: clientId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tokenId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          example: 20
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-users-userId-clients-clientId-tokens-tokenId-get-parameters-4-schema
        style: form
      - explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2RefreshToken'
          description: Success
      security:
      - api_token: []
      tags:
      - User
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-users-userId-clients-clientId-tokens-tokenId
      x-accepts: application/json
  /api/v1/users/{userId}/credentials/change_password:
    post:
      description: "Changes a user's password by validating the user's current password.\
        \ This operation can only be performed on users in `STAGED`, `ACTIVE`, `PASSWORD_EXPIRED`,\
        \ or `RECOVERY` status that have a valid password credential"
      operationId: User_changePasswordValidation
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: strict
        required: false
        schema:
          type: boolean
        style: form
        x-okta-added-version: 1.10.0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCredentials'
          description: Success
      security:
      - api_token: []
      summary: Change Password
      tags:
      - User
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-users-userId-credentials-change_password
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/users/{userId}/credentials/change_recovery_question:
    post:
      description: "Changes a user's recovery question & answer credential by validating\
        \ the user's current password.  This operation can only be performed on users\
        \ in **STAGED**, **ACTIVE** or **RECOVERY** `status` that have a valid password\
        \ credential"
      operationId: User_updateRecoveryQuestion
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentials'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCredentials'
          description: Success
      security:
      - api_token: []
      summary: Change Recovery Question
      tags:
      - User
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-users-userId-credentials-change_recovery_question
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/users/{userId}/credentials/forgot_password:
    post:
      operationId: User_forgotPassword
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForgotPasswordResponse'
          description: Success
      security:
      - api_token: []
      summary: Forgot Password
      tags:
      - User
      x-okta-multi-operation:
      - operationId: forgotPasswordGenerateOneTimeToken
        description: Generates a one-time token (OTT) that can be used to reset a
          user's password
        parameters:
        - default: true
          in: query
          name: sendEmail
          type: boolean
          example: true
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-users-userId-credentials-forgot_password-post-x-okta-multi-operation-0-parameters-0
      - operationId: forgotPasswordSetNewPassword
        description: Sets a new password for a user by validating the user's answer
          to their current recovery question
        parameters:
        - in: body
          name: user
          required: true
          schema:
            $ref: '#/components/schemas/UserCredentials'
        - default: true
          in: query
          name: sendEmail
          type: boolean
          example: true
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-users-userId-credentials-forgot_password-post-x-okta-multi-operation-1-parameters-1
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-users-userId-credentials-forgot_password
      x-accepts: application/json
  /api/v1/users/{userId}/factors:
    get:
      description: Enumerates all the enrolled factors for the specified user
      operationId: UserFactor_enumerateEnrolled
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFactorEnumerateEnrolledResponse'
          description: Success
      security:
      - api_token: []
      tags:
      - UserFactor
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-users-userId-factors
      x-accepts: application/json
    post:
      description: Enrolls a user with a supported factor.
      operationId: UserFactor_enrollSupportedFactor
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: updatePhone
        required: false
        schema:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-users-userId-factors-post-parameters-1-schema
        style: form
      - description: id of SMS template (only for SMS factor)
        explode: true
        in: query
        name: templateId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: tokenLifetimeSeconds
        required: false
        schema:
          default: 300
          example: 300
          format: int32
          type: integer
          x-konfig-original-example: 300
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-users-userId-factors-post-parameters-3-schema
        style: form
        x-okta-added-version: 1.3.0
      - explode: true
        in: query
        name: activate
        required: false
        schema:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-users-userId-factors-post-parameters-4-schema
        style: form
        x-okta-added-version: 1.3.0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserFactor'
        description: Factor
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFactor'
          description: Success
      security:
      - api_token: []
      summary: Enroll Factor
      tags:
      - UserFactor
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-users-userId-factors
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/users/{userId}/factors/catalog:
    get:
      description: Enumerates all the supported factors that can be enrolled for the
        specified user
      operationId: UserFactor_enumerateSupportedFactors
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFactorEnumerateSupportedFactorsResponse'
          description: Success
      security:
      - api_token: []
      tags:
      - UserFactor
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-users-userId-factors-catalog
      x-accepts: application/json
  /api/v1/users/{userId}/factors/questions:
    get:
      description: Enumerates all available security questions for a user's `question`
        factor
      operationId: UserFactor_enumerateSecurityQuestions
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFactorEnumerateSecurityQuestionsResponse'
          description: Success
      security:
      - api_token: []
      tags:
      - UserFactor
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-users-userId-factors-questions
      x-accepts: application/json
  /api/v1/users/{userId}/factors/{factorId}:
    delete:
      description: "Unenrolls an existing factor for the specified user, allowing\
        \ the user to enroll a new factor."
      operationId: UserFactor_unenrollFactor
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: factorId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      tags:
      - UserFactor
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-users-userId-factors-factorId
      x-accepts: application/json
    get:
      description: Fetches a factor for the specified user
      operationId: UserFactor_getFactor
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: factorId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFactor'
          description: Success
      security:
      - api_token: []
      tags:
      - UserFactor
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-users-userId-factors-factorId
      x-accepts: application/json
  /api/v1/users/{userId}/factors/{factorId}/lifecycle/activate:
    post:
      description: The `sms` and `token:software:totp` factor types require activation
        to complete the enrollment process.
      operationId: UserFactor_activateFactorLifecycle
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: factorId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivateFactorRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFactor'
          description: Success
      security:
      - api_token: []
      summary: Activate Factor
      tags:
      - UserFactor
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-users-userId-factors-factorId-lifecycle-activate
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/users/{userId}/factors/{factorId}/transactions/{transactionId}:
    get:
      description: Polls factors verification transaction for status.
      operationId: UserFactor_pollFactorTransactionStatus
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: factorId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: transactionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyUserFactorResponse'
          description: Success
      security:
      - api_token: []
      tags:
      - UserFactor
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-users-userId-factors-factorId-transactions-transactionId
      x-accepts: application/json
  /api/v1/users/{userId}/factors/{factorId}/verify:
    post:
      description: Verifies an OTP for a `token` or `token:hardware` factor
      operationId: UserFactor_verifyOtp
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: factorId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: templateId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: tokenLifetimeSeconds
        required: false
        schema:
          default: 300
          example: 300
          format: int32
          type: integer
          x-konfig-original-example: 300
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-users-userId-factors-factorId-verify-post-parameters-3-schema
        style: form
        x-okta-added-version: 1.3.0
      - explode: false
        in: header
        name: X-Forwarded-For
        required: false
        schema:
          type: string
        style: simple
        x-okta-added-version: 1.11.0
      - explode: false
        in: header
        name: User-Agent
        required: false
        schema:
          type: string
        style: simple
        x-okta-added-version: 1.11.0
      - explode: false
        in: header
        name: Accept-Language
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyFactorRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyUserFactorResponse'
          description: Success
      security:
      - api_token: []
      summary: Verify MFA Factor
      tags:
      - UserFactor
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-users-userId-factors-factorId-verify
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/users/{userId}/grants:
    delete:
      description: Revokes all grants for a specified user
      operationId: User_revokeGrants
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      tags:
      - User
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-users-userId-grants
      x-accepts: application/json
    get:
      description: Lists all grants for the specified user
      operationId: User_listGrants
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: scopeId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          example: 20
          format: int32
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-users-userId-grants-get-parameters-4-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListGrantsResponse'
          description: Success
      security:
      - api_token: []
      tags:
      - User
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-users-userId-grants
      x-accepts: application/json
  /api/v1/users/{userId}/grants/{grantId}:
    delete:
      description: Revokes one grant for a specified user
      operationId: User_revokeGrant
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: grantId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      tags:
      - User
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-users-userId-grants-grantId
      x-accepts: application/json
    get:
      description: Gets a grant for the specified user
      operationId: User_getGrantById
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: grantId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2ScopeConsentGrant'
          description: Success
      security:
      - api_token: []
      tags:
      - User
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-users-userId-grants-grantId
      x-accepts: application/json
  /api/v1/users/{userId}/groups:
    get:
      description: Fetches the groups of which the user is a member.
      operationId: User_getMemberGroups
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetMemberGroupsResponse'
          description: Success
      security:
      - api_token: []
      summary: Get Member Groups
      tags:
      - User
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-users-userId-groups
      x-accepts: application/json
  /api/v1/users/{userId}/idps:
    get:
      description: Lists the IdPs associated with the user.
      operationId: User_listIdpsForUser
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListIdpsForUserResponse'
          description: Success
      security:
      - api_token: []
      summary: Listing IdPs associated with a user
      tags:
      - User
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-users-userId-idps
      x-accepts: application/json
  /api/v1/users/{userId}/lifecycle/activate:
    post:
      description: Activates a user.  This operation can only be performed on users
        with a `STAGED` status.  Activation of a user is an asynchronous operation.
        The user will have the `transitioningToStatus` property with a value of `ACTIVE`
        during activation to indicate that the user hasn't completed the asynchronous
        operation.  The user will have a status of `ACTIVE` when the activation process
        is complete.
      operationId: User_activateLifecycle
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: Sends an activation email to the user if true
        explode: true
        in: query
        name: sendEmail
        required: true
        schema:
          default: true
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-users-userId-lifecycle-activate-post-parameters-1-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserActivationToken'
          description: Success
      security:
      - api_token: []
      summary: Activate User
      tags:
      - User
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-users-userId-lifecycle-activate
      x-accepts: application/json
  /api/v1/users/{userId}/lifecycle/deactivate:
    post:
      description: "Deactivates a user. This operation can only be performed on users\
        \ that do not have a `DEPROVISIONED` status. While the asynchronous operation\
        \ (triggered by HTTP header `Prefer: respond-async`) is proceeding the user's\
        \ `transitioningToStatus` property is `DEPROVISIONED`. The user's status is\
        \ `DEPROVISIONED` when the deactivation process is complete."
      operationId: User_deactivateLifecycle
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: sendEmail
        required: false
        schema:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-users-userId-lifecycle-deactivate-post-parameters-1-schema
        style: form
        x-okta-added-version: 1.5.0
      responses:
        "200":
          description: OK
      security:
      - api_token: []
      summary: Deactivate User
      tags:
      - User
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-users-userId-lifecycle-deactivate
      x-accepts: application/json
  /api/v1/users/{userId}/lifecycle/expire_password?tempPassword=false:
    post:
      description: This operation transitions the user to the status of `PASSWORD_EXPIRED`
        so that the user is required to change their password at their next login.
      operationId: User_expirePasswordAndGetTemporaryPassword
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Success
      security:
      - api_token: []
      summary: Expire Password
      tags:
      - User
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-users-userId-lifecycle-expire_password?tempPassword=false
      x-accepts: application/json
  /api/v1/users/{userId}/lifecycle/expire_password?tempPassword=true:
    post:
      description: This operation transitions the user to the status of `PASSWORD_EXPIRED`
        and the user's password is reset to a temporary password that is returned.
      operationId: User_expirePasswordAndTemporaryPassword
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TempPassword'
          description: Success
      security:
      - api_token: []
      summary: Expire Password
      tags:
      - User
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-users-userId-lifecycle-expire_password?tempPassword=true
      x-accepts: application/json
  /api/v1/users/{userId}/lifecycle/reactivate:
    post:
      description: "Reactivates a user.  This operation can only be performed on users\
        \ with a `PROVISIONED` status.  This operation restarts the activation workflow\
        \ if for some reason the user activation was not completed when using the\
        \ activationToken from [Activate User](https://raw.githubusercontent.com)."
      operationId: User_reactivateUser
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: Sends an activation email to the user if true
        explode: true
        in: query
        name: sendEmail
        required: false
        schema:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-users-userId-lifecycle-reactivate-post-parameters-1-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserActivationToken'
          description: Success
      security:
      - api_token: []
      summary: Reactivate User
      tags:
      - User
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-users-userId-lifecycle-reactivate
      x-accepts: application/json
  /api/v1/users/{userId}/lifecycle/reset_factors:
    post:
      description: This operation resets all factors for the specified user. All MFA
        factor enrollments returned to the unenrolled state. The user's status remains
        ACTIVE. This link is present only if the user is currently enrolled in one
        or more MFA factors.
      operationId: User_resetFactorsOperation
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
      security:
      - api_token: []
      summary: Reset Factors
      tags:
      - User
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-users-userId-lifecycle-reset_factors
      x-accepts: application/json
  /api/v1/users/{userId}/lifecycle/reset_password:
    post:
      description: Generates a one-time token (OTT) that can be used to reset a user's
        password.  The OTT link can be automatically emailed to the user or returned
        to the API caller and distributed using a custom flow.
      operationId: User_generatePasswordResetToken
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: sendEmail
        required: true
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPasswordToken'
          description: Success
      security:
      - api_token: []
      summary: Reset Password
      tags:
      - User
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-users-userId-lifecycle-reset_password
      x-accepts: application/json
  /api/v1/users/{userId}/lifecycle/suspend:
    post:
      description: Suspends a user.  This operation can only be performed on users
        with an `ACTIVE` status.  The user will have a status of `SUSPENDED` when
        the process is complete.
      operationId: User_suspendLifecycle
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
      security:
      - api_token: []
      summary: Suspend User
      tags:
      - User
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-users-userId-lifecycle-suspend
      x-accepts: application/json
  /api/v1/users/{userId}/lifecycle/unlock:
    post:
      description: Unlocks a user with a `LOCKED_OUT` status and returns them to `ACTIVE`
        status.  Users will be able to login with their current password.
      operationId: User_unlockUserStatus
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
      security:
      - api_token: []
      summary: Unlock User
      tags:
      - User
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-users-userId-lifecycle-unlock
      x-accepts: application/json
  /api/v1/users/{userId}/lifecycle/unsuspend:
    post:
      description: Unsuspends a user and returns them to the `ACTIVE` state.  This
        operation can only be performed on users that have a `SUSPENDED` status.
      operationId: User_unsuspendLifecycle
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
      security:
      - api_token: []
      summary: Unsuspend User
      tags:
      - User
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-users-userId-lifecycle-unsuspend
      x-accepts: application/json
  /api/v1/users/{userId}/linkedObjects/{relationshipName}:
    delete:
      description: "Delete linked objects for a user, relationshipName can be ONLY\
        \ a primary relationship name"
      operationId: User_deleteLinkedObjects
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: relationshipName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      tags:
      - User
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-users-userId-linkedObjects-relationshipName
      x-accepts: application/json
    get:
      description: "Get linked objects for a user, relationshipName can be a primary\
        \ or associated relationship name"
      operationId: User_getLinkedObjects
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: relationshipName
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: -1
          example: -1
          format: int32
          type: integer
          x-konfig-original-example: -1
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-users-userId-linkedObjects-relationshipName-get-parameters-3-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetLinkedObjectsResponse'
          description: Success
      security:
      - api_token: []
      tags:
      - User
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-users-userId-linkedObjects-relationshipName
      x-accepts: application/json
  /api/v1/users/{userId}/roles:
    get:
      description: Lists all roles assigned to a user.
      operationId: User_listAssignedRoles
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListAssignedRolesResponse'
          description: Success
      security:
      - api_token: []
      tags:
      - User
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-users-userId-roles
      x-accepts: application/json
    post:
      description: Assigns a role to a user.
      operationId: User_assignRole
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: disableNotifications
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        $ref: '#/components/requestBodies/AssignRoleRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: Created
      security:
      - api_token: []
      tags:
      - User
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-users-userId-roles
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/users/{userId}/roles/{roleId}:
    delete:
      description: Unassigns a role from a user.
      operationId: User_unassignRole
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      tags:
      - User
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-users-userId-roles-roleId
      x-accepts: application/json
    get:
      description: Gets role that is assigne to user.
      operationId: User_getAssignedRole
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: Success
      security:
      - api_token: []
      tags:
      - User
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-users-userId-roles-roleId
      x-accepts: application/json
  /api/v1/users/{userId}/roles/{roleId}/targets/catalog/apps:
    get:
      description: "Lists all App targets for an `APP_ADMIN` Role assigned to a User.\
        \ This methods return list may include full Applications or Instances. The\
        \ response for an instance will have an `ID` value, while Application will\
        \ not have an ID."
      operationId: User_listAppTargetsForRole
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          example: 20
          format: int32
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-users-userId-roles-roleId-targets-catalog-apps-get-parameters-3-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListAppTargetsForRoleResponse'
          description: Success
      security:
      - api_token: []
      tags:
      - User
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-users-userId-roles-roleId-targets-catalog-apps
      x-accepts: application/json
    put:
      description: Success
      operationId: User_updateRolesCatalogApps
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
      security:
      - api_token: []
      tags:
      - User
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-v1-users-userId-roles-roleId-targets-catalog-apps
      x-accepts: application/json
  /api/v1/users/{userId}/roles/{roleId}/targets/catalog/apps/{appName}:
    delete:
      description: Success
      operationId: User_deleteTargetApp
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      tags:
      - User
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-users-userId-roles-roleId-targets-catalog-apps-appName
      x-accepts: application/json
    put:
      description: Success
      operationId: User_updateRolesCatalogApps
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
      security:
      - api_token: []
      tags:
      - User
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-v1-users-userId-roles-roleId-targets-catalog-apps-appName
      x-accepts: application/json
  /api/v1/users/{userId}/roles/{roleId}/targets/catalog/apps/{appName}/{applicationId}:
    delete:
      description: Remove App Instance Target to App Administrator Role given to a
        User
      operationId: User_removeAppInstanceTargetToAppAdministratorRoleGivenTo
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      summary: Remove App Instance Target to App Administrator Role given to a User
      tags:
      - User
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-users-userId-roles-roleId-targets-catalog-apps-appName-applicationId
      x-accepts: application/json
    put:
      description: Add App Instance Target to App Administrator Role given to a User
      operationId: User_addAppInstanceTargetToAppAdministratorRoleGivenToUser
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      summary: Add App Instance Target to App Administrator Role given to a User
      tags:
      - User
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-v1-users-userId-roles-roleId-targets-catalog-apps-appName-applicationId
      x-accepts: application/json
  /api/v1/users/{userId}/roles/{roleId}/targets/groups:
    get:
      description: Success
      operationId: User_listRoleTargetsGroups
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          example: 20
          format: int32
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-users-userId-roles-roleId-targets-groups-get-parameters-3-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListRoleTargetsGroupsResponse'
          description: Success
      security:
      - api_token: []
      tags:
      - User
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-users-userId-roles-roleId-targets-groups
      x-accepts: application/json
  /api/v1/users/{userId}/roles/{roleId}/targets/groups/{groupId}:
    delete:
      description: Success
      operationId: User_removeTargetGroup
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      tags:
      - User
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-users-userId-roles-roleId-targets-groups-groupId
      x-accepts: application/json
    put:
      description: Success
      operationId: User_updateRolesCatalogApps
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
      security:
      - api_token: []
      tags:
      - User
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-v1-users-userId-roles-roleId-targets-groups-groupId
      x-accepts: application/json
  /api/v1/users/{userId}/sessions:
    delete:
      description: Removes all active identity provider sessions. This forces the
        user to authenticate on the next operation. Optionally revokes OpenID Connect
        and OAuth refresh and access tokens issued to the user.
      operationId: User_revokeAllSessions
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: Revoke issued OpenID Connect and OAuth refresh and access tokens
        explode: true
        in: query
        name: oauthTokens
        required: false
        schema:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-users-userId-sessions-delete-parameters-1-schema
        style: form
      responses:
        "204":
          description: No Content
      security:
      - api_token: []
      tags:
      - User
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-users-userId-sessions
      x-accepts: application/json
  /api/v1/users/{userId}/subscriptions:
    get:
      description: List subscriptions of a User. Only lists subscriptions for current
        user. An AccessDeniedException message is sent if requests are made from other
        users.
      operationId: User_listSubscriptions
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListSubscriptionsResponse'
          description: Success
        "404":
          description: Not Found
      security:
      - api_token: []
      summary: List subscriptions of a User
      tags:
      - User
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-users-userId-subscriptions
      x-accepts: application/json
  /api/v1/users/{userId}/subscriptions/{notificationType}:
    get:
      description: Get the subscriptions of a User with a specific notification type.
        Only gets subscriptions for current user. An AccessDeniedException message
        is sent if requests are made from other users.
      operationId: User_getSubscriptionByNotification
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: notificationType
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: Success
        "404":
          description: Not Found
      security:
      - api_token: []
      summary: Get the subscription of a User with a specific notification type
      tags:
      - User
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-users-userId-subscriptions-notificationType
      x-accepts: application/json
  /api/v1/users/{userId}/subscriptions/{notificationType}/subscribe:
    post:
      description: Subscribes a User to a specific notification type. Only the current
        User can subscribe to a specific notification type. An AccessDeniedException
        message is sent if requests are made from other users.
      operationId: Subscription_userNotificationSubscribe
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: notificationType
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "404":
          description: Not Found
      security:
      - api_token: []
      summary: Subscribe to a specific notification type
      tags:
      - Subscription
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-users-userId-subscriptions-notificationType-subscribe
      x-accepts: application/json
  /api/v1/users/{userId}/subscriptions/{notificationType}/unsubscribe:
    post:
      description: Unsubscribes a User from a specific notification type. Only the
        current User can unsubscribe from a specific notification type. An AccessDeniedException
        message is sent if requests are made from other users.
      operationId: Subscription_unsubscribeUserSubscriptionByNotificationType
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: notificationType
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "404":
          description: Not Found
      security:
      - api_token: []
      summary: Unsubscribe from a specific notification type
      tags:
      - Subscription
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-users-userId-subscriptions-notificationType-unsubscribe
      x-accepts: application/json
  /api/v1/zones:
    get:
      description: Enumerates network zones added to your organization with pagination.
        A subset of zones can be returned that match a supported filter expression
        or query.
      operationId: NetworkZone_listZones
      parameters:
      - description: Specifies the pagination cursor for the next page of network
          zones
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the number of results for a page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: -1
          example: -1
          format: int32
          type: integer
          x-konfig-original-example: -1
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-zones-get-parameters-1-schema
        style: form
      - description: Filters zones by usage or id expression
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkZoneListZonesResponse'
          description: Success
      security:
      - api_token: []
      summary: List Network Zones
      tags:
      - NetworkZone
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-zones
      x-accepts: application/json
    post:
      description: Adds a new network zone to your Okta organization.
      operationId: NetworkZone_createNew
      requestBody:
        $ref: '#/components/requestBodies/NetworkZone'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkZone'
          description: Success
      security:
      - api_token: []
      summary: Add Network Zone
      tags:
      - NetworkZone
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-zones
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/zones/{zoneId}:
    delete:
      description: Removes network zone.
      operationId: NetworkZone_removeZone
      parameters:
      - explode: false
        in: path
        name: zoneId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
      security:
      - api_token: []
      summary: Delete Network Zone
      tags:
      - NetworkZone
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-zones-zoneId
      x-accepts: application/json
    get:
      description: Fetches a network zone from your Okta organization by `id`.
      operationId: NetworkZone_getById
      parameters:
      - explode: false
        in: path
        name: zoneId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkZone'
          description: Success
      security:
      - api_token: []
      summary: Get Network Zone
      tags:
      - NetworkZone
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-zones-zoneId
      x-accepts: application/json
    put:
      description: Updates a network zone in your organization.
      operationId: NetworkZone_updateZone
      parameters:
      - explode: false
        in: path
        name: zoneId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/NetworkZone'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkZone'
          description: Success
      security:
      - api_token: []
      summary: Update Network Zone
      tags:
      - NetworkZone
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-v1-zones-zoneId
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/zones/{zoneId}/lifecycle/activate:
    post:
      description: Activate Network Zone
      operationId: NetworkZone_activateLifecycle
      parameters:
      - explode: false
        in: path
        name: zoneId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkZone'
          description: Success
      security:
      - api_token: []
      summary: Activate Network Zone
      tags:
      - NetworkZone
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-zones-zoneId-lifecycle-activate
      x-accepts: application/json
  /api/v1/zones/{zoneId}/lifecycle/deactivate:
    post:
      description: Deactivates a network zone.
      operationId: NetworkZone_deactivateZoneLifecycle
      parameters:
      - explode: false
        in: path
        name: zoneId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkZone'
          description: Success
      security:
      - api_token: []
      summary: Deactivate Network Zone
      tags:
      - NetworkZone
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-zones-zoneId-lifecycle-deactivate
      x-accepts: application/json
components:
  requestBodies:
    Authenticator:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Authenticator'
      required: true
    AuthorizationServerPolicyRule:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorizationServerPolicyRule'
      required: true
    SmsTemplate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SmsTemplate'
      required: true
    AuthorizationServerPolicy:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorizationServerPolicy'
      required: true
    CsrMetadata:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CsrMetadata'
      required: true
    UserType:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserType'
      required: true
    Policy:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Policy'
      required: true
    AssignRoleRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AssignRoleRequest'
      required: true
    InlineHook:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InlineHook'
      required: true
    Application:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Application'
      required: true
    uploadApplicationLogo:
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/ApplicationUpdateLogoRequest'
      required: true
    AppUser:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AppUser'
      required: true
    AuthorizationServer:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorizationServer'
      required: true
    OAuth2Claim:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OAuth2Claim'
      required: true
    OAuth2Scope:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OAuth2Scope'
      required: true
    EmailTemplateCustomizationRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmailTemplateCustomizationRequest'
      required: true
    EventHook:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EventHook'
      required: true
    Group:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Group'
      required: true
    GroupRule:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GroupRule'
      required: true
    IdentityProvider:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IdentityProvider'
      required: true
    OrgSetting:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrgSetting'
      required: true
    PolicyRule:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PolicyRule'
      required: true
    TrustedOrigin:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TrustedOrigin'
      required: true
    User:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
      required: true
    NetworkZone:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NetworkZone'
      required: true
  schemas:
    AccessPolicy:
      x-okta-parent: '#/definitions/Policy'
      x-okta-tags:
      - Policy
    AccessPolicyConstraint:
      properties:
        methods:
          items:
            type: string
          type: array
        reauthenticateIn:
          type: string
        types:
          items:
            type: string
          type: array
      type: object
      x-okta-tags:
      - Policy
    AccessPolicyConstraints:
      properties:
        knowledge:
          x-okta-parent: '#/definitions/AccessPolicyConstraint'
          x-okta-tags:
          - Policy
        possession:
          $ref: '#/components/schemas/PossessionConstraint'
      type: object
      x-okta-tags:
      - Policy
    AccessPolicyRule:
      properties:
        actions:
          $ref: '#/components/schemas/AccessPolicyRuleActions'
        conditions:
          $ref: '#/components/schemas/AccessPolicyRuleConditions'
        name:
          type: string
      type: object
      x-okta-parent: '#/definitions/PolicyRule'
      x-okta-tags:
      - Policy
    AccessPolicyRuleActions:
      properties:
        appSignOn:
          $ref: '#/components/schemas/AccessPolicyRuleApplicationSignOn'
      type: object
      x-okta-parent: '#/definitions/PolicyRuleActions'
      x-okta-tags:
      - Policy
    AccessPolicyRuleApplicationSignOn:
      properties:
        access:
          type: string
        verificationMethod:
          $ref: '#/components/schemas/VerificationMethod'
      type: object
      x-okta-tags:
      - Policy
    AccessPolicyRuleConditions:
      properties:
        device:
          $ref: '#/components/schemas/DeviceAccessPolicyRuleCondition'
        elCondition:
          $ref: '#/components/schemas/AccessPolicyRuleCustomCondition'
        userType:
          $ref: '#/components/schemas/UserTypeCondition'
      x-okta-parent: '#/definitions/PolicyRuleConditions'
      x-okta-tags:
      - Policy
    AccessPolicyRuleCustomCondition:
      properties:
        condition:
          type: string
      x-okta-tags:
      - Policy
    AcsEndpoint:
      properties:
        index:
          type: integer
        url:
          type: string
      x-okta-tags:
      - Application
    ActivateFactorRequest:
      example:
        attestation: attestation
        stateToken: stateToken
        clientData: clientData
        passCode: passCode
        registrationData: registrationData
      properties:
        attestation:
          type: string
        clientData:
          type: string
        passCode:
          type: string
        registrationData:
          type: string
        stateToken:
          type: string
      x-okta-tags:
      - UserFactor
    AllowedForEnum:
      enum:
      - recovery
      - sso
      - any
      - none
      type: string
      x-okta-tags:
      - Authenticator
    AppAndInstanceConditionEvaluatorAppOrInstance:
      example:
        name: name
        id: id
        type: APP_TYPE
      properties:
        id:
          readOnly: true
          type: string
        name:
          type: string
        type:
          enum:
          - APP_TYPE
          - APP
          type: string
      type: object
      x-okta-tags:
      - Policy
    AppAndInstancePolicyRuleCondition:
      example:
        include:
        - name: name
          id: id
          type: APP_TYPE
        - name: name
          id: id
          type: APP_TYPE
        exclude:
        - name: name
          id: id
          type: APP_TYPE
        - name: name
          id: id
          type: APP_TYPE
      properties:
        exclude:
          items:
            $ref: '#/components/schemas/AppAndInstanceConditionEvaluatorAppOrInstance'
          type: array
        include:
          items:
            $ref: '#/components/schemas/AppAndInstanceConditionEvaluatorAppOrInstance'
          type: array
      type: object
      x-okta-tags:
      - Policy
    AppInstancePolicyRuleCondition:
      example:
        include:
        - include
        - include
        exclude:
        - exclude
        - exclude
      properties:
        exclude:
          items:
            type: string
          type: array
        include:
          items:
            type: string
          type: array
      type: object
      x-okta-tags:
      - Policy
    AppLink:
      example:
        appInstanceId: appInstanceId
        credentialsSetup: true
        hidden: true
        appName: appName
        appAssignmentId: appAssignmentId
        sortOrder: 0
        linkUrl: linkUrl
        id: id
        label: label
        logoUrl: logoUrl
      properties:
        appAssignmentId:
          readOnly: true
          type: string
        appInstanceId:
          readOnly: true
          type: string
        appName:
          readOnly: true
          type: string
        credentialsSetup:
          readOnly: true
          type: boolean
        hidden:
          readOnly: true
          type: boolean
        id:
          readOnly: true
          type: string
        label:
          readOnly: true
          type: string
        linkUrl:
          readOnly: true
          type: string
        logoUrl:
          readOnly: true
          type: string
        sortOrder:
          readOnly: true
          type: integer
      type: object
      x-okta-tags:
      - User
    AppUser:
      example:
        _links:
          key: "{}"
        credentials:
          password:
            value: value
          userName: userName
        created: 2000-01-23T04:56:07.000+00:00
        profile:
          key: "{}"
        syncState: syncState
        externalId: externalId
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        passwordChanged: 2000-01-23T04:56:07.000+00:00
        lastSync: 2000-01-23T04:56:07.000+00:00
        _embedded:
          key: "{}"
        scope: scope
        statusChanged: 2000-01-23T04:56:07.000+00:00
        id: id
        status: status
      properties:
        _embedded:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        created:
          format: date-time
          readOnly: true
          type: string
        credentials:
          $ref: '#/components/schemas/AppUserCredentials'
        externalId:
          readOnly: true
          type: string
        id:
          type: string
        lastSync:
          format: date-time
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        passwordChanged:
          format: date-time
          readOnly: true
          type: string
        profile:
          additionalProperties:
            type: object
          type: object
        scope:
          type: string
        status:
          readOnly: true
          type: string
        statusChanged:
          format: date-time
          readOnly: true
          type: string
        syncState:
          readOnly: true
          type: string
      type: object
      x-okta-crud:
      - operationId: updateApplicationUser
        alias: update
        arguments:
        - dest: appId
          parentSrc: appId
        - dest: userId
          src: id
        - dest: appUser
          self: true
      - operationId: deleteApplicationUser
        alias: delete
        arguments:
        - dest: appId
          parentSrc: appId
        - dest: userId
          src: id
      x-okta-tags:
      - Application
      x-konfig-is-used-in-successful-response: true
    AppUserCredentials:
      example:
        password:
          value: value
        userName: userName
      properties:
        password:
          $ref: '#/components/schemas/AppUserPasswordCredential'
        userName:
          type: string
      type: object
      x-okta-tags:
      - Application
    AppUserPasswordCredential:
      example:
        value: value
      properties:
        value:
          format: password
          type: string
      x-okta-tags:
      - Application
    Application:
      example:
        settings:
          app:
            acsUrl: acsUrl
            loginUrlRegex: loginUrlRegex
            usernameField: usernameField
            orgName: orgName
            buttonField: buttonField
            passwordField: passwordField
            url: url
          notes:
            enduser: enduser
            admin: admin
          inlineHookId: inlineHookId
          implicitAssignment: true
          notifications:
            vpn:
              helpUrl: helpUrl
              message: message
              network:
                include:
                - include
                - include
                connection: connection
                exclude:
                - exclude
                - exclude
        visibility:
          hide:
            web: true
            iOS: true
          appLinks:
            key: true
          autoLaunch: true
          autoSubmitToolbar: true
        _links:
          key: "{}"
        accessibility:
          errorRedirectUrl: errorRedirectUrl
          selfService: true
          loginRedirectUrl: loginRedirectUrl
        credentials:
          userNameTemplate:
            template: template
            pushStatus: pushStatus
            suffix: suffix
            type: type
          signing:
            nextRotation: 2000-01-23T04:56:07.000+00:00
            use: null
            kid: kid
            rotationMode: rotationMode
            lastRotated: 2000-01-23T04:56:07.000+00:00
        created: 2000-01-23T04:56:07.000+00:00
        profile:
          key: "{}"
        signOnMode: null
        label: label
        features:
        - features
        - features
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        _embedded:
          key: "{}"
        name: name
        id: id
        licensing:
          seatCount: 0
        status: ACTIVE
      properties:
        _embedded:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        accessibility:
          $ref: '#/components/schemas/ApplicationAccessibility'
        created:
          format: date-time
          readOnly: true
          type: string
        credentials:
          $ref: '#/components/schemas/ApplicationCredentials'
        features:
          items:
            type: string
          type: array
        id:
          readOnly: true
          type: string
        label:
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        licensing:
          $ref: '#/components/schemas/ApplicationLicensing'
        name:
          readOnly: true
          type: string
        profile:
          additionalProperties:
            type: object
          type: object
        settings:
          $ref: '#/components/schemas/ApplicationSettings'
        signOnMode:
          $ref: '#/components/schemas/ApplicationSignOnMode'
        status:
          enum:
          - ACTIVE
          - INACTIVE
          - DELETED
          readOnly: true
          type: string
        visibility:
          $ref: '#/components/schemas/ApplicationVisibility'
      type: object
      x-okta-crud:
      - operationId: getApplication
        alias: read
        arguments:
        - dest: appId
          src: id
      - operationId: updateApplication
        alias: update
        arguments:
        - dest: appId
          src: id
        - dest: application
          self: true
      - operationId: deleteApplication
        alias: delete
        arguments:
        - dest: appId
          src: id
      x-okta-operations:
      - operationId: activateApplication
        alias: activate
        arguments:
        - dest: appId
          src: id
      - operationId: deactivateApplication
        alias: deactivate
        arguments:
        - dest: appId
          src: id
      - operationId: listApplicationUsers
        alias: listApplicationUsers
        arguments:
        - dest: appId
          src: id
      - operationId: assignUserToApplication
        alias: assignUserToApplication
        arguments:
        - dest: appId
          src: id
      - operationId: getApplicationUser
        alias: getApplicationUser
        arguments:
        - dest: appId
          src: id
      - operationId: createApplicationGroupAssignment
        alias: createApplicationGroupAssignment
        arguments:
        - dest: appId
          src: id
      - operationId: getApplicationGroupAssignment
        alias: getApplicationGroupAssignment
        arguments:
        - dest: appId
          src: id
      - operationId: cloneApplicationKey
        alias: cloneApplicationKey
        arguments:
        - dest: appId
          src: id
      - operationId: getApplicationKey
        alias: getApplicationKey
        arguments:
        - dest: appId
          src: id
      - operationId: listApplicationGroupAssignments
        alias: listGroupAssignments
        arguments:
        - dest: appId
          src: id
      - operationId: listApplicationKeys
        alias: listKeys
        arguments:
        - dest: appId
          src: id
      - operationId: generateApplicationKey
        alias: generateKey
        arguments:
        - dest: appId
          src: id
      - operationId: generateCsrForApplication
        alias: generateCsr
        arguments:
        - dest: appId
          src: id
      - operationId: getCsrForApplication
        alias: getCsr
        arguments:
        - dest: appId
          src: id
      - operationId: revokeCsrFromApplication
        alias: revokeCsr
        arguments:
        - dest: appId
          src: id
      - operationId: listCsrsForApplication
        alias: listCsrs
        arguments:
        - dest: appId
          src: id
      - operationId: publishCerCert
        alias: publishCerCert
        arguments:
        - dest: appId
          src: id
      - operationId: publishBinaryCerCert
        alias: publishBinaryCerCert
        arguments:
        - dest: appId
          src: id
      - operationId: publishDerCert
        alias: publishDerCert
        arguments:
        - dest: appId
          src: id
      - operationId: publishBinaryDerCert
        alias: publishBinaryDerCert
        arguments:
        - dest: appId
          src: id
      - operationId: publishBinaryPemCert
        alias: publishBinaryPemCert
        arguments:
        - dest: appId
          src: id
      - operationId: listOAuth2TokensForApplication
        alias: listOAuth2Tokens
        arguments:
        - dest: appId
          src: id
      - operationId: revokeOAuth2TokenForApplication
        alias: revokeOAuth2TokenForApplication
        arguments:
        - dest: appId
          src: id
      - operationId: getOAuth2TokenForApplication
        alias: getOAuth2Token
        arguments:
        - dest: appId
          src: id
      - operationId: revokeOAuth2TokensForApplication
        alias: revokeOAuth2Tokens
        arguments:
        - dest: appId
          src: id
      - operationId: listScopeConsentGrants
        alias: listScopeConsentGrants
        arguments:
        - dest: appId
          src: id
      - operationId: grantConsentToScope
        alias: grantConsentToScope
        arguments:
        - dest: appId
          src: id
      - operationId: revokeScopeConsentGrant
        alias: revokeScopeConsentGrant
        arguments:
        - dest: appId
          src: id
      - operationId: getScopeConsentGrant
        alias: getScopeConsentGrant
        arguments:
        - dest: appId
          src: id
      - operationId: uploadApplicationLogo
        alias: uploadApplicationLogo
      - operationId: getFeatureForApplication
        alias: getFeatureForApplication
        arguments:
        - dest: appId
          src: id
      - operationId: updateFeatureForApplication
        alias: updateFeatureForApplication
        arguments:
        - dest: appId
          src: id
      - operationId: updateApplicationPolicy
        alias: updateApplicationPolicy
        arguments:
        - dest: appId
          src: id
      x-okta-tags:
      - Application
      x-openapi-v3-discriminator:
        mapping:
          AUTO_LOGIN: '#/definitions/AutoLoginApplication'
          BASIC_AUTH: '#/definitions/BasicAuthApplication'
          BOOKMARK: '#/definitions/BookmarkApplication'
          BROWSER_PLUGIN: '#/definitions/BrowserPluginApplication'
          OPENID_CONNECT: '#/definitions/OpenIdConnectApplication'
          SAML_1_1: '#/definitions/SamlApplication'
          SAML_2_0: '#/definitions/SamlApplication'
          SECURE_PASSWORD_STORE: '#/definitions/SecurePasswordStoreApplication'
          WS_FEDERATION: '#/definitions/WsFederationApplication'
        propertyName: signOnMode
      x-konfig-is-used-in-successful-response: true
    ApplicationAccessibility:
      example:
        errorRedirectUrl: errorRedirectUrl
        selfService: true
        loginRedirectUrl: loginRedirectUrl
      properties:
        errorRedirectUrl:
          type: string
        loginRedirectUrl:
          type: string
        selfService:
          type: boolean
      type: object
      x-okta-tags:
      - Application
    ApplicationCredentials:
      example:
        userNameTemplate:
          template: template
          pushStatus: pushStatus
          suffix: suffix
          type: type
        signing:
          nextRotation: 2000-01-23T04:56:07.000+00:00
          use: null
          kid: kid
          rotationMode: rotationMode
          lastRotated: 2000-01-23T04:56:07.000+00:00
      properties:
        signing:
          $ref: '#/components/schemas/ApplicationCredentialsSigning'
        userNameTemplate:
          $ref: '#/components/schemas/ApplicationCredentialsUsernameTemplate'
      type: object
      x-okta-tags:
      - Application
    ApplicationCredentialsOAuthClient:
      properties:
        autoKeyRotation:
          type: boolean
        client_id:
          type: string
        client_secret:
          type: string
        pkce_required:
          type: boolean
        token_endpoint_auth_method:
          $ref: '#/components/schemas/OAuthEndpointAuthenticationMethod'
      x-okta-tags:
      - Application
    ApplicationCredentialsScheme:
      enum:
      - SHARED_USERNAME_AND_PASSWORD
      - EXTERNAL_PASSWORD_SYNC
      - EDIT_USERNAME_AND_PASSWORD
      - EDIT_PASSWORD_ONLY
      - ADMIN_SETS_CREDENTIALS
      type: string
      x-okta-tags:
      - Application
    ApplicationCredentialsSigning:
      example:
        nextRotation: 2000-01-23T04:56:07.000+00:00
        use: null
        kid: kid
        rotationMode: rotationMode
        lastRotated: 2000-01-23T04:56:07.000+00:00
      properties:
        kid:
          type: string
        lastRotated:
          format: date-time
          readOnly: true
          type: string
        nextRotation:
          format: date-time
          readOnly: true
          type: string
        rotationMode:
          type: string
        use:
          $ref: '#/components/schemas/ApplicationCredentialsSigningUse'
      type: object
      x-okta-tags:
      - Application
    ApplicationCredentialsSigningUse:
      enum:
      - sig
      type: string
      x-okta-tags:
      - AuthorizationServer
    ApplicationCredentialsUsernameTemplate:
      example:
        template: template
        pushStatus: pushStatus
        suffix: suffix
        type: type
      properties:
        pushStatus:
          type: string
        suffix:
          type: string
        template:
          type: string
        type:
          type: string
      type: object
      x-okta-tags:
      - Application
    ApplicationFeature:
      example:
        capabilities:
          create:
            lifecycleCreate:
              status: null
          update:
            password:
              seed: null
              change: null
              status: null
            profile:
              status: null
            lifecycleDeactivate:
              status: null
        _links:
          key: "{}"
        name: name
        description: description
        status: null
      properties:
        description:
          type: string
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        capabilities:
          $ref: '#/components/schemas/CapabilitiesObject'
        name:
          type: string
        status:
          $ref: '#/components/schemas/EnabledStatus'
      type: object
      x-okta-operations:
      - operationId: listFeaturesForApplication
        alias: listFeaturesForApplication
      x-okta-tags:
      - Application
      x-konfig-is-used-in-successful-response: true
    ApplicationGroupAssignment:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        _embedded:
          key: "{}"
        _links:
          key: "{}"
        profile:
          key: "{}"
        id: id
        priority: 0
      properties:
        _embedded:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        priority:
          type: integer
        profile:
          additionalProperties:
            type: object
          type: object
      type: object
      x-okta-crud:
      - operationId: deleteApplicationGroupAssignment
        alias: delete
        arguments:
        - dest: appId
          parentSrc: appId
        - dest: groupId
          src: id
      x-okta-tags:
      - Application
      x-konfig-is-used-in-successful-response: true
    ApplicationLicensing:
      example:
        seatCount: 0
      properties:
        seatCount:
          type: integer
      type: object
      x-okta-tags:
      - Application
    ApplicationSettings:
      example:
        app:
          acsUrl: acsUrl
          loginUrlRegex: loginUrlRegex
          usernameField: usernameField
          orgName: orgName
          buttonField: buttonField
          passwordField: passwordField
          url: url
        notes:
          enduser: enduser
          admin: admin
        inlineHookId: inlineHookId
        implicitAssignment: true
        notifications:
          vpn:
            helpUrl: helpUrl
            message: message
            network:
              include:
              - include
              - include
              connection: connection
              exclude:
              - exclude
              - exclude
      properties:
        app:
          $ref: '#/components/schemas/ApplicationSettingsApplication'
        implicitAssignment:
          type: boolean
        inlineHookId:
          type: string
        notes:
          $ref: '#/components/schemas/ApplicationSettingsNotes'
        notifications:
          $ref: '#/components/schemas/ApplicationSettingsNotifications'
      type: object
      x-okta-tags:
      - Application
    ApplicationSettingsApplication:
      example:
        acsUrl: acsUrl
        loginUrlRegex: loginUrlRegex
        usernameField: usernameField
        orgName: orgName
        buttonField: buttonField
        passwordField: passwordField
        url: url
      properties:
        acsUrl:
          type: string
        buttonField:
          type: string
        loginUrlRegex:
          type: string
        orgName:
          type: string
        passwordField:
          type: string
        url:
          type: string
        usernameField:
          type: string
      x-okta-tags:
      - Application
    ApplicationSettingsNotes:
      example:
        enduser: enduser
        admin: admin
      properties:
        admin:
          type: string
        enduser:
          type: string
      type: object
      x-okta-tags:
      - Application
    ApplicationSettingsNotifications:
      example:
        vpn:
          helpUrl: helpUrl
          message: message
          network:
            include:
            - include
            - include
            connection: connection
            exclude:
            - exclude
            - exclude
      properties:
        vpn:
          $ref: '#/components/schemas/ApplicationSettingsNotificationsVpn'
      type: object
      x-okta-tags:
      - Application
    ApplicationSettingsNotificationsVpn:
      example:
        helpUrl: helpUrl
        message: message
        network:
          include:
          - include
          - include
          connection: connection
          exclude:
          - exclude
          - exclude
      properties:
        helpUrl:
          type: string
        message:
          type: string
        network:
          $ref: '#/components/schemas/ApplicationSettingsNotificationsVpnNetwork'
      type: object
      x-okta-tags:
      - Application
    ApplicationSettingsNotificationsVpnNetwork:
      example:
        include:
        - include
        - include
        connection: connection
        exclude:
        - exclude
        - exclude
      properties:
        connection:
          type: string
        exclude:
          items:
            type: string
          type: array
        include:
          items:
            type: string
          type: array
      type: object
      x-okta-tags:
      - Application
    ApplicationSignOnMode:
      enum:
      - BOOKMARK
      - BASIC_AUTH
      - BROWSER_PLUGIN
      - SECURE_PASSWORD_STORE
      - AUTO_LOGIN
      - WS_FEDERATION
      - SAML_2_0
      - OPENID_CONNECT
      - SAML_1_1
      type: string
      x-okta-tags:
      - Application
    ApplicationVisibility:
      example:
        hide:
          web: true
          iOS: true
        appLinks:
          key: true
        autoLaunch: true
        autoSubmitToolbar: true
      properties:
        appLinks:
          additionalProperties:
            type: boolean
          type: object
        autoLaunch:
          type: boolean
        autoSubmitToolbar:
          type: boolean
        hide:
          $ref: '#/components/schemas/ApplicationVisibilityHide'
      type: object
      x-okta-tags:
      - Application
    ApplicationVisibilityHide:
      example:
        web: true
        iOS: true
      properties:
        iOS:
          type: boolean
        web:
          type: boolean
      type: object
      x-okta-tags:
      - Application
    AssignRoleRequest:
      example:
        type: null
      properties:
        type:
          $ref: '#/components/schemas/RoleType'
      x-okta-tags:
      - Role
    AuthenticationProvider:
      example:
        name: name
        type: null
      properties:
        name:
          type: string
        type:
          $ref: '#/components/schemas/AuthenticationProviderType'
      type: object
      x-okta-tags:
      - User
    AuthenticationProviderType:
      enum:
      - ACTIVE_DIRECTORY
      - FEDERATION
      - LDAP
      - OKTA
      - SOCIAL
      - IMPORT
      type: string
      x-okta-tags:
      - User
    Authenticator:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        settings:
          appInstanceId: appInstanceId
          allowedFor: null
          userVerification: null
          channelBinding:
            style: style
            required: null
          compliance:
            fips: null
          tokenLifetimeInMinutes: 6
        _links:
          key: "{}"
        provider:
          configuration:
            hostName: hostName
            instanceId: instanceId
            secretKey: secretKey
            authPort: 0
            userNameTemplate:
              template: template
            host: host
            sharedSecret: sharedSecret
            integrationKey: integrationKey
          type: type
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        id: id
        type: null
        key: key
        status: null
      properties:
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        key:
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        provider:
          $ref: '#/components/schemas/AuthenticatorProvider'
        settings:
          $ref: '#/components/schemas/AuthenticatorSettings'
        status:
          $ref: '#/components/schemas/AuthenticatorStatus'
        type:
          $ref: '#/components/schemas/AuthenticatorType'
      type: object
      x-okta-crud:
      - operationId: getAuthenticator
        alias: read
        arguments: []
      - operationId: updateAuthenticator
        alias: update
        arguments:
        - dest: authenticatorId
          src: id
        - dest: authenticator
          self: true
      x-okta-operations:
      - operationId: activateAuthenticator
        alias: activate
        arguments:
        - dest: authenticatorId
          src: id
      - operationId: deactivateAuthenticator
        alias: deactivate
        arguments:
        - dest: authenticatorId
          src: id
      x-okta-tags:
      - Authenticator
      x-konfig-is-used-in-successful-response: true
    AuthenticatorProvider:
      example:
        configuration:
          hostName: hostName
          instanceId: instanceId
          secretKey: secretKey
          authPort: 0
          userNameTemplate:
            template: template
          host: host
          sharedSecret: sharedSecret
          integrationKey: integrationKey
        type: type
      properties:
        configuration:
          $ref: '#/components/schemas/AuthenticatorProviderConfiguration'
        type:
          type: string
      x-okta-tags:
      - Authenticator
    AuthenticatorProviderConfiguration:
      example:
        hostName: hostName
        instanceId: instanceId
        secretKey: secretKey
        authPort: 0
        userNameTemplate:
          template: template
        host: host
        sharedSecret: sharedSecret
        integrationKey: integrationKey
      properties:
        authPort:
          type: integer
        host:
          type: string
        hostName:
          type: string
        instanceId:
          type: string
        integrationKey:
          type: string
        secretKey:
          type: string
        sharedSecret:
          type: string
        userNameTemplate:
          $ref: '#/components/schemas/AuthenticatorProviderConfigurationUserNamePlate'
      x-okta-tags:
      - Authenticator
    AuthenticatorProviderConfigurationUserNamePlate:
      example:
        template: template
      properties:
        template:
          type: string
      x-okta-tags:
      - Authenticator
    AuthenticatorSettings:
      example:
        appInstanceId: appInstanceId
        allowedFor: null
        userVerification: null
        channelBinding:
          style: style
          required: null
        compliance:
          fips: null
        tokenLifetimeInMinutes: 6
      properties:
        allowedFor:
          $ref: '#/components/schemas/AllowedForEnum'
        appInstanceId:
          type: string
        channelBinding:
          $ref: '#/components/schemas/ChannelBinding'
        compliance:
          $ref: '#/components/schemas/Compliance'
        tokenLifetimeInMinutes:
          type: integer
        userVerification:
          $ref: '#/components/schemas/UserVerificationEnum'
      type: object
      x-okta-tags:
      - Authenticator
    AuthenticatorStatus:
      enum:
      - ACTIVE
      - INACTIVE
      type: string
      x-okta-tags:
      - Authenticator
    AuthenticatorType:
      enum:
      - app
      - password
      - security_question
      - phone
      - email
      - security_key
      - federated
      type: string
      x-okta-tags:
      - Authenticator
    AuthorizationServer:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        default: true
        _links:
          key: "{}"
        credentials:
          signing:
            nextRotation: 2000-01-23T04:56:07.000+00:00
            use: null
            kid: kid
            rotationMode: null
            lastRotated: 2000-01-23T04:56:07.000+00:00
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        description: description
        audiences:
        - audiences
        - audiences
        id: id
        issuer: issuer
        issuerMode: ORG_URL
        status: ACTIVE
      properties:
        description:
          type: string
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        audiences:
          items:
            type: string
          type: array
        created:
          format: date-time
          readOnly: true
          type: string
        credentials:
          $ref: '#/components/schemas/AuthorizationServerCredentials'
        default:
          readOnly: true
          type: boolean
        id:
          readOnly: true
          type: string
        issuer:
          type: string
        issuerMode:
          enum:
          - ORG_URL
          - CUSTOM_URL
          - DYNAMIC
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        status:
          enum:
          - ACTIVE
          - INACTIVE
          type: string
      type: object
      x-okta-crud:
      - operationId: createAuthorizationServer
        alias: create
        arguments:
        - dest: authorizationServer
          self: true
      - operationId: getAuthorizationServer
        alias: read
        arguments: []
      - operationId: updateAuthorizationServer
        alias: update
        arguments:
        - dest: authServerId
          src: id
        - dest: authorizationServer
          self: true
      - operationId: deleteAuthorizationServer
        alias: delete
        arguments:
        - dest: authServerId
          src: id
        - dest: authorizationServer
          self: true
      x-okta-operations:
      - operationId: listOAuth2Claims
        alias: listOAuth2Claims
        arguments:
        - dest: authServerId
          src: id
      - operationId: createOAuth2Claim
        alias: createOAuth2Claim
        arguments:
        - dest: authServerId
          src: id
      - operationId: deleteOAuth2Claim
        alias: deleteOAuth2Claim
        arguments:
        - dest: authServerId
          src: id
      - operationId: getOAuth2Claim
        alias: getOAuth2Claim
        arguments:
        - dest: authServerId
          src: id
      - operationId: updateOAuth2Claim
        alias: updateOAuth2Claim
        arguments:
        - dest: authServerId
          src: id
      - operationId: listOAuth2ClientsForAuthorizationServer
        alias: listOAuth2Clients
        arguments:
        - dest: authServerId
          src: id
      - operationId: revokeRefreshTokensForAuthorizationServerAndClient
        alias: revokeRefreshTokensForClient
        arguments:
        - dest: authServerId
          src: id
      - operationId: listRefreshTokensForAuthorizationServerAndClient
        alias: listRefreshTokensForClient
        arguments:
        - dest: authServerId
          src: id
      - operationId: getRefreshTokenForAuthorizationServerAndClient
        alias: getRefreshTokenForClient
        arguments:
        - dest: authServerId
          src: id
      - operationId: revokeRefreshTokenForAuthorizationServerAndClient
        alias: revokeRefreshTokenForClient
        arguments:
        - dest: authServerId
          src: id
      - operationId: listAuthorizationServerKeys
        alias: listKeys
        arguments:
        - dest: authServerId
          src: id
      - operationId: rotateAuthorizationServerKeys
        alias: rotateKeys
        arguments:
        - dest: authServerId
          src: id
      - operationId: activateAuthorizationServer
        alias: activate
        arguments:
        - dest: authServerId
          src: id
      - operationId: deactivateAuthorizationServer
        alias: deactivate
        arguments:
        - dest: authServerId
          src: id
      - operationId: listAuthorizationServerPolicies
        alias: listPolicies
        arguments:
        - dest: authServerId
          src: id
      - operationId: createAuthorizationServerPolicy
        alias: createPolicy
        arguments:
        - dest: authServerId
          src: id
      - operationId: deleteAuthorizationServerPolicy
        alias: deletePolicy
        arguments:
        - dest: authServerId
          src: id
      - operationId: getAuthorizationServerPolicy
        alias: getPolicy
        arguments:
        - dest: authServerId
          src: id
      - operationId: updateAuthorizationServerPolicy
        alias: updatePolicy
        arguments:
        - dest: authServerId
          src: id
      - operationId: listOAuth2Scopes
        alias: listOAuth2Scopes
        arguments:
        - dest: authServerId
          src: id
      - operationId: createOAuth2Scope
        alias: createOAuth2Scope
        arguments:
        - dest: authServerId
          src: id
      - operationId: deleteOAuth2Scope
        alias: deleteOAuth2Scope
        arguments:
        - dest: authServerId
          src: id
      - operationId: getOAuth2Scope
        alias: getOAuth2Scope
        arguments:
        - dest: authServerId
          src: id
      - operationId: updateOAuth2Scope
        alias: updateOAuth2Scope
        arguments:
        - dest: authServerId
          src: id
      x-okta-tags:
      - AuthorizationServer
      x-konfig-is-used-in-successful-response: true
    AuthorizationServerCredentials:
      example:
        signing:
          nextRotation: 2000-01-23T04:56:07.000+00:00
          use: null
          kid: kid
          rotationMode: null
          lastRotated: 2000-01-23T04:56:07.000+00:00
      properties:
        signing:
          $ref: '#/components/schemas/AuthorizationServerCredentialsSigningConfig'
      x-okta-tags:
      - Application
    AuthorizationServerCredentialsRotationMode:
      enum:
      - AUTO
      - MANUAL
      type: string
      x-okta-tags:
      - AuthorizationServer
    AuthorizationServerCredentialsSigningConfig:
      example:
        nextRotation: 2000-01-23T04:56:07.000+00:00
        use: null
        kid: kid
        rotationMode: null
        lastRotated: 2000-01-23T04:56:07.000+00:00
      properties:
        kid:
          type: string
        lastRotated:
          format: date-time
          readOnly: true
          type: string
        nextRotation:
          format: date-time
          readOnly: true
          type: string
        rotationMode:
          $ref: '#/components/schemas/AuthorizationServerCredentialsRotationMode'
        use:
          $ref: '#/components/schemas/AuthorizationServerCredentialsUse'
      x-okta-tags:
      - AuthorizationServer
    AuthorizationServerCredentialsUse:
      enum:
      - sig
      type: string
      x-okta-tags:
      - AuthorizationServer
    AuthorizationServerPolicy:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        system: true
        _embedded:
          key: "{}"
        _links:
          key: "{}"
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        description: description
        id: id
        conditions:
          app:
            include:
            - name: name
              id: id
              type: APP_TYPE
            - name: name
              id: id
              type: APP_TYPE
            exclude:
            - name: name
              id: id
              type: APP_TYPE
            - name: name
              id: id
              type: APP_TYPE
          authContext:
            authType: ANY
          clients:
            include:
            - include
            - include
          userStatus:
            value: ACTIVE
          groups:
            include:
            - include
            - include
            exclude:
            - exclude
            - exclude
          people:
            groups:
              include:
              - include
              - include
              exclude:
              - exclude
              - exclude
            users:
              include:
              - include
              - include
              exclude:
              - exclude
              - exclude
          identityProvider:
            idpIds:
            - idpIds
            - idpIds
            provider: ANY
          platform:
            include:
            - os:
                expression: expression
                type: ANDROID
                version:
                  matchType: EXPRESSION
                  value: value
              type: DESKTOP
            - os:
                expression: expression
                type: ANDROID
                version:
                  matchType: EXPRESSION
                  value: value
              type: DESKTOP
            exclude:
            - os:
                expression: expression
                type: ANDROID
                version:
                  matchType: EXPRESSION
                  value: value
              type: DESKTOP
            - os:
                expression: expression
                type: ANDROID
                version:
                  matchType: EXPRESSION
                  value: value
              type: DESKTOP
          users:
            userLifecycleAttribute:
              matchingValue: matchingValue
              attributeName: attributeName
            include:
            - include
            - include
            passwordExpiration:
              number: 5
              unit: unit
            lifecycleExpiration:
              number: 1
              unit: unit
              lifecycleStatus: lifecycleStatus
            inactivity:
              number: 6
              unit: unit
            exclude:
            - exclude
            - exclude
          network:
            include:
            - include
            - include
            connection: ANYWHERE
            exclude:
            - exclude
            - exclude
          authProvider:
            include:
            - include
            - include
            provider: ACTIVE_DIRECTORY
          beforeScheduledAction:
            duration:
              number: 0
              unit: unit
            lifecycleAction:
              status: ACTIVE
          mdmEnrollment:
            blockNonSafeAndroid: true
            enrollment: OMM
          grantTypes:
            include:
            - include
            - include
          userIdentifier:
            patterns:
            - matchType: SUFFIX
              value: value
            - matchType: SUFFIX
              value: value
            attribute: attribute
            type: IDENTIFIER
          context:
            expression: expression
          risk:
            behaviors:
            - behaviors
            - behaviors
          riskScore:
            level: level
          scopes:
            include:
            - include
            - include
          device:
            rooted: true
            trustLevel: ANY
            migrated: true
            platform:
              types:
              - IOS
              - IOS
              supportedMDMFrameworks:
              - AFW
              - AFW
          apps:
            include:
            - include
            - include
            exclude:
            - exclude
            - exclude
        priority: 5
        type: null
        status: ACTIVE
      properties:
        description:
          type: string
        _embedded:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        conditions:
          $ref: '#/components/schemas/PolicyRuleConditions'
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        priority:
          type: integer
        status:
          enum:
          - ACTIVE
          - INACTIVE
          type: string
        system:
          type: boolean
        type:
          $ref: '#/components/schemas/PolicyType'
      type: object
      x-okta-crud:
      - operationId: getAuthorizationServerPolicy
        alias: read
        arguments:
        - dest: policyId
          src: id
      - operationId: updateAuthorizationServerPolicy
        alias: update
        arguments:
        - dest: policyId
          src: id
        - dest: policy
          self: true
      - operationId: deleteAuthorizationServerPolicy
        alias: delete
        arguments:
        - dest: policyId
          src: id
      x-okta-operations:
      - operationId: listAuthorizationServerPolicyRules
        alias: listPolicyRules
        arguments:
        - dest: policyId
          src: id
      - operationId: createAuthorizationServerPolicyRule
        alias: createPolicyRule
        arguments:
        - dest: policyId
          src: id
      - operationId: getAuthorizationServerPolicyRule
        alias: getPolicyRule
        arguments:
        - dest: policyId
          src: id
      - operationId: deleteAuthorizationServerPolicyRule
        alias: deletePolicyRule
        arguments:
        - dest: policyId
          src: id
      - operationId: activateAuthorizationServerPolicy
        alias: activate
        arguments:
        - dest: policyId
          src: id
      - operationId: deactivateAuthorizationServerPolicy
        alias: deactivate
        arguments:
        - dest: policyId
          src: id
      x-okta-tags:
      - AuthorizationServer
      x-konfig-is-used-in-successful-response: true
    AuthorizationServerPolicyRule:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        system: false
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        id: id
        conditions:
          grantTypes:
            include:
            - include
            - include
          clients:
            include:
            - include
            - include
          scopes:
            include:
            - include
            - include
          people:
            groups:
              include:
              - include
              - include
              exclude:
              - exclude
              - exclude
            users:
              include:
              - include
              - include
              exclude:
              - exclude
              - exclude
        priority: 5
        type: RESOURCE_ACCESS
        actions:
          token:
            refreshTokenWindowMinutes: 1
            accessTokenLifetimeMinutes: 0
            inlineHook:
              id: id
            refreshTokenLifetimeMinutes: 6
        status: ACTIVE
      properties:
        actions:
          $ref: '#/components/schemas/AuthorizationServerPolicyRuleActions'
        conditions:
          $ref: '#/components/schemas/AuthorizationServerPolicyRuleConditions'
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        priority:
          type: integer
        status:
          default: ACTIVE
          enum:
          - ACTIVE
          - INACTIVE
          example: ACTIVE
          type: string
          x-konfig-original-example: ACTIVE
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AuthorizationServerPolicyRule-properties-status
        system:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AuthorizationServerPolicyRule-properties-system
        type:
          enum:
          - RESOURCE_ACCESS
          type: string
      type: object
      x-okta-crud:
      - operationId: updateAuthorizationServerPolicyRule
        alias: update
        arguments:
        - dest: ruleId
          src: id
        - dest: policyRule
          self: true
        - dest: policyId
          parentSrc: id
      - operationId: deleteAuthorizationServerPolicyRule
        alias: delete
        arguments:
        - dest: ruleId
          src: id
        - dest: policyId
          parentSrc: policyId
      x-okta-operations:
      - operationId: activateAuthorizationServerPolicyRule
        alias: activate
        arguments:
        - dest: ruleId
          src: id
        - dest: policyId
          parentSrc: policyId
      - operationId: deactivateAuthorizationServerPolicyRule
        alias: deactivate
        arguments:
        - dest: ruleId
          src: id
        - dest: policyId
          parentSrc: policyId
      x-okta-tags:
      - AuthorizationServerPolicy
      x-konfig-is-used-in-successful-response: true
    AuthorizationServerPolicyRuleActions:
      example:
        token:
          refreshTokenWindowMinutes: 1
          accessTokenLifetimeMinutes: 0
          inlineHook:
            id: id
          refreshTokenLifetimeMinutes: 6
      properties:
        token:
          $ref: '#/components/schemas/TokenAuthorizationServerPolicyRuleAction'
      type: object
      x-okta-tags:
      - AuthorizationServerPolicy
    AuthorizationServerPolicyRuleConditions:
      example:
        grantTypes:
          include:
          - include
          - include
        clients:
          include:
          - include
          - include
        scopes:
          include:
          - include
          - include
        people:
          groups:
            include:
            - include
            - include
            exclude:
            - exclude
            - exclude
          users:
            include:
            - include
            - include
            exclude:
            - exclude
            - exclude
      properties:
        clients:
          $ref: '#/components/schemas/ClientPolicyCondition'
        grantTypes:
          $ref: '#/components/schemas/GrantTypePolicyRuleCondition'
        people:
          $ref: '#/components/schemas/PolicyPeopleCondition'
        scopes:
          $ref: '#/components/schemas/OAuth2ScopesMediationPolicyRuleCondition'
      type: object
      x-okta-tags:
      - AuthorizationServerPolicy
    AutoLoginApplication:
      properties:
        credentials:
          $ref: '#/components/schemas/SchemeApplicationCredentials'
        settings:
          $ref: '#/components/schemas/AutoLoginApplicationSettings'
      x-okta-parent: '#/definitions/Application'
      x-okta-tags:
      - Application
    AutoLoginApplicationSettings:
      properties:
        signOn:
          $ref: '#/components/schemas/AutoLoginApplicationSettingsSignOn'
      x-okta-parent: '#/definitions/ApplicationSettings'
      x-okta-tags:
      - Application
    AutoLoginApplicationSettingsSignOn:
      properties:
        loginUrl:
          type: string
        redirectUrl:
          type: string
      x-okta-tags:
      - Application
    BasicApplicationSettings:
      properties:
        app:
          $ref: '#/components/schemas/BasicApplicationSettingsApplication'
      x-okta-parent: '#/definitions/ApplicationSettings'
      x-okta-tags:
      - Application
    BasicApplicationSettingsApplication:
      properties:
        authURL:
          type: string
        url:
          type: string
      x-okta-parent: '#/definitions/ApplicationSettingsApplication'
      x-okta-tags:
      - Application
    BasicAuthApplication:
      properties:
        credentials:
          $ref: '#/components/schemas/SchemeApplicationCredentials'
        name:
          default: template_basic_auth
        settings:
          $ref: '#/components/schemas/BasicApplicationSettings'
      x-okta-defined-as:
        name: template_basic_auth
      x-okta-parent: '#/definitions/Application'
      x-okta-tags:
      - Application
    BeforeScheduledActionPolicyRuleCondition:
      example:
        duration:
          number: 0
          unit: unit
        lifecycleAction:
          status: ACTIVE
      properties:
        duration:
          $ref: '#/components/schemas/Duration'
        lifecycleAction:
          $ref: '#/components/schemas/ScheduledUserLifecycleAction'
      type: object
      x-okta-tags:
      - Policy
    BookmarkApplication:
      properties:
        name:
          default: bookmark
        settings:
          $ref: '#/components/schemas/BookmarkApplicationSettings'
      x-okta-defined-as:
        name: bookmark
      x-okta-parent: '#/definitions/Application'
      x-okta-tags:
      - Application
    BookmarkApplicationSettings:
      properties:
        app:
          $ref: '#/components/schemas/BookmarkApplicationSettingsApplication'
      x-okta-parent: '#/definitions/ApplicationSettings'
      x-okta-tags:
      - Application
    BookmarkApplicationSettingsApplication:
      properties:
        requestIntegration:
          type: boolean
        url:
          type: string
      x-okta-parent: '#/definitions/ApplicationSettingsApplication'
      x-okta-tags:
      - Application
    Brand:
      example:
        agreeToCustomPrivacyPolicy: true
        removePoweredByOkta: true
        _links:
          key: "{}"
        id: id
        customPrivacyPolicyUrl: customPrivacyPolicyUrl
      properties:
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        agreeToCustomPrivacyPolicy:
          type: boolean
        customPrivacyPolicyUrl:
          type: string
        id:
          readOnly: true
          type: string
        removePoweredByOkta:
          type: boolean
      x-okta-crud:
      - operationId: getBrand
        alias: read
        arguments:
        - dest: brandId
          src: id
      - operationId: updateBrand
        alias: update
        arguments:
        - dest: brandId
          src: id
        - dest: brand
          self: true
      x-okta-tags:
      - Brand
      x-konfig-is-used-in-successful-response: true
    BrowserPluginApplication:
      properties:
        credentials:
          $ref: '#/components/schemas/SchemeApplicationCredentials'
      x-okta-parent: '#/definitions/Application'
      x-okta-tags:
      - Application
      x-openapi-v3-discriminator:
        mapping:
          template_swa: '#/definitions/SwaApplication'
          template_swa3field: '#/definitions/SwaThreeFieldApplication'
        propertyName: name
    CallUserFactor:
      properties:
        profile:
          $ref: '#/components/schemas/CallUserFactorProfile'
      x-okta-parent: '#/definitions/UserFactor'
      x-okta-tags:
      - UserFactor
    CallUserFactorProfile:
      properties:
        phoneExtension:
          type: string
        phoneNumber:
          type: string
      x-okta-tags:
      - UserFactor
    CapabilitiesCreateObject:
      example:
        lifecycleCreate:
          status: null
      properties:
        lifecycleCreate:
          $ref: '#/components/schemas/LifecycleCreateSettingObject'
      type: object
      x-okta-tags:
      - Application
    CapabilitiesObject:
      example:
        create:
          lifecycleCreate:
            status: null
        update:
          password:
            seed: null
            change: null
            status: null
          profile:
            status: null
          lifecycleDeactivate:
            status: null
      properties:
        create:
          $ref: '#/components/schemas/CapabilitiesCreateObject'
        update:
          $ref: '#/components/schemas/CapabilitiesUpdateObject'
      type: object
      x-okta-tags:
      - Application
    CapabilitiesUpdateObject:
      example:
        password:
          seed: null
          change: null
          status: null
        profile:
          status: null
        lifecycleDeactivate:
          status: null
      properties:
        lifecycleDeactivate:
          $ref: '#/components/schemas/LifecycleDeactivateSettingObject'
        password:
          $ref: '#/components/schemas/PasswordSettingObject'
        profile:
          $ref: '#/components/schemas/ProfileSettingObject'
      type: object
      x-okta-tags:
      - Application
    CatalogApplication:
      example:
        features:
        - features
        - features
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        website: website
        _links:
          key: "{}"
        verificationStatus: verificationStatus
        displayName: displayName
        name: name
        description: description
        id: id
        category: category
        signOnModes:
        - signOnModes
        - signOnModes
        status: null
      properties:
        description:
          type: string
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        category:
          type: string
        displayName:
          type: string
        features:
          items:
            type: string
          type: array
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        signOnModes:
          items:
            type: string
          type: array
        status:
          $ref: '#/components/schemas/CatalogApplicationStatus'
        verificationStatus:
          type: string
        website:
          type: string
      x-okta-tags:
      - Role
    CatalogApplicationStatus:
      enum:
      - ACTIVE
      - INACTIVE
      type: string
      x-okta-tags:
      - Role
    ChangeEnum:
      enum:
      - KEEP_EXISTING
      - CHANGE
      type: string
      x-okta-tags:
      - Application
    ChangePasswordRequest:
      example:
        oldPassword:
          hook:
            type: type
          value: value
          hash:
            salt: salt
            saltOrder: saltOrder
            workFactor: 0
            value: value
            algorithm: null
        newPassword:
          hook:
            type: type
          value: value
          hash:
            salt: salt
            saltOrder: saltOrder
            workFactor: 0
            value: value
            algorithm: null
      properties:
        newPassword:
          $ref: '#/components/schemas/PasswordCredential'
        oldPassword:
          $ref: '#/components/schemas/PasswordCredential'
      type: object
      x-okta-tags:
      - User
    ChannelBinding:
      example:
        style: style
        required: null
      properties:
        required:
          $ref: '#/components/schemas/RequiredEnum'
        style:
          type: string
      type: object
      x-okta-tags:
      - Authenticator
    ClientPolicyCondition:
      example:
        include:
        - include
        - include
      properties:
        include:
          items:
            type: string
          type: array
      type: object
      x-okta-tags:
      - Policy
    ClientSecret:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        _links:
          key: "{}"
        created: 2000-01-23T04:56:07.000+00:00
        secret_hash: secret_hash
        client_secret: client_secret
        id: id
        status: ACTIVE
      properties:
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        client_secret:
          type: string
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        secret_hash:
          type: string
        status:
          enum:
          - ACTIVE
          - INACTIVE
          type: string
      x-okta-tags:
      - Application
      x-konfig-is-used-in-successful-response: true
    ClientSecretMetadata:
      example:
        client_secret: client_secret
      properties:
        client_secret:
          type: string
      x-okta-tags:
      - Application
    Compliance:
      example:
        fips: null
      properties:
        fips:
          $ref: '#/components/schemas/FipsEnum'
      type: object
      x-okta-tags:
      - Authenticator
    ContextPolicyRuleCondition:
      example:
        expression: expression
      properties:
        expression:
          type: string
      type: object
      x-okta-tags:
      - Policy
    CreateSessionRequest:
      example:
        sessionToken: sessionToken
      properties:
        sessionToken:
          type: string
      type: object
      x-okta-tags:
      - Session
    CreateUserRequest:
      example:
        credentials:
          password:
            hook:
              type: type
            value: value
            hash:
              salt: salt
              saltOrder: saltOrder
              workFactor: 0
              value: value
              algorithm: null
          provider:
            name: name
            type: null
          recovery_question:
            answer: answer
            question: question
        groupIds:
        - groupIds
        - groupIds
        profile:
          profileUrl: profileUrl
          lastName: lastName
          zipCode: zipCode
          preferredLanguage: preferredLanguage
          city: city
          displayName: displayName
          timezone: timezone
          title: title
          locale: locale
          login: login
          employeeNumber: employeeNumber
          division: division
          honorificSuffix: honorificSuffix
          countryCode: countryCode
          state: state
          department: department
          email: email
          manager: manager
          costCenter: costCenter
          nickName: nickName
          secondEmail: secondEmail
          honorificPrefix: honorificPrefix
          managerId: managerId
          firstName: firstName
          primaryPhone: primaryPhone
          postalAddress: postalAddress
          mobilePhone: mobilePhone
          streetAddress: streetAddress
          organization: organization
          middleName: middleName
          userType: userType
        type:
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          lastUpdatedBy: lastUpdatedBy
          default: true
          _links:
            key: "{}"
          createdBy: createdBy
          created: 2000-01-23T04:56:07.000+00:00
          displayName: displayName
          name: name
          description: description
          id: id
      properties:
        credentials:
          $ref: '#/components/schemas/UserCredentials'
        groupIds:
          items:
            type: string
          type: array
        profile:
          $ref: '#/components/schemas/UserProfile'
        type:
          $ref: '#/components/schemas/UserType'
      type: object
      x-okta-tags:
      - User
    Csr:
      example:
        kty: kty
        csr: csr
        created: 2000-01-23T04:56:07.000+00:00
        id: id
      properties:
        created:
          format: date-time
          readOnly: true
          type: string
        csr:
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        kty:
          readOnly: true
          type: string
      type: object
      x-okta-tags:
      - Application
      x-konfig-is-used-in-successful-response: true
    CsrMetadata:
      example:
        subject:
          commonName: commonName
          localityName: localityName
          organizationName: organizationName
          organizationalUnitName: organizationalUnitName
          countryName: countryName
          stateOrProvinceName: stateOrProvinceName
        subjectAltNames:
          dnsNames:
          - dnsNames
          - dnsNames
      properties:
        subject:
          $ref: '#/components/schemas/CsrMetadataSubject'
        subjectAltNames:
          $ref: '#/components/schemas/CsrMetadataSubjectAltNames'
      x-okta-tags:
      - Application
    CsrMetadataSubject:
      example:
        commonName: commonName
        localityName: localityName
        organizationName: organizationName
        organizationalUnitName: organizationalUnitName
        countryName: countryName
        stateOrProvinceName: stateOrProvinceName
      properties:
        commonName:
          type: string
        countryName:
          type: string
        localityName:
          type: string
        organizationName:
          type: string
        organizationalUnitName:
          type: string
        stateOrProvinceName:
          type: string
      x-okta-tags:
      - Application
    CsrMetadataSubjectAltNames:
      example:
        dnsNames:
        - dnsNames
        - dnsNames
      properties:
        dnsNames:
          items:
            type: string
          type: array
      x-okta-tags:
      - Application
    CustomHotpUserFactor:
      properties:
        factorProfileId:
          type: string
        profile:
          $ref: '#/components/schemas/CustomHotpUserFactorProfile'
      x-okta-parent: '#/definitions/UserFactor'
      x-okta-tags:
      - UserFactor
    CustomHotpUserFactorProfile:
      properties:
        sharedSecret:
          type: string
      x-okta-tags:
      - UserFactor
    DNSRecord:
      example:
        fqdn: fqdn
        recordType: null
        values:
        - values
        - values
        expiration: expiration
      properties:
        expiration:
          type: string
        fqdn:
          type: string
        recordType:
          $ref: '#/components/schemas/DNSRecordType'
        values:
          items:
            type: string
          type: array
      x-okta-tags:
      - Domain
    DNSRecordType:
      enum:
      - TXT
      - CNAME
      type: string
      x-okta-tags:
      - Domain
    DeviceAccessPolicyRuleCondition:
      properties:
        managed:
          type: boolean
        registered:
          type: boolean
      x-okta-parent: '#/definitions/DevicePolicyRuleCondition'
      x-okta-tags:
      - Policy
    DevicePolicyRuleCondition:
      example:
        rooted: true
        trustLevel: ANY
        migrated: true
        platform:
          types:
          - IOS
          - IOS
          supportedMDMFrameworks:
          - AFW
          - AFW
      properties:
        migrated:
          type: boolean
        platform:
          $ref: '#/components/schemas/DevicePolicyRuleConditionPlatform'
        rooted:
          type: boolean
        trustLevel:
          enum:
          - ANY
          - TRUSTED
          type: string
      type: object
      x-okta-tags:
      - Policy
    DevicePolicyRuleConditionPlatform:
      example:
        types:
        - IOS
        - IOS
        supportedMDMFrameworks:
        - AFW
        - AFW
      properties:
        supportedMDMFrameworks:
          items:
            enum:
            - AFW
            - SAFE
            - NATIVE
            type: string
          type: array
        types:
          items:
            enum:
            - IOS
            - ANDROID
            - OSX
            - WINDOWS
            type: string
          type: array
      type: object
      x-okta-tags:
      - Policy
    Domain:
      example:
        certificateSourceType: null
        dnsRecords:
        - fqdn: fqdn
          recordType: null
          values:
          - values
          - values
          expiration: expiration
        - fqdn: fqdn
          recordType: null
          values:
          - values
          - values
          expiration: expiration
        domain: domain
        publicCertificate:
          subject: subject
          fingerprint: fingerprint
          expiration: expiration
        id: id
        validationStatus: null
      properties:
        certificateSourceType:
          $ref: '#/components/schemas/DomainCertificateSourceType'
        dnsRecords:
          items:
            $ref: '#/components/schemas/DNSRecord'
          type: array
        domain:
          type: string
        id:
          readOnly: true
          type: string
        publicCertificate:
          $ref: '#/components/schemas/DomainCertificateMetadata'
        validationStatus:
          $ref: '#/components/schemas/DomainValidationStatus'
      type: object
      x-okta-tags:
      - Domain
      x-konfig-is-used-in-successful-response: true
    DomainCertificate:
      example:
        privateKey: privateKey
        certificateChain: certificateChain
        certificate: certificate
        type: null
      properties:
        certificate:
          type: string
        certificateChain:
          type: string
        privateKey:
          type: string
        type:
          $ref: '#/components/schemas/DomainCertificateType'
      x-okta-operations:
      - operationId: createCertificate
        alias: createCertificate
        arguments:
        - dest: certificate
          self: true
      x-okta-tags:
      - Domain
    DomainCertificateMetadata:
      example:
        subject: subject
        fingerprint: fingerprint
        expiration: expiration
      properties:
        expiration:
          type: string
        fingerprint:
          type: string
        subject:
          type: string
      x-okta-tags:
      - Domain
    DomainCertificateSourceType:
      enum:
      - MANUAL
      - OKTA_MANAGED
      type: string
      x-okta-tags:
      - Domain
    DomainCertificateType:
      enum:
      - PEM
      type: string
      x-okta-tags:
      - Domain
    DomainListResponse:
      example:
        domains:
        - certificateSourceType: null
          dnsRecords:
          - fqdn: fqdn
            recordType: null
            values:
            - values
            - values
            expiration: expiration
          - fqdn: fqdn
            recordType: null
            values:
            - values
            - values
            expiration: expiration
          domain: domain
          publicCertificate:
            subject: subject
            fingerprint: fingerprint
            expiration: expiration
          id: id
          validationStatus: null
        - certificateSourceType: null
          dnsRecords:
          - fqdn: fqdn
            recordType: null
            values:
            - values
            - values
            expiration: expiration
          - fqdn: fqdn
            recordType: null
            values:
            - values
            - values
            expiration: expiration
          domain: domain
          publicCertificate:
            subject: subject
            fingerprint: fingerprint
            expiration: expiration
          id: id
          validationStatus: null
      properties:
        domains:
          items:
            $ref: '#/components/schemas/Domain'
          type: array
      x-okta-tags:
      - Domain
      x-konfig-is-used-in-successful-response: true
    DomainValidationStatus:
      enum:
      - NOT_STARTED
      - IN_PROGRESS
      - VERIFIED
      - FAILED_TO_VERIFY
      - DOMAIN_TAKEN
      - COMPLETED
      type: string
      x-okta-tags:
      - Domain
    Duration:
      example:
        number: 0
        unit: unit
      properties:
        number:
          type: integer
        unit:
          type: string
      type: object
      x-okta-tags:
      - Policy
    EmailTemplate:
      example:
        _links:
          key: "{}"
        name: name
      properties:
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        name:
          readOnly: true
          type: string
      x-okta-crud:
      - operationId: getEmailTemplate
        alias: read
      x-okta-operations:
      - operationId: getEmailTemplate
        alias: getEmailTemplate
      - operationId: deleteEmailTemplateCustomizations
        alias: deleteEmailTemplateCustomizations
      - operationId: listEmailTemplateCustomizations
        alias: listEmailTemplateCustomizations
      - operationId: createEmailTemplateCustomization
        alias: createEmailTemplateCustomization
      - operationId: deleteEmailTemplateCustomization
        alias: deleteEmailTemplateCustomization
      - operationId: getEmailTemplateCustomization
        alias: getEmailTemplateCustomization
      - operationId: updateEmailTemplateCustomization
        alias: updateEmailTemplateCustomization
      - operationId: getEmailTemplateCustomizationPreview
        alias: getEmailTemplateCustomizationPreview
      - operationId: getEmailTemplateDefaultContent
        alias: getEmailTemplateDefaultContent
      - operationId: getEmailTemplateDefaultContentPreview
        alias: getEmailTemplateDefaultContentPreview
      - operationId: sendTestEmail
        alias: sendTestEmail
      x-okta-tags:
      - Brands
      x-konfig-is-used-in-successful-response: true
    EmailTemplateContent:
      example:
        _links:
          key: "{}"
        subject: subject
        fromName: fromName
        fromAddress: fromAddress
        body: body
      properties:
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        body:
          type: string
        fromAddress:
          type: string
        fromName:
          type: string
        subject:
          type: string
      x-okta-tags:
      - Brands
      x-konfig-is-used-in-successful-response: true
    EmailTemplateCustomization:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        isDefault: true
        _links:
          key: "{}"
        created: 2000-01-23T04:56:07.000+00:00
        subject: subject
        language: language
        id: id
        body: body
      properties:
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        body:
          type: string
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        isDefault:
          type: boolean
        language:
          description: unique under each email template
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        subject:
          type: string
      x-okta-tags:
      - Brands
      x-konfig-is-used-in-successful-response: true
    EmailTemplateCustomizationRequest:
      example:
        isDefault: true
        subject: subject
        language: language
        body: body
      properties:
        body:
          type: string
        isDefault:
          type: boolean
        language:
          description: unique under each email template
          type: string
        subject:
          type: string
      x-okta-tags:
      - Brands
    EmailTemplateTestRequest:
      example:
        customizationId: customizationId
      properties:
        customizationId:
          type: string
      x-okta-tags:
      - Brands
    EmailTemplateTouchPointVariant:
      enum:
      - OKTA_DEFAULT
      - FULL_THEME
      type: string
      x-okta-tags:
      - Brand
    EmailUserFactor:
      properties:
        profile:
          $ref: '#/components/schemas/EmailUserFactorProfile'
      x-okta-parent: '#/definitions/UserFactor'
      x-okta-tags:
      - UserFactor
    EmailUserFactorProfile:
      properties:
        email:
          type: string
      x-okta-tags:
      - UserFactor
    EnabledStatus:
      enum:
      - ENABLED
      - DISABLED
      type: string
      x-okta-tags:
      - Common
    EndUserDashboardTouchPointVariant:
      enum:
      - OKTA_DEFAULT
      - WHITE_LOGO_BACKGROUND
      - FULL_THEME
      - LOGO_ON_FULL_WHITE_BACKGROUND
      type: string
      x-okta-tags:
      - Brand
    ErrorPageTouchPointVariant:
      enum:
      - OKTA_DEFAULT
      - BACKGROUND_SECONDARY_COLOR
      - BACKGROUND_IMAGE
      type: string
      x-okta-tags:
      - Brand
    EventHook:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        _links:
          key: "{}"
        createdBy: createdBy
        verificationStatus: UNVERIFIED
        created: 2000-01-23T04:56:07.000+00:00
        channel:
          type: HTTP
          version: version
          config:
            headers:
            - value: value
              key: key
            - value: value
              key: key
            authScheme:
              type: null
              value: value
              key: key
            uri: uri
        name: name
        id: id
        events:
          type: EVENT_TYPE
          items:
          - items
          - items
        status: ACTIVE
      properties:
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        channel:
          $ref: '#/components/schemas/EventHookChannel'
        created:
          format: date-time
          readOnly: true
          type: string
        createdBy:
          type: string
        events:
          $ref: '#/components/schemas/EventSubscriptions'
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        status:
          enum:
          - ACTIVE
          - INACTIVE
          type: string
        verificationStatus:
          enum:
          - UNVERIFIED
          - VERIFIED
          type: string
      type: object
      x-okta-crud:
      - operationId: createEventHook
        alias: create
        arguments:
        - dest: eventHook
          self: true
      - operationId: getEventHook
        alias: read
        arguments: []
      - operationId: updateEventHook
        alias: update
        arguments:
        - dest: eventHookId
          src: id
        - dest: eventHook
          self: true
      - operationId: deleteEventHook
        alias: delete
        arguments:
        - dest: eventHookId
          src: id
      x-okta-operations:
      - operationId: activateEventHook
        alias: activate
        arguments:
        - dest: eventHookId
          src: id
      - operationId: deactivateEventHook
        alias: deactivate
        arguments:
        - dest: eventHookId
          src: id
      - operationId: verifyEventHook
        alias: verify
        arguments:
        - dest: eventHookId
          src: id
      x-okta-tags:
      - EventHook
      x-konfig-is-used-in-successful-response: true
    EventHookChannel:
      example:
        type: HTTP
        version: version
        config:
          headers:
          - value: value
            key: key
          - value: value
            key: key
          authScheme:
            type: null
            value: value
            key: key
          uri: uri
      properties:
        version:
          readOnly: false
          type: string
        config:
          $ref: '#/components/schemas/EventHookChannelConfig'
        type:
          enum:
          - HTTP
          readOnly: false
          type: string
      type: object
      x-okta-tags:
      - EventHook
    EventHookChannelConfig:
      example:
        headers:
        - value: value
          key: key
        - value: value
          key: key
        authScheme:
          type: null
          value: value
          key: key
        uri: uri
      properties:
        authScheme:
          $ref: '#/components/schemas/EventHookChannelConfigAuthScheme'
        headers:
          items:
            $ref: '#/components/schemas/EventHookChannelConfigHeader'
          type: array
        uri:
          type: string
      type: object
      x-okta-tags:
      - EventHook
    EventHookChannelConfigAuthScheme:
      example:
        type: null
        value: value
        key: key
      properties:
        key:
          type: string
        type:
          $ref: '#/components/schemas/EventHookChannelConfigAuthSchemeType'
        value:
          type: string
      type: object
      x-okta-tags:
      - EventHook
    EventHookChannelConfigAuthSchemeType:
      enum:
      - HEADER
      type: string
      x-okta-tags:
      - EventHook
    EventHookChannelConfigHeader:
      example:
        value: value
        key: key
      properties:
        key:
          type: string
        value:
          type: string
      type: object
      x-okta-tags:
      - EventHook
    EventSubscriptions:
      discriminator:
        propertyName: type
      example:
        type: EVENT_TYPE
        items:
        - items
        - items
      properties:
        items:
          items:
            type: string
          type: array
        type:
          enum:
          - EVENT_TYPE
          - FLOW_EVENT
          type: string
      type: object
      x-okta-tags:
      - EventHook
    FactorProvider:
      enum:
      - OKTA
      - RSA
      - FIDO
      - GOOGLE
      - SYMANTEC
      - DUO
      - YUBICO
      - CUSTOM
      - APPLE
      type: string
      x-okta-tags:
      - UserFactor
    FactorResultType:
      enum:
      - SUCCESS
      - CHALLENGE
      - WAITING
      - FAILED
      - REJECTED
      - TIMEOUT
      - TIME_WINDOW_EXCEEDED
      - PASSCODE_REPLAYED
      - ERROR
      - CANCELLED
      type: string
      x-okta-tags:
      - UserFactor
    FactorStatus:
      enum:
      - PENDING_ACTIVATION
      - ACTIVE
      - INACTIVE
      - NOT_SETUP
      - ENROLLED
      - DISABLED
      - EXPIRED
      type: string
      x-okta-tags:
      - UserFactor
    FactorType:
      enum:
      - call
      - email
      - hotp
      - push
      - question
      - signed_nonce
      - sms
      - token:hardware
      - token:hotp
      - token:software:totp
      - token
      - u2f
      - web
      - webauthn
      type: string
      x-okta-tags:
      - UserFactor
    Feature:
      example:
        stage:
          state: null
          value: null
        _links:
          key: "{}"
        name: name
        description: description
        id: id
        type: null
        status: null
      properties:
        description:
          type: string
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        id:
          readOnly: true
          type: string
        name:
          type: string
        stage:
          $ref: '#/components/schemas/FeatureStage'
        status:
          $ref: '#/components/schemas/EnabledStatus'
        type:
          $ref: '#/components/schemas/FeatureType'
      type: object
      x-okta-crud:
      - operationId: getFeature
        alias: read
        arguments: []
      x-okta-operations:
      - operationId: updateFeatureLifecycle
        alias: updateLifecycle
        arguments:
        - dest: featureId
          src: id
      - operationId: listFeatureDependents
        alias: getDependents
        arguments:
        - dest: featureId
          src: id
      - operationId: listFeatureDependencies
        alias: getDependencies
        arguments:
        - dest: featureId
          src: id
      x-okta-tags:
      - Feature
      x-konfig-is-used-in-successful-response: true
    FeatureStage:
      example:
        state: null
        value: null
      properties:
        state:
          $ref: '#/components/schemas/FeatureStageState'
        value:
          $ref: '#/components/schemas/FeatureStageValue'
      type: object
      x-okta-tags:
      - Feature
    FeatureStageState:
      enum:
      - OPEN
      - CLOSED
      type: string
      x-okta-tags:
      - Feature
    FeatureStageValue:
      enum:
      - EA
      - BETA
      type: string
      x-okta-tags:
      - Feature
    FeatureType:
      enum:
      - self-service
      type: string
      x-okta-tags:
      - Feature
    FipsEnum:
      enum:
      - REQUIRED
      - OPTIONAL
      type: string
      x-okta-tags:
      - Authenticator
    ForgotPasswordResponse:
      example:
        resetPasswordUrl: resetPasswordUrl
      properties:
        resetPasswordUrl:
          readOnly: true
          type: string
      x-okta-tags:
      - User
      x-konfig-is-used-in-successful-response: true
    GrantTypePolicyRuleCondition:
      example:
        include:
        - include
        - include
      properties:
        include:
          items:
            type: string
          type: array
      type: object
      x-okta-tags:
      - Policy
    Group:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        _embedded:
          key: "{}"
        _links:
          key: "{}"
        lastMembershipUpdated: 2000-01-23T04:56:07.000+00:00
        created: 2000-01-23T04:56:07.000+00:00
        profile:
          name: name
          description: description
        objectClass:
        - objectClass
        - objectClass
        id: id
        type: null
      properties:
        _embedded:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        lastMembershipUpdated:
          format: date-time
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        objectClass:
          items:
            type: string
          readOnly: true
          type: array
        profile:
          $ref: '#/components/schemas/GroupProfile'
        type:
          $ref: '#/components/schemas/GroupType'
      type: object
      x-okta-crud:
      - operationId: updateGroup
        alias: update
        arguments:
        - dest: groupId
          src: id
        - dest: group
          self: true
      - operationId: deleteGroup
        alias: delete
        arguments:
        - dest: groupId
          src: id
      x-okta-operations:
      - operationId: removeUserFromGroup
        alias: removeUser
        arguments:
        - dest: groupId
          src: id
      - operationId: listGroupUsers
        alias: listUsers
        arguments:
        - dest: groupId
          src: id
      - operationId: listAssignedApplicationsForGroup
        alias: listApplications
        arguments:
        - dest: groupId
          src: id
      - operationId: assignRoleToGroup
        alias: assignRole
        arguments:
        - dest: groupId
          src: id
      x-okta-tags:
      - Group
      x-konfig-is-used-in-successful-response: true
    GroupCondition:
      example:
        include:
        - include
        - include
        exclude:
        - exclude
        - exclude
      properties:
        exclude:
          items:
            type: string
          type: array
        include:
          items:
            type: string
          type: array
      x-okta-tags:
      - Policy
    GroupPolicyRuleCondition:
      example:
        include:
        - include
        - include
        exclude:
        - exclude
        - exclude
      properties:
        exclude:
          items:
            type: string
          type: array
        include:
          items:
            type: string
          type: array
      type: object
      x-okta-tags:
      - Policy
    GroupProfile:
      example:
        name: name
        description: description
      properties:
        description:
          type: string
        name:
          type: string
      type: object
      x-okta-extensible: true
      x-okta-tags:
      - Group
    GroupRule:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        id: id
        conditions:
          expression:
            type: type
            value: value
          people:
            groups:
              include:
              - include
              - include
              exclude:
              - exclude
              - exclude
            users:
              include:
              - include
              - include
              exclude:
              - exclude
              - exclude
        type: type
        actions:
          assignUserToGroups:
            groupIds:
            - groupIds
            - groupIds
        status: null
      properties:
        actions:
          $ref: '#/components/schemas/GroupRuleAction'
        conditions:
          $ref: '#/components/schemas/GroupRuleConditions'
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        status:
          $ref: '#/components/schemas/GroupRuleStatus'
        type:
          type: string
      type: object
      x-okta-crud:
      - operationId: updateGroupRule
        alias: update
        arguments:
        - dest: ruleId
          src: id
        - dest: groupRule
          self: true
      - operationId: deleteGroupRule
        alias: delete
        arguments:
        - dest: ruleId
          src: id
      x-okta-operations:
      - operationId: activateGroupRule
        alias: activate
        arguments:
        - dest: ruleId
          src: id
      - operationId: deactivateGroupRule
        alias: deactivate
        arguments:
        - dest: ruleId
          src: id
      x-okta-tags:
      - GroupRule
      x-konfig-is-used-in-successful-response: true
    GroupRuleAction:
      example:
        assignUserToGroups:
          groupIds:
          - groupIds
          - groupIds
      properties:
        assignUserToGroups:
          $ref: '#/components/schemas/GroupRuleGroupAssignment'
      type: object
      x-okta-tags:
      - GroupRule
    GroupRuleConditions:
      example:
        expression:
          type: type
          value: value
        people:
          groups:
            include:
            - include
            - include
            exclude:
            - exclude
            - exclude
          users:
            include:
            - include
            - include
            exclude:
            - exclude
            - exclude
      properties:
        expression:
          $ref: '#/components/schemas/GroupRuleExpression'
        people:
          $ref: '#/components/schemas/GroupRulePeopleCondition'
      type: object
      x-okta-tags:
      - GroupRule
    GroupRuleExpression:
      example:
        type: type
        value: value
      properties:
        type:
          type: string
        value:
          type: string
      type: object
      x-okta-tags:
      - GroupRule
    GroupRuleGroupAssignment:
      example:
        groupIds:
        - groupIds
        - groupIds
      properties:
        groupIds:
          items:
            type: string
          type: array
      type: object
      x-okta-tags:
      - GroupRule
    GroupRuleGroupCondition:
      example:
        include:
        - include
        - include
        exclude:
        - exclude
        - exclude
      properties:
        exclude:
          items:
            type: string
          type: array
        include:
          items:
            type: string
          type: array
      type: object
      x-okta-tags:
      - GroupRule
    GroupRulePeopleCondition:
      example:
        groups:
          include:
          - include
          - include
          exclude:
          - exclude
          - exclude
        users:
          include:
          - include
          - include
          exclude:
          - exclude
          - exclude
      properties:
        groups:
          $ref: '#/components/schemas/GroupRuleGroupCondition'
        users:
          $ref: '#/components/schemas/GroupRuleUserCondition'
      type: object
      x-okta-tags:
      - GroupRule
    GroupRuleStatus:
      enum:
      - ACTIVE
      - INACTIVE
      - INVALID
      type: string
      x-okta-tags:
      - GroupRule
    GroupRuleUserCondition:
      example:
        include:
        - include
        - include
        exclude:
        - exclude
        - exclude
      properties:
        exclude:
          items:
            type: string
          type: array
        include:
          items:
            type: string
          type: array
      type: object
      x-okta-tags:
      - GroupRule
    GroupSchema:
      example:
        lastUpdated: lastUpdated
        $schema: $schema
        _links:
          key: "{}"
        created: created
        name: name
        description: description
        id: id
        title: title
        type: type
        definitions:
          custom:
            id: id
            type: type
            properties:
              key: {}
            required:
            - required
            - required
          base:
            id: id
            type: type
            properties:
              name: "{}"
              description: "{}"
            required:
            - required
            - required
        properties:
          profile:
            allOf:
            - $ref: $ref
            - $ref: $ref
      properties:
        title:
          type: string
        description:
          type: string
        $schema:
          readOnly: true
          type: string
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        created:
          readOnly: true
          type: string
        definitions:
          $ref: '#/components/schemas/GroupSchemaDefinitions'
        id:
          readOnly: true
          type: string
        lastUpdated:
          readOnly: true
          type: string
        name:
          readOnly: true
          type: string
        properties:
          $ref: '#/components/schemas/UserSchemaProperties'
        type:
          readOnly: true
          type: string
      type: object
      x-okta-tags:
      - GroupSchema
      x-konfig-is-used-in-successful-response: true
    GroupSchemaAttribute:
      example: {}
      properties: {}
      type: object
      x-okta-tags:
      - GroupSchema
    GroupSchemaBase:
      example:
        id: id
        type: type
        properties:
          name: "{}"
          description: "{}"
        required:
        - required
        - required
      properties:
        id:
          readOnly: true
          type: string
        properties:
          $ref: '#/components/schemas/GroupSchemaBaseProperties'
        required:
          items:
            type: string
          type: array
        type:
          type: string
      type: object
      x-okta-tags:
      - GroupSchema
    GroupSchemaBaseProperties:
      example:
        name: "{}"
        description: "{}"
      properties:
        description:
          example: {}
          properties: {}
          type: object
          x-okta-tags:
          - GroupSchema
        name:
          example: {}
          properties: {}
          type: object
          x-okta-tags:
          - GroupSchema
      type: object
      x-okta-tags:
      - GroupSchema
    GroupSchemaCustom:
      example:
        id: id
        type: type
        properties:
          key: {}
        required:
        - required
        - required
      properties:
        id:
          readOnly: true
          type: string
        properties:
          additionalProperties:
            $ref: '#/components/schemas/GroupSchemaAttribute'
          type: object
        required:
          items:
            type: string
          type: array
        type:
          type: string
      type: object
      x-okta-tags:
      - GroupSchema
    GroupSchemaDefinitions:
      example:
        custom:
          id: id
          type: type
          properties:
            key: {}
          required:
          - required
          - required
        base:
          id: id
          type: type
          properties:
            name: "{}"
            description: "{}"
          required:
          - required
          - required
      properties:
        base:
          $ref: '#/components/schemas/GroupSchemaBase'
        custom:
          $ref: '#/components/schemas/GroupSchemaCustom'
      type: object
      x-okta-tags:
      - GroupSchema
    GroupType:
      enum:
      - OKTA_GROUP
      - APP_GROUP
      - BUILT_IN
      type: string
      x-okta-tags:
      - Group
    HardwareUserFactor:
      properties:
        profile:
          $ref: '#/components/schemas/HardwareUserFactorProfile'
      x-okta-parent: '#/definitions/UserFactor'
      x-okta-tags:
      - UserFactor
    HardwareUserFactorProfile:
      properties:
        credentialId:
          type: string
      x-okta-tags:
      - UserFactor
    IdentityProvider:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        protocol:
          algorithms:
            request:
              signature:
                scope: RESPONSE
                algorithm: algorithm
            response:
              signature:
                scope: RESPONSE
                algorithm: algorithm
          relayState:
            format: null
          settings:
            nameFormat: nameFormat
          endpoints:
            acs:
              destination: destination
              binding: HTTP-POST
              type: INSTANCE
              url: url
            authorization:
              destination: destination
              binding: HTTP-POST
              type: INSTANCE
              url: url
            userInfo:
              destination: destination
              binding: HTTP-POST
              type: INSTANCE
              url: url
            metadata:
              destination: destination
              binding: HTTP-POST
              type: INSTANCE
              url: url
            jwks:
              destination: destination
              binding: HTTP-POST
              type: INSTANCE
              url: url
            slo:
              destination: destination
              binding: HTTP-POST
              type: INSTANCE
              url: url
            sso:
              destination: destination
              binding: HTTP-POST
              type: INSTANCE
              url: url
            token:
              destination: destination
              binding: HTTP-POST
              type: INSTANCE
              url: url
          credentials:
            trust:
              revocation: CRL
              audience: audience
              revocationCacheLifetime: 6
              kid: kid
              issuer: issuer
            client:
              client_secret: client_secret
              client_id: client_id
            signing:
              privateKey: privateKey
              kid: kid
              teamId: teamId
          scopes:
          - scopes
          - scopes
          type: SAML2
          issuer:
            destination: destination
            binding: HTTP-POST
            type: INSTANCE
            url: url
        _links:
          key: "{}"
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        id: id
        type: SAML2
        issuerMode: ORG_URL
        policy:
          subject:
            filter: filter
            matchAttribute: matchAttribute
            matchType: null
            userNameTemplate:
              template: template
            format:
            - format
            - format
          maxClockSkew: 0
          provisioning:
            action: AUTO
            groups:
              filter:
              - filter
              - filter
              assignments:
              - assignments
              - assignments
              sourceAttributeName: sourceAttributeName
              action: NONE
            profileMaster: true
            conditions:
              deprovisioned:
                action: NONE
              suspended:
                action: NONE
          accountLink:
            filter:
              groups:
                include:
                - include
                - include
            action: AUTO
        status: ACTIVE
      properties:
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        issuerMode:
          enum:
          - ORG_URL
          - CUSTOM_URL
          - DYNAMIC
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        policy:
          $ref: '#/components/schemas/IdentityProviderPolicy'
        protocol:
          $ref: '#/components/schemas/Protocol'
        status:
          enum:
          - ACTIVE
          - INACTIVE
          type: string
        type:
          enum:
          - SAML2
          - GOOGLE
          - FACEBOOK
          - LINKEDIN
          - MICROSOFT
          - OIDC
          - OKTA
          - IWA
          - AgentlessDSSO
          - X509
          type: string
          x-okta-known-values:
          - SAML2
          - GOOGLE
          - FACEBOOK
          - LINKEDIN
          - MICROSOFT
          - OIDC
          - OKTA
          - IWA
          - AgentlessDSSO
          - X509
      type: object
      x-okta-crud:
      - operationId: createIdentityProvider
        alias: create
        arguments:
        - dest: idpTrust
          self: true
      - operationId: getIdentityProvider
        alias: read
        arguments: []
      - operationId: updateIdentityProvider
        alias: update
        arguments:
        - dest: idpId
          src: id
        - dest: idpTrust
          self: true
      - operationId: deleteIdentityProvider
        alias: delete
        arguments:
        - dest: idpId
          src: id
      x-okta-operations:
      - operationId: listCsrsForIdentityProvider
        alias: listSigningCsrs
        arguments:
        - dest: idpId
          src: id
      - operationId: generateCsrForIdentityProvider
        alias: generateCsr
        arguments:
        - dest: idpId
          src: id
      - operationId: revokeCsrForIdentityProvider
        alias: deleteSigningCsr
        arguments:
        - dest: idpId
          src: id
      - operationId: getCsrForIdentityProvider
        alias: getSigningCsr
        arguments:
        - dest: idpId
          src: id
      - operationId: listIdentityProviderSigningKeys
        alias: listSigningKeys
        arguments:
        - dest: idpId
          src: id
      - operationId: generateIdentityProviderSigningKey
        alias: generateSigningKey
        arguments:
        - dest: idpId
          src: id
      - operationId: getIdentityProviderSigningKey
        alias: getSigningKey
        arguments:
        - dest: idpId
          src: id
      - operationId: cloneIdentityProviderKey
        alias: cloneKey
        arguments:
        - dest: idpId
          src: id
      - operationId: activateIdentityProvider
        alias: activate
        arguments:
        - dest: idpId
          src: id
      - operationId: deactivateIdentityProvider
        alias: deactivate
        arguments:
        - dest: idpId
          src: id
      - operationId: listIdentityProviderApplicationUsers
        alias: listUsers
        arguments:
        - dest: idpId
          src: id
      - operationId: unlinkUserFromIdentityProvider
        alias: unlinkUser
        arguments:
        - dest: idpId
          src: id
      - operationId: getIdentityProviderApplicationUser
        alias: getUser
        arguments:
        - dest: idpId
          src: id
      - operationId: linkUserToIdentityProvider
        alias: linkUser
        arguments:
        - dest: idpId
          src: id
      - operationId: listSocialAuthTokens
        alias: listSocialAuthTokens
        arguments:
        - dest: idpId
          src: id
      x-okta-tags:
      - IdentityProvider
      x-konfig-is-used-in-successful-response: true
    IdentityProviderApplicationUser:
      example:
        lastUpdated: lastUpdated
        _embedded:
          key: "{}"
        _links:
          key: "{}"
        created: created
        profile:
          key: "{}"
        externalId: externalId
        id: id
      properties:
        _embedded:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        created:
          type: string
        externalId:
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          type: string
        profile:
          additionalProperties:
            type: object
          type: object
      type: object
      x-okta-tags:
      - IdentityProvider
      x-konfig-is-used-in-successful-response: true
    IdentityProviderCredentials:
      example:
        trust:
          revocation: CRL
          audience: audience
          revocationCacheLifetime: 6
          kid: kid
          issuer: issuer
        client:
          client_secret: client_secret
          client_id: client_id
        signing:
          privateKey: privateKey
          kid: kid
          teamId: teamId
      properties:
        client:
          $ref: '#/components/schemas/IdentityProviderCredentialsClient'
        signing:
          $ref: '#/components/schemas/IdentityProviderCredentialsSigning'
        trust:
          $ref: '#/components/schemas/IdentityProviderCredentialsTrust'
      type: object
      x-okta-tags:
      - IdentityProvider
    IdentityProviderCredentialsClient:
      example:
        client_secret: client_secret
        client_id: client_id
      properties:
        client_id:
          type: string
        client_secret:
          type: string
      type: object
      x-okta-tags:
      - IdentityProvider
    IdentityProviderCredentialsSigning:
      example:
        privateKey: privateKey
        kid: kid
        teamId: teamId
      properties:
        kid:
          type: string
        privateKey:
          type: string
        teamId:
          type: string
      type: object
      x-okta-tags:
      - IdentityProvider
    IdentityProviderCredentialsTrust:
      example:
        revocation: CRL
        audience: audience
        revocationCacheLifetime: 6
        kid: kid
        issuer: issuer
      properties:
        audience:
          type: string
        issuer:
          type: string
        kid:
          type: string
        revocation:
          enum:
          - CRL
          - DELTA_CRL
          - OCSP
          type: string
        revocationCacheLifetime:
          type: integer
      type: object
      x-okta-tags:
      - IdentityProvider
    IdentityProviderPolicy:
      example:
        subject:
          filter: filter
          matchAttribute: matchAttribute
          matchType: null
          userNameTemplate:
            template: template
          format:
          - format
          - format
        maxClockSkew: 0
        provisioning:
          action: AUTO
          groups:
            filter:
            - filter
            - filter
            assignments:
            - assignments
            - assignments
            sourceAttributeName: sourceAttributeName
            action: NONE
          profileMaster: true
          conditions:
            deprovisioned:
              action: NONE
            suspended:
              action: NONE
        accountLink:
          filter:
            groups:
              include:
              - include
              - include
          action: AUTO
      properties:
        accountLink:
          $ref: '#/components/schemas/PolicyAccountLink'
        maxClockSkew:
          type: integer
        provisioning:
          $ref: '#/components/schemas/Provisioning'
        subject:
          $ref: '#/components/schemas/PolicySubject'
      type: object
      x-okta-parent: '#/definitions/Policy'
      x-okta-tags:
      - Policy
    IdentityProviderPolicyRuleCondition:
      example:
        idpIds:
        - idpIds
        - idpIds
        provider: ANY
      properties:
        idpIds:
          items:
            type: string
          type: array
        provider:
          enum:
          - ANY
          - OKTA
          - SPECIFIC_IDP
          type: string
      type: object
      x-okta-tags:
      - Policy
    IdpPolicyRuleAction:
      example:
        providers:
        - id: id
          type: type
        - id: id
          type: type
      properties:
        providers:
          items:
            $ref: '#/components/schemas/IdpPolicyRuleActionProvider'
          type: array
      type: object
      x-okta-tags:
      - Policy
    IdpPolicyRuleActionProvider:
      example:
        id: id
        type: type
      properties:
        id:
          readOnly: true
          type: string
        type:
          type: string
      type: object
      x-okta-tags:
      - Policy
    IframeEmbedScopeAllowedApps:
      enum:
      - OKTA_ENDUSER
      type: string
      x-okta-tags:
      - Role
    ImageUploadResponse:
      example:
        url: url
      properties:
        url:
          readOnly: true
          type: string
      x-okta-tags:
      - Brand
      x-konfig-is-used-in-successful-response: true
    InactivityPolicyRuleCondition:
      example:
        number: 6
        unit: unit
      properties:
        number:
          type: integer
        unit:
          type: string
      type: object
      x-okta-tags:
      - Policy
    InlineHook:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        _links:
          key: "{}"
        created: 2000-01-23T04:56:07.000+00:00
        channel:
          type: HTTP
          version: version
          config:
            headers:
            - value: value
              key: key
            - value: value
              key: key
            method: method
            authScheme:
              type: type
              value: value
              key: key
            uri: uri
        name: name
        id: id
        type: null
        version: version
        status: null
      properties:
        version:
          type: string
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        channel:
          $ref: '#/components/schemas/InlineHookChannel'
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        status:
          $ref: '#/components/schemas/InlineHookStatus'
        type:
          $ref: '#/components/schemas/InlineHookType'
      type: object
      x-okta-crud:
      - operationId: createInlineHook
        alias: create
        arguments:
        - dest: inlineHook
          self: true
      - operationId: getInlineHook
        alias: read
        arguments: []
      - operationId: updateInlineHook
        alias: update
        arguments:
        - dest: inlineHookId
          src: id
        - dest: inlineHook
          self: true
      - operationId: deleteInlineHook
        alias: delete
        arguments:
        - dest: inlineHookId
          src: id
      x-okta-operations:
      - operationId: activateInlineHook
        alias: activate
        arguments:
        - dest: inlineHookId
          src: id
      - operationId: deactivateInlineHook
        alias: deactivate
        arguments:
        - dest: inlineHookId
          src: id
      - operationId: executeInlineHook
        alias: execute
        arguments:
        - dest: inlineHookId
          src: id
      x-okta-tags:
      - InlineHook
      x-konfig-is-used-in-successful-response: true
    InlineHookChannel:
      example:
        type: HTTP
        version: version
        config:
          headers:
          - value: value
            key: key
          - value: value
            key: key
          method: method
          authScheme:
            type: type
            value: value
            key: key
          uri: uri
      properties:
        version:
          readOnly: false
          type: string
        config:
          $ref: '#/components/schemas/InlineHookChannelConfig'
        type:
          enum:
          - HTTP
          readOnly: false
          type: string
      type: object
      x-okta-tags:
      - InlineHook
    InlineHookChannelConfig:
      example:
        headers:
        - value: value
          key: key
        - value: value
          key: key
        method: method
        authScheme:
          type: type
          value: value
          key: key
        uri: uri
      properties:
        authScheme:
          $ref: '#/components/schemas/InlineHookChannelConfigAuthScheme'
        headers:
          items:
            $ref: '#/components/schemas/InlineHookChannelConfigHeaders'
          type: array
        method:
          type: string
        uri:
          type: string
      type: object
      x-okta-tags:
      - InlineHook
    InlineHookChannelConfigAuthScheme:
      example:
        type: type
        value: value
        key: key
      properties:
        key:
          type: string
        type:
          type: string
        value:
          type: string
      type: object
      x-okta-tags:
      - InlineHook
    InlineHookChannelConfigHeaders:
      example:
        value: value
        key: key
      properties:
        key:
          type: string
        value:
          type: string
      type: object
      x-okta-tags:
      - InlineHook
    InlineHookPayload:
      type: object
      x-okta-extensible: true
      x-okta-tags:
      - InlineHook
    InlineHookResponse:
      example:
        commands:
        - type: type
          value:
          - op: op
            path: path
            value: value
          - op: op
            path: path
            value: value
        - type: type
          value:
          - op: op
            path: path
            value: value
          - op: op
            path: path
            value: value
      properties:
        commands:
          items:
            $ref: '#/components/schemas/InlineHookResponseCommands'
          type: array
      type: object
      x-okta-tags:
      - InlineHook
      x-konfig-is-used-in-successful-response: true
    InlineHookResponseCommandValue:
      example:
        op: op
        path: path
        value: value
      properties:
        op:
          type: string
        path:
          type: string
        value:
          type: string
      x-okta-tags:
      - InlineHook
    InlineHookResponseCommands:
      example:
        type: type
        value:
        - op: op
          path: path
          value: value
        - op: op
          path: path
          value: value
      properties:
        type:
          type: string
        value:
          items:
            $ref: '#/components/schemas/InlineHookResponseCommandValue'
          type: array
      x-okta-tags:
      - InlineHook
    InlineHookStatus:
      enum:
      - ACTIVE
      - INACTIVE
      type: string
      x-okta-tags:
      - InlineHook
    InlineHookType:
      enum:
      - com.okta.oauth2.tokens.transform
      - com.okta.import.transform
      - com.okta.saml.tokens.transform
      - com.okta.user.pre-registration
      - com.okta.user.credential.password.import
      type: string
      x-okta-tags:
      - InlineHook
    IonField:
      properties:
        form:
          $ref: '#/components/schemas/IonForm'
        label:
          type: string
        mutable:
          type: boolean
        name:
          type: string
        required:
          type: boolean
        secret:
          type: boolean
        type:
          type: string
        value:
          additionalProperties:
            type: object
          type: object
        visible:
          type: boolean
      type: object
      x-okta-tags:
      - Ion
    IonForm:
      properties:
        accepts:
          type: string
        href:
          type: string
        method:
          type: string
        name:
          type: string
        produces:
          type: string
        refresh:
          type: integer
        rel:
          items:
            type: string
          type: array
        relatesTo:
          items:
            type: string
          type: array
        value:
          items:
            $ref: '#/components/schemas/IonField'
          readOnly: true
          type: array
      type: object
      x-okta-tags:
      - Ion
    JsonWebKey:
      example:
        _links:
          key: "{}"
        e: e
        created: 2000-01-23T04:56:07.000+00:00
        use: use
        kid: kid
        x5c:
        - x5c
        - x5c
        expiresAt: 2000-01-23T04:56:07.000+00:00
        "n": "n"
        kty: kty
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        x5t#S256: x5t#S256
        x5t: x5t
        key_ops:
        - key_ops
        - key_ops
        x5u: x5u
        alg: alg
        status: status
      properties:
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        alg:
          readOnly: false
          type: string
        created:
          format: date-time
          readOnly: false
          type: string
        e:
          readOnly: false
          type: string
        expiresAt:
          format: date-time
          readOnly: false
          type: string
        key_ops:
          items:
            type: string
          readOnly: false
          type: array
        kid:
          readOnly: false
          type: string
        kty:
          readOnly: false
          type: string
        lastUpdated:
          format: date-time
          readOnly: false
          type: string
        "n":
          readOnly: false
          type: string
        status:
          readOnly: false
          type: string
        use:
          readOnly: false
          type: string
        x5c:
          items:
            type: string
          readOnly: false
          type: array
        x5t:
          readOnly: false
          type: string
        x5t#S256:
          readOnly: false
          type: string
        x5u:
          readOnly: false
          type: string
      type: object
      x-okta-tags:
      - Application
      x-konfig-is-used-in-successful-response: true
    JwkUse:
      example:
        use: sig
      properties:
        use:
          enum:
          - sig
          type: string
      x-okta-tags:
      - Application
    KnowledgeConstraint:
      x-okta-parent: '#/definitions/AccessPolicyConstraint'
      x-okta-tags:
      - Policy
    LifecycleCreateSettingObject:
      example:
        status: null
      properties:
        status:
          $ref: '#/components/schemas/EnabledStatus'
      type: object
      x-okta-tags:
      - Application
    LifecycleDeactivateSettingObject:
      example:
        status: null
      properties:
        status:
          $ref: '#/components/schemas/EnabledStatus'
      type: object
      x-okta-tags:
      - Application
    LifecycleExpirationPolicyRuleCondition:
      example:
        number: 1
        unit: unit
        lifecycleStatus: lifecycleStatus
      properties:
        lifecycleStatus:
          type: string
        number:
          type: integer
        unit:
          type: string
      type: object
      x-okta-tags:
      - Policy
    LinkedObject:
      example:
        _links:
          key: "{}"
        associated:
          name: name
          description: description
          title: title
          type: null
        primary:
          name: name
          description: description
          title: title
          type: null
      properties:
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        associated:
          $ref: '#/components/schemas/LinkedObjectDetails'
        primary:
          $ref: '#/components/schemas/LinkedObjectDetails'
      type: object
      x-okta-crud:
      - operationId: addLinkedObjectDefinition
        alias: create
        arguments:
        - dest: linkedObjectDefinition
          self: true
      - operationId: getLinkedObjectDefinition
        alias: read
        arguments: []
      - operationId: deleteLinkedObjectDefinition
        alias: delete
        arguments:
        - dest: linkedObjectName
          self: true
      x-okta-tags:
      - LinkedObject
      x-konfig-is-used-in-successful-response: true
    LinkedObjectDetails:
      example:
        name: name
        description: description
        title: title
        type: null
      properties:
        title:
          type: string
        description:
          type: string
        name:
          type: string
        type:
          $ref: '#/components/schemas/LinkedObjectDetailsType'
      type: object
      x-okta-tags:
      - LinkedObject
    LinkedObjectDetailsType:
      enum:
      - USER
      type: string
      x-okta-tags:
      - LinkedObject
    LogActor:
      example:
        alternateId: alternateId
        displayName: displayName
        detail:
          key: "{}"
        id: id
        type: type
      properties:
        alternateId:
          readOnly: true
          type: string
        detail:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        displayName:
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        type:
          readOnly: true
          type: string
      type: object
      x-okta-tags:
      - Log
    LogAuthenticationContext:
      example:
        credentialType: null
        authenticationProvider: null
        credentialProvider: null
        externalSessionId: externalSessionId
        interface: interface
        authenticationStep: 0
        issuer:
          id: id
          type: type
      properties:
        authenticationProvider:
          $ref: '#/components/schemas/LogAuthenticationProvider'
        authenticationStep:
          readOnly: true
          type: integer
        credentialProvider:
          $ref: '#/components/schemas/LogCredentialProvider'
        credentialType:
          $ref: '#/components/schemas/LogCredentialType'
        externalSessionId:
          readOnly: true
          type: string
        interface:
          readOnly: true
          type: string
        issuer:
          $ref: '#/components/schemas/LogIssuer'
      type: object
      x-okta-tags:
      - Log
    LogAuthenticationProvider:
      enum:
      - OKTA_AUTHENTICATION_PROVIDER
      - ACTIVE_DIRECTORY
      - LDAP
      - FEDERATION
      - SOCIAL
      - FACTOR_PROVIDER
      type: string
      x-okta-tags:
      - Log
    LogClient:
      example:
        zone: zone
        ipAddress: ipAddress
        userAgent:
          os: os
          browser: browser
          rawUserAgent: rawUserAgent
        id: id
        device: device
        geographicalContext:
          country: country
          city: city
          postalCode: postalCode
          state: state
          geolocation:
            lon: 1.4658129805029452
            lat: 6.027456183070403
      properties:
        device:
          readOnly: true
          type: string
        geographicalContext:
          $ref: '#/components/schemas/LogGeographicalContext'
        id:
          readOnly: true
          type: string
        ipAddress:
          readOnly: true
          type: string
        userAgent:
          $ref: '#/components/schemas/LogUserAgent'
        zone:
          readOnly: true
          type: string
      type: object
      x-okta-tags:
      - Log
    LogCredentialProvider:
      enum:
      - OKTA_AUTHENTICATION_PROVIDER
      - OKTA_CREDENTIAL_PROVIDER
      - RSA
      - SYMANTEC
      - GOOGLE
      - DUO
      - YUBIKEY
      - APPLE
      type: string
      x-okta-tags:
      - Log
    LogCredentialType:
      enum:
      - OTP
      - SMS
      - PASSWORD
      - ASSERTION
      - IWA
      - EMAIL
      - OAUTH2
      - JWT
      type: string
      x-okta-tags:
      - Log
    LogDebugContext:
      example:
        debugData:
          key: "{}"
      properties:
        debugData:
          additionalProperties:
            type: object
          readOnly: true
          type: object
      type: object
      x-okta-tags:
      - Log
    LogEvent:
      example:
        severity: null
        request:
          ipChain:
          - ip: ip
            source: source
            version: version
            geographicalContext:
              country: country
              city: city
              postalCode: postalCode
              state: state
              geolocation:
                lon: 1.4658129805029452
                lat: 6.027456183070403
          - ip: ip
            source: source
            version: version
            geographicalContext:
              country: country
              city: city
              postalCode: postalCode
              state: state
              geolocation:
                lon: 1.4658129805029452
                lat: 6.027456183070403
        authenticationContext:
          credentialType: null
          authenticationProvider: null
          credentialProvider: null
          externalSessionId: externalSessionId
          interface: interface
          authenticationStep: 0
          issuer:
            id: id
            type: type
        eventType: eventType
        published: 2000-01-23T04:56:07.000+00:00
        securityContext:
          asNumber: 5
          domain: domain
          isp: isp
          isProxy: true
          asOrg: asOrg
        version: version
        uuid: uuid
        target:
        - alternateId: alternateId
          displayName: displayName
          id: id
          detailEntry:
            key: "{}"
          type: type
        - alternateId: alternateId
          displayName: displayName
          id: id
          detailEntry:
            key: "{}"
          type: type
        actor:
          alternateId: alternateId
          displayName: displayName
          detail:
            key: "{}"
          id: id
          type: type
        debugContext:
          debugData:
            key: "{}"
        displayMessage: displayMessage
        client:
          zone: zone
          ipAddress: ipAddress
          userAgent:
            os: os
            browser: browser
            rawUserAgent: rawUserAgent
          id: id
          device: device
          geographicalContext:
            country: country
            city: city
            postalCode: postalCode
            state: state
            geolocation:
              lon: 1.4658129805029452
              lat: 6.027456183070403
        legacyEventType: legacyEventType
        outcome:
          result: result
          reason: reason
        transaction:
          detail:
            key: "{}"
          id: id
          type: type
      properties:
        version:
          readOnly: true
          type: string
        actor:
          $ref: '#/components/schemas/LogActor'
        authenticationContext:
          $ref: '#/components/schemas/LogAuthenticationContext'
        client:
          $ref: '#/components/schemas/LogClient'
        debugContext:
          $ref: '#/components/schemas/LogDebugContext'
        displayMessage:
          readOnly: true
          type: string
        eventType:
          readOnly: true
          type: string
        legacyEventType:
          readOnly: true
          type: string
        outcome:
          $ref: '#/components/schemas/LogOutcome'
        published:
          format: date-time
          readOnly: true
          type: string
        request:
          $ref: '#/components/schemas/LogRequest'
        securityContext:
          $ref: '#/components/schemas/LogSecurityContext'
        severity:
          $ref: '#/components/schemas/LogSeverity'
        target:
          items:
            $ref: '#/components/schemas/LogTarget'
          readOnly: true
          type: array
        transaction:
          $ref: '#/components/schemas/LogTransaction'
        uuid:
          readOnly: true
          type: string
      type: object
      x-okta-tags:
      - Log
    LogGeographicalContext:
      example:
        country: country
        city: city
        postalCode: postalCode
        state: state
        geolocation:
          lon: 1.4658129805029452
          lat: 6.027456183070403
      properties:
        city:
          readOnly: true
          type: string
        country:
          readOnly: true
          type: string
        geolocation:
          $ref: '#/components/schemas/LogGeolocation'
        postalCode:
          readOnly: true
          type: string
        state:
          readOnly: true
          type: string
      type: object
      x-okta-tags:
      - Log
    LogGeolocation:
      example:
        lon: 1.4658129805029452
        lat: 6.027456183070403
      properties:
        lat:
          format: double
          readOnly: true
          type: number
        lon:
          format: double
          readOnly: true
          type: number
      type: object
      x-okta-tags:
      - Log
    LogIpAddress:
      example:
        ip: ip
        source: source
        version: version
        geographicalContext:
          country: country
          city: city
          postalCode: postalCode
          state: state
          geolocation:
            lon: 1.4658129805029452
            lat: 6.027456183070403
      properties:
        version:
          readOnly: true
          type: string
        geographicalContext:
          $ref: '#/components/schemas/LogGeographicalContext'
        ip:
          readOnly: true
          type: string
        source:
          readOnly: true
          type: string
      type: object
      x-okta-tags:
      - Log
    LogIssuer:
      example:
        id: id
        type: type
      properties:
        id:
          readOnly: true
          type: string
        type:
          readOnly: true
          type: string
      type: object
      x-okta-tags:
      - Log
    LogOutcome:
      example:
        result: result
        reason: reason
      properties:
        reason:
          readOnly: true
          type: string
        result:
          readOnly: true
          type: string
      type: object
      x-okta-tags:
      - Log
    LogRequest:
      example:
        ipChain:
        - ip: ip
          source: source
          version: version
          geographicalContext:
            country: country
            city: city
            postalCode: postalCode
            state: state
            geolocation:
              lon: 1.4658129805029452
              lat: 6.027456183070403
        - ip: ip
          source: source
          version: version
          geographicalContext:
            country: country
            city: city
            postalCode: postalCode
            state: state
            geolocation:
              lon: 1.4658129805029452
              lat: 6.027456183070403
      properties:
        ipChain:
          items:
            $ref: '#/components/schemas/LogIpAddress'
          readOnly: true
          type: array
      type: object
      x-okta-tags:
      - Log
    LogSecurityContext:
      example:
        asNumber: 5
        domain: domain
        isp: isp
        isProxy: true
        asOrg: asOrg
      properties:
        asNumber:
          readOnly: true
          type: integer
        asOrg:
          readOnly: true
          type: string
        domain:
          readOnly: true
          type: string
        isProxy:
          readOnly: true
          type: boolean
        isp:
          readOnly: true
          type: string
      type: object
      x-okta-tags:
      - Log
    LogSeverity:
      enum:
      - DEBUG
      - INFO
      - WARN
      - ERROR
      type: string
      x-okta-tags:
      - Log
    LogTarget:
      example:
        alternateId: alternateId
        displayName: displayName
        id: id
        detailEntry:
          key: "{}"
        type: type
      properties:
        alternateId:
          readOnly: true
          type: string
        detailEntry:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        displayName:
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        type:
          readOnly: true
          type: string
      type: object
      x-okta-tags:
      - Log
    LogTransaction:
      example:
        detail:
          key: "{}"
        id: id
        type: type
      properties:
        detail:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        id:
          readOnly: true
          type: string
        type:
          readOnly: true
          type: string
      type: object
      x-okta-tags:
      - Log
    LogUserAgent:
      example:
        os: os
        browser: browser
        rawUserAgent: rawUserAgent
      properties:
        browser:
          readOnly: true
          type: string
        os:
          readOnly: true
          type: string
        rawUserAgent:
          readOnly: true
          type: string
      type: object
      x-okta-tags:
      - Log
    MDMEnrollmentPolicyRuleCondition:
      example:
        blockNonSafeAndroid: true
        enrollment: OMM
      properties:
        blockNonSafeAndroid:
          type: boolean
        enrollment:
          enum:
          - OMM
          - ANY_OR_NONE
          type: string
      type: object
      x-okta-tags:
      - Policy
    MultifactorEnrollmentPolicy:
      allOf:
      - $ref: '#/components/schemas/Policy'
      - $ref: '#/components/schemas/MultifactorEnrollmentPolicy_allOf'
      x-okta-parent: '#/definitions/Policy'
      x-okta-tags:
      - Policy
    MultifactorEnrollmentPolicyAuthenticatorSettings:
      properties:
        constraints:
          $ref: '#/components/schemas/MultifactorEnrollmentPolicyAuthenticatorSettings_constraints'
        enroll:
          $ref: '#/components/schemas/MultifactorEnrollmentPolicyAuthenticatorSettings_enroll'
        key:
          $ref: '#/components/schemas/MultifactorEnrollmentPolicyAuthenticatorType'
      type: object
      x-okta-tags:
      - Policy
    MultifactorEnrollmentPolicyAuthenticatorStatus:
      enum:
      - NOT_ALLOWED
      - OPTIONAL
      - REQUIRED
      type: string
      x-okta-tags:
      - Policy
    MultifactorEnrollmentPolicyAuthenticatorType:
      enum:
      - custom_app
      - custom_otp
      - duo
      - external_idp
      - google_otp
      - okta_email
      - okta_password
      - okta_verify
      - onprem_mfa
      - phone_number
      - rsa_token
      - security_question
      - symantec_vip
      - webauthn
      - yubikey_token
      type: string
      x-okta-tags:
      - Policy
    MultifactorEnrollmentPolicySettings:
      properties:
        authenticators:
          items:
            $ref: '#/components/schemas/MultifactorEnrollmentPolicyAuthenticatorSettings'
          type: array
        type:
          $ref: '#/components/schemas/MultifactorEnrollmentPolicySettingsType'
      type: object
      x-okta-tags:
      - Policy
    MultifactorEnrollmentPolicySettingsType:
      enum:
      - AUTHENTICATORS
      type: string
      x-okta-tags:
      - Policy
    NetworkZone:
      example:
        gateways:
        - type: null
          value: value
        - type: null
          value: value
        _links:
          key: "{}"
        created: 2000-01-23T04:56:07.000+00:00
        usage: null
        proxyType: proxyType
        type: null
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        system: true
        name: name
        asns:
        - asns
        - asns
        locations:
        - country: country
          region: region
        - country: country
          region: region
        proxies:
        - type: null
          value: value
        - type: null
          value: value
        id: id
        status: null
      properties:
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        asns:
          items:
            type: string
          type: array
        created:
          format: date-time
          readOnly: true
          type: string
        gateways:
          items:
            $ref: '#/components/schemas/NetworkZoneAddress'
          type: array
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        locations:
          items:
            $ref: '#/components/schemas/NetworkZoneLocation'
          type: array
        name:
          type: string
        proxies:
          items:
            $ref: '#/components/schemas/NetworkZoneAddress'
          type: array
        proxyType:
          type: string
        status:
          $ref: '#/components/schemas/NetworkZoneStatus'
        system:
          type: boolean
        type:
          $ref: '#/components/schemas/NetworkZoneType'
        usage:
          $ref: '#/components/schemas/NetworkZoneUsage'
      type: object
      x-okta-crud:
      - operationId: getNetworkZone
        alias: read
        arguments:
        - dest: zoneId
          src: id
      - operationId: updateNetworkZone
        alias: update
        arguments:
        - dest: zoneId
          src: id
        - dest: zone
          self: true
      - operationId: deleteNetworkZone
        alias: delete
        arguments:
        - dest: zoneId
          src: id
      x-okta-operations:
      - operationId: activateNetworkZone
        alias: activate
        arguments:
        - dest: zoneId
          src: id
      - operationId: deactivateNetworkZone
        alias: deactivate
        arguments:
        - dest: zoneId
          src: id
      x-okta-tags:
      - NetworkZone
      x-konfig-is-used-in-successful-response: true
    NetworkZoneAddress:
      example:
        type: null
        value: value
      properties:
        type:
          $ref: '#/components/schemas/NetworkZoneAddressType'
        value:
          type: string
      type: object
      x-okta-tags:
      - NetworkZone
    NetworkZoneAddressType:
      enum:
      - CIDR
      - RANGE
      type: string
      x-okta-tags:
      - NetworkZone
    NetworkZoneLocation:
      example:
        country: country
        region: region
      properties:
        country:
          type: string
        region:
          type: string
      type: object
      x-okta-tags:
      - NetworkZone
    NetworkZoneStatus:
      enum:
      - ACTIVE
      - INACTIVE
      type: string
      x-okta-tags:
      - NetworkZone
    NetworkZoneType:
      enum:
      - IP
      - DYNAMIC
      type: string
      x-okta-tags:
      - NetworkZone
    NetworkZoneUsage:
      enum:
      - POLICY
      - BLOCKLIST
      type: string
      x-okta-tags:
      - NetworkZone
    NotificationType:
      enum:
      - CONNECTOR_AGENT
      - USER_LOCKED_OUT
      - APP_IMPORT
      - LDAP_AGENT
      - AD_AGENT
      - OKTA_ANNOUNCEMENT
      - OKTA_ISSUE
      - OKTA_UPDATE
      - IWA_AGENT
      - USER_DEPROVISION
      - REPORT_SUSPICIOUS_ACTIVITY
      - RATELIMIT_NOTIFICATION
      type: string
      x-okta-tags:
      - Subscription
    OAuth2Actor:
      example:
        id: id
        type: type
      properties:
        id:
          readOnly: true
          type: string
        type:
          type: string
      type: object
      x-okta-tags:
      - Application
    OAuth2Claim:
      example:
        group_filter_type: STARTS_WITH
        claimType: IDENTITY
        system: true
        alwaysIncludeInToken: true
        _links:
          key: "{}"
        valueType: EXPRESSION
        name: name
        id: id
        conditions:
          scopes:
          - scopes
          - scopes
        value: value
        status: ACTIVE
      properties:
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        alwaysIncludeInToken:
          type: boolean
        claimType:
          enum:
          - IDENTITY
          - RESOURCE
          type: string
        conditions:
          $ref: '#/components/schemas/OAuth2ClaimConditions'
        group_filter_type:
          enum:
          - STARTS_WITH
          - EQUALS
          - CONTAINS
          - REGEX
          type: string
        id:
          readOnly: true
          type: string
        name:
          type: string
        status:
          enum:
          - ACTIVE
          - INACTIVE
          type: string
        system:
          type: boolean
        value:
          type: string
        valueType:
          enum:
          - EXPRESSION
          - GROUPS
          - SYSTEM
          type: string
      type: object
      x-okta-tags:
      - Application
      x-konfig-is-used-in-successful-response: true
    OAuth2ClaimConditions:
      example:
        scopes:
        - scopes
        - scopes
      properties:
        scopes:
          items:
            type: string
          type: array
      type: object
      x-okta-tags:
      - Application
    OAuth2Client:
      example:
        client_uri: client_uri
        _links:
          key: "{}"
        logo_uri: logo_uri
        client_name: client_name
        client_id: client_id
      properties:
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        client_id:
          readOnly: true
          type: string
        client_name:
          readOnly: true
          type: string
        client_uri:
          readOnly: true
          type: string
        logo_uri:
          readOnly: true
          type: string
      type: object
      x-okta-tags:
      - Application
    OAuth2RefreshToken:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        clientId: clientId
        _embedded:
          key: "{}"
        _links:
          key: "{}"
        createdBy:
          id: id
          type: type
        created: 2000-01-23T04:56:07.000+00:00
        id: id
        scopes:
        - scopes
        - scopes
        userId: userId
        expiresAt: 2000-01-23T04:56:07.000+00:00
        issuer: issuer
        status: ACTIVE
      properties:
        _embedded:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        clientId:
          type: string
        created:
          format: date-time
          readOnly: true
          type: string
        createdBy:
          $ref: '#/components/schemas/OAuth2Actor'
        expiresAt:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        issuer:
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        scopes:
          items:
            type: string
          type: array
        status:
          enum:
          - ACTIVE
          - REVOKED
          type: string
        userId:
          type: string
      type: object
      x-okta-tags:
      - Application
      x-konfig-is-used-in-successful-response: true
    OAuth2Scope:
      example:
        default: true
        system: true
        displayName: displayName
        name: name
        description: description
        metadataPublish: ALL_CLIENTS
        id: id
        consent: REQUIRED
      properties:
        description:
          type: string
        consent:
          enum:
          - REQUIRED
          - IMPLICIT
          - ADMIN
          type: string
        default:
          type: boolean
        displayName:
          type: string
        id:
          readOnly: true
          type: string
        metadataPublish:
          enum:
          - ALL_CLIENTS
          - NO_CLIENTS
          type: string
        name:
          type: string
        system:
          type: boolean
      type: object
      x-okta-tags:
      - Application
      x-konfig-is-used-in-successful-response: true
    OAuth2ScopeConsentGrant:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        scopeId: scopeId
        clientId: clientId
        _embedded:
          key: "{}"
        _links:
          key: "{}"
        createdBy:
          id: id
          type: type
        created: 2000-01-23T04:56:07.000+00:00
        id: id
        source: null
        userId: userId
        issuer: issuer
        status: null
      properties:
        _embedded:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        clientId:
          type: string
        created:
          format: date-time
          readOnly: true
          type: string
        createdBy:
          $ref: '#/components/schemas/OAuth2Actor'
        id:
          readOnly: true
          type: string
        issuer:
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        scopeId:
          type: string
        source:
          $ref: '#/components/schemas/OAuth2ScopeConsentGrantSource'
        status:
          $ref: '#/components/schemas/OAuth2ScopeConsentGrantStatus'
        userId:
          type: string
      type: object
      x-okta-tags:
      - Application
      x-konfig-is-used-in-successful-response: true
    OAuth2ScopeConsentGrantSource:
      enum:
      - END_USER
      - ADMIN
      type: string
      x-okta-tags:
      - Application
    OAuth2ScopeConsentGrantStatus:
      enum:
      - ACTIVE
      - REVOKED
      type: string
      x-okta-tags:
      - Application
    OAuth2ScopesMediationPolicyRuleCondition:
      example:
        include:
        - include
        - include
      properties:
        include:
          items:
            type: string
          type: array
      type: object
      x-okta-tags:
      - Application
    OAuth2Token:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        clientId: clientId
        _embedded:
          key: "{}"
        _links:
          key: "{}"
        created: 2000-01-23T04:56:07.000+00:00
        id: id
        scopes:
        - scopes
        - scopes
        userId: userId
        expiresAt: 2000-01-23T04:56:07.000+00:00
        issuer: issuer
        status: ACTIVE
      properties:
        _embedded:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        clientId:
          type: string
        created:
          format: date-time
          readOnly: true
          type: string
        expiresAt:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        issuer:
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        scopes:
          items:
            type: string
          type: array
        status:
          enum:
          - ACTIVE
          - REVOKED
          type: string
        userId:
          type: string
      type: object
      x-okta-tags:
      - Application
      x-konfig-is-used-in-successful-response: true
    OAuthApplicationCredentials:
      properties:
        oauthClient:
          $ref: '#/components/schemas/ApplicationCredentialsOAuthClient'
      x-okta-parent: '#/definitions/ApplicationCredentials'
      x-okta-tags:
      - Application
    OAuthAuthorizationPolicy:
      x-okta-parent: '#/definitions/Policy'
      x-okta-tags:
      - Policy
    OAuthEndpointAuthenticationMethod:
      enum:
      - none
      - client_secret_post
      - client_secret_basic
      - client_secret_jwt
      - private_key_jwt
      type: string
      x-okta-tags:
      - Application
    OAuthGrantType:
      enum:
      - authorization_code
      - implicit
      - password
      - refresh_token
      - client_credentials
      - saml2_bearer
      - device_code
      - token_exchange
      - interaction_code
      type: string
      x-okta-tags:
      - Application
    OAuthResponseType:
      enum:
      - code
      - token
      - id_token
      type: string
      x-okta-tags:
      - Application
    OktaSignOnPolicy:
      properties:
        conditions:
          $ref: '#/components/schemas/OktaSignOnPolicyConditions'
      type: object
      x-okta-parent: '#/definitions/Policy'
      x-okta-tags:
      - Policy
    OktaSignOnPolicyConditions:
      properties:
        people:
          $ref: '#/components/schemas/PolicyPeopleCondition'
      x-okta-parent: '#/definitions/PolicyRuleConditions'
      x-okta-tags:
      - Policy
    OktaSignOnPolicyRule:
      properties:
        actions:
          $ref: '#/components/schemas/OktaSignOnPolicyRuleActions'
        conditions:
          $ref: '#/components/schemas/OktaSignOnPolicyRuleConditions'
        name:
          type: string
      x-okta-parent: '#/definitions/PolicyRule'
      x-okta-tags:
      - Policy
    OktaSignOnPolicyRuleActions:
      properties:
        signon:
          $ref: '#/components/schemas/OktaSignOnPolicyRuleSignonActions'
      x-okta-parent: '#/definitions/PolicyRuleActions'
      x-okta-tags:
      - Policy
    OktaSignOnPolicyRuleConditions:
      properties:
        authContext:
          $ref: '#/components/schemas/PolicyRuleAuthContextCondition'
        network:
          $ref: '#/components/schemas/PolicyNetworkCondition'
        people:
          $ref: '#/components/schemas/PolicyPeopleCondition'
      x-okta-parent: '#/definitions/PolicyRuleConditions'
      x-okta-tags:
      - Policy
    OktaSignOnPolicyRuleSignonActions:
      example:
        rememberDeviceByDefault: false
        access: ALLOW
        factorPromptMode: ALWAYS
        session:
          maxSessionLifetimeMinutes: 0
          usePersistentCookie: false
          maxSessionIdleMinutes: 120
        factorLifetime: 0
        requireFactor: false
      properties:
        access:
          enum:
          - ALLOW
          - DENY
          type: string
        factorLifetime:
          type: integer
        factorPromptMode:
          enum:
          - ALWAYS
          - DEVICE
          - SESSION
          type: string
        rememberDeviceByDefault:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OktaSignOnPolicyRuleSignonActions-properties-rememberDeviceByDefault
        requireFactor:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OktaSignOnPolicyRuleSignonActions-properties-requireFactor
        session:
          $ref: '#/components/schemas/OktaSignOnPolicyRuleSignonSessionActions'
      type: object
      x-okta-tags:
      - Policy
    OktaSignOnPolicyRuleSignonSessionActions:
      example:
        maxSessionLifetimeMinutes: 0
        usePersistentCookie: false
        maxSessionIdleMinutes: 120
      properties:
        maxSessionIdleMinutes:
          default: 120
          example: 120
          type: integer
          x-konfig-original-example: 120
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OktaSignOnPolicyRuleSignonSessionActions-properties-maxSessionIdleMinutes
        maxSessionLifetimeMinutes:
          default: 0
          example: 0
          type: integer
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OktaSignOnPolicyRuleSignonSessionActions-properties-maxSessionLifetimeMinutes
        usePersistentCookie:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OktaSignOnPolicyRuleSignonSessionActions-properties-usePersistentCookie
      type: object
      x-okta-tags:
      - Policy
    OpenIdConnectApplication:
      properties:
        credentials:
          $ref: '#/components/schemas/OAuthApplicationCredentials'
        name:
          default: oidc_client
        settings:
          $ref: '#/components/schemas/OpenIdConnectApplicationSettings'
      x-okta-defined-as:
        name: oidc_client
      x-okta-parent: '#/definitions/Application'
      x-okta-tags:
      - Application
    OpenIdConnectApplicationConsentMethod:
      enum:
      - REQUIRED
      - TRUSTED
      type: string
      x-okta-tags:
      - Application
    OpenIdConnectApplicationIdpInitiatedLogin:
      properties:
        default_scope:
          items:
            type: string
          type: array
        mode:
          type: string
      type: object
      x-okta-tags:
      - Application
    OpenIdConnectApplicationIssuerMode:
      enum:
      - CUSTOM_URL
      - ORG_URL
      - DYNAMIC
      type: string
      x-okta-tags:
      - Application
    OpenIdConnectApplicationSettings:
      properties:
        oauthClient:
          $ref: '#/components/schemas/OpenIdConnectApplicationSettingsClient'
      x-okta-parent: '#/definitions/ApplicationSettings'
      x-okta-tags:
      - Application
    OpenIdConnectApplicationSettingsClient:
      properties:
        application_type:
          $ref: '#/components/schemas/OpenIdConnectApplicationType'
        client_uri:
          type: string
        consent_method:
          $ref: '#/components/schemas/OpenIdConnectApplicationConsentMethod'
        grant_types:
          items:
            $ref: '#/components/schemas/OAuthGrantType'
          type: array
        idp_initiated_login:
          $ref: '#/components/schemas/OpenIdConnectApplicationIdpInitiatedLogin'
        initiate_login_uri:
          type: string
        issuer_mode:
          $ref: '#/components/schemas/OpenIdConnectApplicationIssuerMode'
        jwks:
          $ref: '#/components/schemas/OpenIdConnectApplicationSettingsClientKeys'
        logo_uri:
          type: string
        policy_uri:
          type: string
        post_logout_redirect_uris:
          items:
            type: string
          type: array
        redirect_uris:
          items:
            type: string
          type: array
        refresh_token:
          $ref: '#/components/schemas/OpenIdConnectApplicationSettingsRefreshToken'
        response_types:
          items:
            $ref: '#/components/schemas/OAuthResponseType'
          type: array
        tos_uri:
          type: string
        wildcard_redirect:
          type: string
      x-okta-tags:
      - Application
    OpenIdConnectApplicationSettingsClientKeys:
      properties:
        keys:
          items:
            $ref: '#/components/schemas/JsonWebKey'
          type: array
      x-okta-tags:
      - Application
    OpenIdConnectApplicationSettingsRefreshToken:
      properties:
        leeway:
          type: integer
        rotation_type:
          $ref: '#/components/schemas/OpenIdConnectRefreshTokenRotationType'
      type: object
      x-okta-tags:
      - Application
    OpenIdConnectApplicationType:
      enum:
      - web
      - native
      - browser
      - service
      type: string
      x-okta-tags:
      - Application
    OpenIdConnectRefreshTokenRotationType:
      enum:
      - rotate
      - static
      type: string
      x-okta-tags:
      - Application
    Org2OrgApplication:
      properties:
        name:
          default: okta_org2org
        settings:
          $ref: '#/components/schemas/Org2OrgApplicationSettings'
      x-okta-defined-as:
        name: okta_org2org
      x-okta-parent: '#/definitions/SamlApplication'
      x-okta-tags:
      - Application
    Org2OrgApplicationSettings:
      properties:
        app:
          $ref: '#/components/schemas/Org2OrgApplicationSettingsApp'
      x-okta-parent: '#/definitions/SamlApplicationSettings'
      x-okta-tags:
      - Application
    Org2OrgApplicationSettingsApp:
      properties:
        acsUrl:
          type: string
        audRestriction:
          type: string
        baseUrl:
          type: string
      x-okta-parent: '#/definitions/ApplicationSettingsApplication'
      x-okta-tags:
      - Application
    OrgContactType:
      enum:
      - BILLING
      - TECHNICAL
      type: string
      x-okta-tags:
      - Org
    OrgContactTypeObj:
      example:
        _links:
          key: "{}"
        contactType: null
      properties:
        _links:
          additionalProperties:
            type: object
          type: object
        contactType:
          $ref: '#/components/schemas/OrgContactType'
      type: object
      x-okta-tags:
      - Org
    OrgContactUser:
      example:
        _links:
          key: "{}"
        userId: userId
      properties:
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        userId:
          type: string
      type: object
      x-okta-operations:
      - operationId: updateOrgContactUser
        alias: updateContactUser
        arguments:
        - dest: userId
          src: userId
      x-okta-tags:
      - Org
      x-konfig-is-used-in-successful-response: true
    OrgOktaCommunicationSetting:
      example:
        _links:
          key: "{}"
        optOutEmailUsers: true
      properties:
        _links:
          additionalProperties:
            type: object
          type: object
        optOutEmailUsers:
          readOnly: true
          type: boolean
      type: object
      x-okta-operations:
      - operationId: optInUsersToOktaCommunicationEmails
        alias: optInUsersToOktaCommunicationEmails
      - operationId: optOutUsersFromOktaCommunicationEmails
        alias: optOutUsersFromOktaCommunicationEmails
      x-okta-tags:
      - Org
      x-konfig-is-used-in-successful-response: true
    OrgOktaSupportSetting:
      enum:
      - DISABLED
      - ENABLED
      type: string
      x-okta-tags:
      - Org
    OrgOktaSupportSettingsObj:
      example:
        _links:
          key: "{}"
        expiration: 2000-01-23T04:56:07.000+00:00
        support: null
      properties:
        _links:
          additionalProperties:
            type: object
          type: object
        expiration:
          format: date-time
          readOnly: true
          type: string
        support:
          $ref: '#/components/schemas/OrgOktaSupportSetting'
      type: object
      x-okta-operations:
      - operationId: extendOktaSupport
        alias: extendOktaSupport
      - operationId: grantOktaSupport
        alias: grantOktaSupport
      - operationId: revokeOktaSupport
        alias: revokeOktaSupport
      x-okta-tags:
      - Org
      x-konfig-is-used-in-successful-response: true
    OrgPreferences:
      example:
        _links:
          key: "{}"
        showEndUserFooter: true
      properties:
        _links:
          additionalProperties:
            type: object
          type: object
        showEndUserFooter:
          readOnly: true
          type: boolean
      type: object
      x-okta-operations:
      - operationId: hideOktaUIFooter
        alias: hideEndUserFooter
      - operationId: showOktaUIFooter
        alias: showEndUserFooter
      x-okta-tags:
      - Org
      x-konfig-is-used-in-successful-response: true
    OrgSetting:
      example:
        country: country
        website: website
        supportPhoneNumber: supportPhoneNumber
        _links:
          key: "{}"
        address2: address2
        city: city
        address1: address1
        created: 2000-01-23T04:56:07.000+00:00
        companyName: companyName
        postalCode: postalCode
        expiresAt: 2000-01-23T04:56:07.000+00:00
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        phoneNumber: phoneNumber
        endUserSupportHelpURL: endUserSupportHelpURL
        subdomain: subdomain
        id: id
        state: state
        status: status
      properties:
        _links:
          additionalProperties:
            type: object
          type: object
        address1:
          type: string
        address2:
          type: string
        city:
          type: string
        companyName:
          type: string
        country:
          type: string
        created:
          format: date-time
          readOnly: true
          type: string
        endUserSupportHelpURL:
          type: string
        expiresAt:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        phoneNumber:
          type: string
        postalCode:
          type: string
        state:
          type: string
        status:
          readOnly: true
          type: string
        subdomain:
          readOnly: true
          type: string
        supportPhoneNumber:
          type: string
        website:
          type: string
      type: object
      x-okta-crud:
      - operationId: getOrgSettings
        alias: read
        arguments:
        - dest: orgSetting
          self: true
      - operationId: updateOrgSetting
        alias: update
        arguments:
        - dest: orgSetting
          self: true
      x-okta-operations:
      - operationId: partialUpdateOrgSetting
        alias: partialUpdate
        arguments:
        - dest: orgSetting
          self: true
      - operationId: getOrgContactTypes
        alias: getContactTypes
      - operationId: getOrgContactUser
        alias: getOrgContactUser
      - operationId: getOrgOktaSupportSettings
        alias: getSupportSettings
      - operationId: getOktaCommunicationSettings
        alias: communicationSettings
      - operationId: getOrgPreferences
        alias: orgPreferences
      - operationId: showOktaUIFooter
        alias: showFooter
        arguments:
        - dest: orgSetting
          self: true
      - operationId: hideOktaUIFooter
        alias: hideFooter
        arguments:
        - dest: orgSetting
          self: true
      - operationId: updateOrgLogo
        alias: updateOrgLogo
      x-okta-tags:
      - Org
      x-konfig-is-used-in-successful-response: true
    PasswordCredential:
      example:
        hook:
          type: type
        value: value
        hash:
          salt: salt
          saltOrder: saltOrder
          workFactor: 0
          value: value
          algorithm: null
      properties:
        hash:
          $ref: '#/components/schemas/PasswordCredentialHash'
        hook:
          $ref: '#/components/schemas/PasswordCredentialHook'
        value:
          format: password
          type: string
      type: object
      x-okta-tags:
      - User
    PasswordCredentialHash:
      example:
        salt: salt
        saltOrder: saltOrder
        workFactor: 0
        value: value
        algorithm: null
      properties:
        algorithm:
          $ref: '#/components/schemas/PasswordCredentialHashAlgorithm'
        salt:
          type: string
        saltOrder:
          type: string
        value:
          type: string
        workFactor:
          type: integer
      type: object
      x-okta-tags:
      - User
    PasswordCredentialHashAlgorithm:
      enum:
      - BCRYPT
      - SHA-512
      - SHA-256
      - SHA-1
      - MD5
      type: string
      x-okta-tags:
      - User
    PasswordCredentialHook:
      example:
        type: type
      properties:
        type:
          type: string
      type: object
      x-okta-tags:
      - User
    PasswordDictionary:
      properties:
        common:
          $ref: '#/components/schemas/PasswordDictionaryCommon'
      type: object
      x-okta-tags:
      - Policy
    PasswordDictionaryCommon:
      properties:
        exclude:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PasswordDictionaryCommon-properties-exclude
      type: object
      x-okta-tags:
      - Policy
    PasswordExpirationPolicyRuleCondition:
      example:
        number: 5
        unit: unit
      properties:
        number:
          type: integer
        unit:
          type: string
      type: object
      x-okta-tags:
      - Policy
    PasswordPolicy:
      properties:
        conditions:
          $ref: '#/components/schemas/PasswordPolicyConditions'
        settings:
          $ref: '#/components/schemas/PasswordPolicySettings'
      type: object
      x-okta-parent: '#/definitions/Policy'
      x-okta-tags:
      - Policy
    PasswordPolicyAuthenticationProviderCondition:
      example:
        include:
        - include
        - include
        provider: ACTIVE_DIRECTORY
      properties:
        include:
          items:
            type: string
          type: array
        provider:
          enum:
          - ACTIVE_DIRECTORY
          - ANY
          - LDAP
          - OKTA
          type: string
      type: object
      x-okta-tags:
      - Policy
    PasswordPolicyConditions:
      properties:
        authProvider:
          $ref: '#/components/schemas/PasswordPolicyAuthenticationProviderCondition'
        people:
          $ref: '#/components/schemas/PolicyPeopleCondition'
      x-okta-parent: '#/definitions/PolicyRuleConditions'
      x-okta-tags:
      - Policy
    PasswordPolicyDelegationSettings:
      properties:
        options:
          $ref: '#/components/schemas/PasswordPolicyDelegationSettingsOptions'
      type: object
      x-okta-tags:
      - Policy
    PasswordPolicyDelegationSettingsOptions:
      properties:
        skipUnlock:
          type: boolean
      type: object
      x-okta-tags:
      - Policy
    PasswordPolicyPasswordSettings:
      properties:
        age:
          $ref: '#/components/schemas/PasswordPolicyPasswordSettingsAge'
        complexity:
          $ref: '#/components/schemas/PasswordPolicyPasswordSettingsComplexity'
        lockout:
          $ref: '#/components/schemas/PasswordPolicyPasswordSettingsLockout'
      type: object
      x-okta-tags:
      - Policy
    PasswordPolicyPasswordSettingsAge:
      properties:
        expireWarnDays:
          default: 0
          example: 0
          type: integer
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PasswordPolicyPasswordSettingsAge-properties-expireWarnDays
        historyCount:
          default: 0
          example: 0
          type: integer
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PasswordPolicyPasswordSettingsAge-properties-historyCount
        maxAgeDays:
          default: 0
          example: 0
          type: integer
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PasswordPolicyPasswordSettingsAge-properties-maxAgeDays
        minAgeMinutes:
          default: 0
          example: 0
          type: integer
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PasswordPolicyPasswordSettingsAge-properties-minAgeMinutes
      type: object
      x-okta-tags:
      - Policy
    PasswordPolicyPasswordSettingsComplexity:
      properties:
        dictionary:
          $ref: '#/components/schemas/PasswordDictionary'
        excludeAttributes:
          example: 1
          items:
            type: string
          type: array
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PasswordPolicyPasswordSettingsComplexity-properties-excludeAttributes
        excludeUsername:
          default: true
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PasswordPolicyPasswordSettingsComplexity-properties-excludeUsername
        minLength:
          default: 8
          example: 8
          type: integer
          x-konfig-original-example: 8
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PasswordPolicyPasswordSettingsComplexity-properties-minLength
        minLowerCase:
          default: 1
          example: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PasswordPolicyPasswordSettingsComplexity-properties-minLowerCase
        minNumber:
          default: 1
          example: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PasswordPolicyPasswordSettingsComplexity-properties-minNumber
        minSymbol:
          default: 1
          example: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PasswordPolicyPasswordSettingsComplexity-properties-minSymbol
        minUpperCase:
          default: 1
          example: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PasswordPolicyPasswordSettingsComplexity-properties-minUpperCase
      type: object
      x-okta-tags:
      - Policy
    PasswordPolicyPasswordSettingsLockout:
      properties:
        autoUnlockMinutes:
          type: integer
        maxAttempts:
          type: integer
        showLockoutFailures:
          type: boolean
        userLockoutNotificationChannels:
          items:
            type: string
          type: array
      type: object
      x-okta-tags:
      - Policy
    PasswordPolicyRecoveryEmail:
      properties:
        properties:
          $ref: '#/components/schemas/PasswordPolicyRecoveryEmailProperties'
        status:
          enum:
          - ACTIVE
          - INACTIVE
          readOnly: true
          type: string
      type: object
      x-okta-tags:
      - Policy
    PasswordPolicyRecoveryEmailProperties:
      properties:
        recoveryToken:
          $ref: '#/components/schemas/PasswordPolicyRecoveryEmailRecoveryToken'
      type: object
      x-okta-tags:
      - Policy
    PasswordPolicyRecoveryEmailRecoveryToken:
      properties:
        tokenLifetimeMinutes:
          default: 10080
          example: 10080
          type: integer
          x-konfig-original-example: 10080
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PasswordPolicyRecoveryEmailRecoveryToken-properties-tokenLifetimeMinutes
      type: object
      x-okta-tags:
      - Policy
    PasswordPolicyRecoveryFactorSettings:
      properties:
        status:
          default: INACTIVE
          enum:
          - ACTIVE
          - INACTIVE
          example: INACTIVE
          type: string
          x-konfig-original-example: INACTIVE
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PasswordPolicyRecoveryFactorSettings-properties-status
      type: object
      x-okta-tags:
      - Policy
    PasswordPolicyRecoveryFactors:
      properties:
        okta_call:
          $ref: '#/components/schemas/PasswordPolicyRecoveryFactorSettings'
        okta_email:
          $ref: '#/components/schemas/PasswordPolicyRecoveryEmail'
        okta_sms:
          $ref: '#/components/schemas/PasswordPolicyRecoveryFactorSettings'
        recovery_question:
          $ref: '#/components/schemas/PasswordPolicyRecoveryQuestion'
      type: object
      x-okta-tags:
      - Policy
    PasswordPolicyRecoveryQuestion:
      properties:
        properties:
          $ref: '#/components/schemas/PasswordPolicyRecoveryQuestionProperties'
        status:
          enum:
          - ACTIVE
          - INACTIVE
          readOnly: true
          type: string
      type: object
      x-okta-tags:
      - Policy
    PasswordPolicyRecoveryQuestionComplexity:
      properties:
        minLength:
          readOnly: true
          type: integer
      type: object
      x-okta-tags:
      - Policy
    PasswordPolicyRecoveryQuestionProperties:
      properties:
        complexity:
          $ref: '#/components/schemas/PasswordPolicyRecoveryQuestionComplexity'
      type: object
      x-okta-tags:
      - Policy
    PasswordPolicyRecoverySettings:
      properties:
        factors:
          $ref: '#/components/schemas/PasswordPolicyRecoveryFactors'
      type: object
      x-okta-tags:
      - Policy
    PasswordPolicyRule:
      properties:
        actions:
          $ref: '#/components/schemas/PasswordPolicyRuleActions'
        conditions:
          $ref: '#/components/schemas/PasswordPolicyRuleConditions'
        name:
          type: string
      type: object
      x-okta-parent: '#/definitions/PolicyRule'
      x-okta-tags:
      - Policy
    PasswordPolicyRuleAction:
      example:
        access: ALLOW
      properties:
        access:
          enum:
          - ALLOW
          - DENY
          readOnly: false
          type: string
      type: object
      x-okta-tags:
      - Policy
    PasswordPolicyRuleActions:
      properties:
        passwordChange:
          $ref: '#/components/schemas/PasswordPolicyRuleAction'
        selfServicePasswordReset:
          $ref: '#/components/schemas/PasswordPolicyRuleAction'
        selfServiceUnlock:
          $ref: '#/components/schemas/PasswordPolicyRuleAction'
      x-okta-parent: '#/definitions/PolicyRuleActions'
      x-okta-tags:
      - Policy
    PasswordPolicyRuleConditions:
      properties:
        network:
          $ref: '#/components/schemas/PolicyNetworkCondition'
        people:
          $ref: '#/components/schemas/PolicyPeopleCondition'
      x-okta-parent: '#/definitions/PolicyRuleConditions'
      x-okta-tags:
      - Policy
    PasswordPolicySettings:
      properties:
        delegation:
          $ref: '#/components/schemas/PasswordPolicyDelegationSettings'
        password:
          $ref: '#/components/schemas/PasswordPolicyPasswordSettings'
        recovery:
          $ref: '#/components/schemas/PasswordPolicyRecoverySettings'
      type: object
      x-okta-tags:
      - Policy
    PasswordSettingObject:
      example:
        seed: null
        change: null
        status: null
      properties:
        change:
          $ref: '#/components/schemas/ChangeEnum'
        seed:
          $ref: '#/components/schemas/SeedEnum'
        status:
          $ref: '#/components/schemas/EnabledStatus'
      type: object
      x-okta-tags:
      - Application
    PlatformConditionEvaluatorPlatform:
      example:
        os:
          expression: expression
          type: ANDROID
          version:
            matchType: EXPRESSION
            value: value
        type: DESKTOP
      properties:
        os:
          $ref: '#/components/schemas/PlatformConditionEvaluatorPlatformOperatingSystem'
        type:
          enum:
          - DESKTOP
          - MOBILE
          - OTHER
          - ANY
          type: string
      type: object
      x-okta-tags:
      - Policy
    PlatformConditionEvaluatorPlatformOperatingSystem:
      example:
        expression: expression
        type: ANDROID
        version:
          matchType: EXPRESSION
          value: value
      properties:
        version:
          $ref: '#/components/schemas/PlatformConditionEvaluatorPlatformOperatingSystemVersion'
        expression:
          type: string
        type:
          enum:
          - ANDROID
          - IOS
          - WINDOWS
          - OSX
          - OTHER
          - ANY
          type: string
      type: object
      x-okta-tags:
      - Policy
    PlatformConditionEvaluatorPlatformOperatingSystemVersion:
      example:
        matchType: EXPRESSION
        value: value
      properties:
        matchType:
          enum:
          - EXPRESSION
          - SEMVER
          type: string
        value:
          type: string
      type: object
      x-okta-tags:
      - Policy
    PlatformPolicyRuleCondition:
      example:
        include:
        - os:
            expression: expression
            type: ANDROID
            version:
              matchType: EXPRESSION
              value: value
          type: DESKTOP
        - os:
            expression: expression
            type: ANDROID
            version:
              matchType: EXPRESSION
              value: value
          type: DESKTOP
        exclude:
        - os:
            expression: expression
            type: ANDROID
            version:
              matchType: EXPRESSION
              value: value
          type: DESKTOP
        - os:
            expression: expression
            type: ANDROID
            version:
              matchType: EXPRESSION
              value: value
          type: DESKTOP
      properties:
        exclude:
          items:
            $ref: '#/components/schemas/PlatformConditionEvaluatorPlatform'
          type: array
        include:
          items:
            $ref: '#/components/schemas/PlatformConditionEvaluatorPlatform'
          type: array
      type: object
      x-okta-tags:
      - Policy
    Policy:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        system: true
        _embedded:
          key: "{}"
        _links:
          key: "{}"
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        description: description
        id: id
        conditions:
          app:
            include:
            - name: name
              id: id
              type: APP_TYPE
            - name: name
              id: id
              type: APP_TYPE
            exclude:
            - name: name
              id: id
              type: APP_TYPE
            - name: name
              id: id
              type: APP_TYPE
          authContext:
            authType: ANY
          clients:
            include:
            - include
            - include
          userStatus:
            value: ACTIVE
          groups:
            include:
            - include
            - include
            exclude:
            - exclude
            - exclude
          people:
            groups:
              include:
              - include
              - include
              exclude:
              - exclude
              - exclude
            users:
              include:
              - include
              - include
              exclude:
              - exclude
              - exclude
          identityProvider:
            idpIds:
            - idpIds
            - idpIds
            provider: ANY
          platform:
            include:
            - os:
                expression: expression
                type: ANDROID
                version:
                  matchType: EXPRESSION
                  value: value
              type: DESKTOP
            - os:
                expression: expression
                type: ANDROID
                version:
                  matchType: EXPRESSION
                  value: value
              type: DESKTOP
            exclude:
            - os:
                expression: expression
                type: ANDROID
                version:
                  matchType: EXPRESSION
                  value: value
              type: DESKTOP
            - os:
                expression: expression
                type: ANDROID
                version:
                  matchType: EXPRESSION
                  value: value
              type: DESKTOP
          users:
            userLifecycleAttribute:
              matchingValue: matchingValue
              attributeName: attributeName
            include:
            - include
            - include
            passwordExpiration:
              number: 5
              unit: unit
            lifecycleExpiration:
              number: 1
              unit: unit
              lifecycleStatus: lifecycleStatus
            inactivity:
              number: 6
              unit: unit
            exclude:
            - exclude
            - exclude
          network:
            include:
            - include
            - include
            connection: ANYWHERE
            exclude:
            - exclude
            - exclude
          authProvider:
            include:
            - include
            - include
            provider: ACTIVE_DIRECTORY
          beforeScheduledAction:
            duration:
              number: 0
              unit: unit
            lifecycleAction:
              status: ACTIVE
          mdmEnrollment:
            blockNonSafeAndroid: true
            enrollment: OMM
          grantTypes:
            include:
            - include
            - include
          userIdentifier:
            patterns:
            - matchType: SUFFIX
              value: value
            - matchType: SUFFIX
              value: value
            attribute: attribute
            type: IDENTIFIER
          context:
            expression: expression
          risk:
            behaviors:
            - behaviors
            - behaviors
          riskScore:
            level: level
          scopes:
            include:
            - include
            - include
          device:
            rooted: true
            trustLevel: ANY
            migrated: true
            platform:
              types:
              - IOS
              - IOS
              supportedMDMFrameworks:
              - AFW
              - AFW
          apps:
            include:
            - include
            - include
            exclude:
            - exclude
            - exclude
        priority: 0
        type: null
        status: ACTIVE
      properties:
        description:
          type: string
        _embedded:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        conditions:
          $ref: '#/components/schemas/PolicyRuleConditions'
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        priority:
          type: integer
        status:
          enum:
          - ACTIVE
          - INACTIVE
          type: string
        system:
          type: boolean
        type:
          $ref: '#/components/schemas/PolicyType'
      type: object
      x-okta-crud:
      - operationId: getPolicy
        alias: read
        arguments:
        - dest: policyId
          src: id
      - operationId: updatePolicy
        alias: update
        arguments:
        - dest: policyId
          src: id
        - dest: policy
          self: true
      - operationId: deletePolicy
        alias: delete
        arguments:
        - dest: policyId
          src: id
      x-okta-operations:
      - operationId: activatePolicy
        alias: activate
        arguments:
        - dest: policyId
          src: id
      - operationId: deactivatePolicy
        alias: deactivate
        arguments:
        - dest: policyId
          src: id
      - operationId: listPolicyRules
        alias: listPolicyRules
        arguments:
        - dest: policyId
          src: id
      - operationId: createPolicyRule
        alias: createRule
        arguments:
        - dest: policyId
          src: id
      - operationId: getPolicyRule
        alias: getPolicyRule
        arguments:
        - dest: policyId
          src: id
      x-okta-tags:
      - Policy
      x-openapi-v3-discriminator:
        mapping:
          ACCESS_POLICY: '#/definitions/AccessPolicy'
          IDP_DISCOVERY: '#/definitions/IdentityProviderPolicy'
          MFA_ENROLL: '#/definitions/MultifactorEnrollmentPolicy'
          OAUTH_AUTHORIZATION_POLICY: '#/definitions/OAuthAuthorizationPolicy'
          OKTA_SIGN_ON: '#/definitions/OktaSignOnPolicy'
          PASSWORD: '#/definitions/PasswordPolicy'
          PROFILE_ENROLLMENT: '#/definitions/ProfileEnrollmentPolicy'
        propertyName: type
      x-konfig-is-used-in-successful-response: true
    PolicyAccountLink:
      example:
        filter:
          groups:
            include:
            - include
            - include
        action: AUTO
      properties:
        action:
          enum:
          - AUTO
          - DISABLED
          type: string
        filter:
          $ref: '#/components/schemas/PolicyAccountLinkFilter'
      type: object
      x-okta-tags:
      - Policy
    PolicyAccountLinkFilter:
      example:
        groups:
          include:
          - include
          - include
      properties:
        groups:
          $ref: '#/components/schemas/PolicyAccountLinkFilterGroups'
      type: object
      x-okta-tags:
      - Policy
    PolicyAccountLinkFilterGroups:
      example:
        include:
        - include
        - include
      properties:
        include:
          items:
            type: string
          type: array
      type: object
      x-okta-tags:
      - Policy
    PolicyNetworkCondition:
      example:
        include:
        - include
        - include
        connection: ANYWHERE
        exclude:
        - exclude
        - exclude
      properties:
        connection:
          enum:
          - ANYWHERE
          - ZONE
          type: string
        exclude:
          items:
            type: string
          type: array
        include:
          items:
            type: string
          type: array
      type: object
      x-okta-tags:
      - Policy
    PolicyPeopleCondition:
      example:
        groups:
          include:
          - include
          - include
          exclude:
          - exclude
          - exclude
        users:
          include:
          - include
          - include
          exclude:
          - exclude
          - exclude
      properties:
        groups:
          $ref: '#/components/schemas/GroupCondition'
        users:
          $ref: '#/components/schemas/UserCondition'
      type: object
      x-okta-tags:
      - Policy
    PolicyRule:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        system: false
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        id: id
        conditions:
          app:
            include:
            - name: name
              id: id
              type: APP_TYPE
            - name: name
              id: id
              type: APP_TYPE
            exclude:
            - name: name
              id: id
              type: APP_TYPE
            - name: name
              id: id
              type: APP_TYPE
          authContext:
            authType: ANY
          clients:
            include:
            - include
            - include
          userStatus:
            value: ACTIVE
          groups:
            include:
            - include
            - include
            exclude:
            - exclude
            - exclude
          people:
            groups:
              include:
              - include
              - include
              exclude:
              - exclude
              - exclude
            users:
              include:
              - include
              - include
              exclude:
              - exclude
              - exclude
          identityProvider:
            idpIds:
            - idpIds
            - idpIds
            provider: ANY
          platform:
            include:
            - os:
                expression: expression
                type: ANDROID
                version:
                  matchType: EXPRESSION
                  value: value
              type: DESKTOP
            - os:
                expression: expression
                type: ANDROID
                version:
                  matchType: EXPRESSION
                  value: value
              type: DESKTOP
            exclude:
            - os:
                expression: expression
                type: ANDROID
                version:
                  matchType: EXPRESSION
                  value: value
              type: DESKTOP
            - os:
                expression: expression
                type: ANDROID
                version:
                  matchType: EXPRESSION
                  value: value
              type: DESKTOP
          users:
            userLifecycleAttribute:
              matchingValue: matchingValue
              attributeName: attributeName
            include:
            - include
            - include
            passwordExpiration:
              number: 5
              unit: unit
            lifecycleExpiration:
              number: 1
              unit: unit
              lifecycleStatus: lifecycleStatus
            inactivity:
              number: 6
              unit: unit
            exclude:
            - exclude
            - exclude
          network:
            include:
            - include
            - include
            connection: ANYWHERE
            exclude:
            - exclude
            - exclude
          authProvider:
            include:
            - include
            - include
            provider: ACTIVE_DIRECTORY
          beforeScheduledAction:
            duration:
              number: 0
              unit: unit
            lifecycleAction:
              status: ACTIVE
          mdmEnrollment:
            blockNonSafeAndroid: true
            enrollment: OMM
          grantTypes:
            include:
            - include
            - include
          userIdentifier:
            patterns:
            - matchType: SUFFIX
              value: value
            - matchType: SUFFIX
              value: value
            attribute: attribute
            type: IDENTIFIER
          context:
            expression: expression
          risk:
            behaviors:
            - behaviors
            - behaviors
          riskScore:
            level: level
          scopes:
            include:
            - include
            - include
          device:
            rooted: true
            trustLevel: ANY
            migrated: true
            platform:
              types:
              - IOS
              - IOS
              supportedMDMFrameworks:
              - AFW
              - AFW
          apps:
            include:
            - include
            - include
            exclude:
            - exclude
            - exclude
        priority: 6
        type: SIGN_ON
        actions:
          passwordChange:
            access: ALLOW
          idp:
            providers:
            - id: id
              type: type
            - id: id
              type: type
          selfServicePasswordReset:
            access: ALLOW
          selfServiceUnlock:
            access: ALLOW
          signon:
            rememberDeviceByDefault: false
            access: ALLOW
            factorPromptMode: ALWAYS
            session:
              maxSessionLifetimeMinutes: 0
              usePersistentCookie: false
              maxSessionIdleMinutes: 120
            factorLifetime: 0
            requireFactor: false
          enroll:
            self: null
        status: ACTIVE
      properties:
        actions:
          $ref: '#/components/schemas/PolicyRuleActions'
        conditions:
          $ref: '#/components/schemas/PolicyRuleConditions'
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        priority:
          type: integer
        status:
          default: ACTIVE
          enum:
          - ACTIVE
          - INACTIVE
          example: ACTIVE
          type: string
          x-konfig-original-example: ACTIVE
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PolicyRule-properties-status
        system:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PolicyRule-properties-system
        type:
          enum:
          - SIGN_ON
          - PASSWORD
          type: string
      type: object
      x-okta-crud:
      - operationId: updatePolicyRule
        alias: update
        arguments:
        - dest: ruleId
          src: id
        - dest: policyRule
          self: true
        - dest: policyId
          parentSrc: id
      - operationId: deletePolicyRule
        alias: delete
        arguments:
        - dest: ruleId
          src: id
        - dest: policyId
          parentSrc: policyId
      x-okta-operations:
      - operationId: activatePolicyRule
        alias: activate
        arguments:
        - dest: ruleId
          src: id
        - dest: policyId
          parentSrc: policyId
      - operationId: deactivatePolicyRule
        alias: deactivate
        arguments:
        - dest: ruleId
          src: id
        - dest: policyId
          parentSrc: policyId
      x-okta-tags:
      - Policy
      x-openapi-v3-discriminator:
        mapping:
          ACCESS_POLICY: '#/definitions/AccessPolicyRule'
          PASSWORD: '#/definitions/PasswordPolicyRule'
          PROFILE_ENROLLMENT: '#/definitions/ProfileEnrollmentPolicyRule'
          SIGN_ON: '#/definitions/OktaSignOnPolicyRule'
        propertyName: type
      x-konfig-is-used-in-successful-response: true
    PolicyRuleActions:
      example:
        passwordChange:
          access: ALLOW
        idp:
          providers:
          - id: id
            type: type
          - id: id
            type: type
        selfServicePasswordReset:
          access: ALLOW
        selfServiceUnlock:
          access: ALLOW
        signon:
          rememberDeviceByDefault: false
          access: ALLOW
          factorPromptMode: ALWAYS
          session:
            maxSessionLifetimeMinutes: 0
            usePersistentCookie: false
            maxSessionIdleMinutes: 120
          factorLifetime: 0
          requireFactor: false
        enroll:
          self: null
      properties:
        enroll:
          $ref: '#/components/schemas/PolicyRuleActionsEnroll'
        idp:
          $ref: '#/components/schemas/IdpPolicyRuleAction'
        passwordChange:
          $ref: '#/components/schemas/PasswordPolicyRuleAction'
        selfServicePasswordReset:
          $ref: '#/components/schemas/PasswordPolicyRuleAction'
        selfServiceUnlock:
          $ref: '#/components/schemas/PasswordPolicyRuleAction'
        signon:
          $ref: '#/components/schemas/OktaSignOnPolicyRuleSignonActions'
      type: object
      x-okta-tags:
      - Policy
    PolicyRuleActionsEnroll:
      example:
        self: null
      properties:
        self:
          $ref: '#/components/schemas/PolicyRuleActionsEnrollSelf'
      type: object
      x-okta-tags:
      - Policy
    PolicyRuleActionsEnrollSelf:
      enum:
      - CHALLENGE
      - LOGIN
      - NEVER
      type: string
      x-okta-tags:
      - Policy
    PolicyRuleAuthContextCondition:
      example:
        authType: ANY
      properties:
        authType:
          enum:
          - ANY
          - RADIUS
          type: string
      type: object
      x-okta-tags:
      - Policy
    PolicyRuleConditions:
      example:
        app:
          include:
          - name: name
            id: id
            type: APP_TYPE
          - name: name
            id: id
            type: APP_TYPE
          exclude:
          - name: name
            id: id
            type: APP_TYPE
          - name: name
            id: id
            type: APP_TYPE
        authContext:
          authType: ANY
        clients:
          include:
          - include
          - include
        userStatus:
          value: ACTIVE
        groups:
          include:
          - include
          - include
          exclude:
          - exclude
          - exclude
        people:
          groups:
            include:
            - include
            - include
            exclude:
            - exclude
            - exclude
          users:
            include:
            - include
            - include
            exclude:
            - exclude
            - exclude
        identityProvider:
          idpIds:
          - idpIds
          - idpIds
          provider: ANY
        platform:
          include:
          - os:
              expression: expression
              type: ANDROID
              version:
                matchType: EXPRESSION
                value: value
            type: DESKTOP
          - os:
              expression: expression
              type: ANDROID
              version:
                matchType: EXPRESSION
                value: value
            type: DESKTOP
          exclude:
          - os:
              expression: expression
              type: ANDROID
              version:
                matchType: EXPRESSION
                value: value
            type: DESKTOP
          - os:
              expression: expression
              type: ANDROID
              version:
                matchType: EXPRESSION
                value: value
            type: DESKTOP
        users:
          userLifecycleAttribute:
            matchingValue: matchingValue
            attributeName: attributeName
          include:
          - include
          - include
          passwordExpiration:
            number: 5
            unit: unit
          lifecycleExpiration:
            number: 1
            unit: unit
            lifecycleStatus: lifecycleStatus
          inactivity:
            number: 6
            unit: unit
          exclude:
          - exclude
          - exclude
        network:
          include:
          - include
          - include
          connection: ANYWHERE
          exclude:
          - exclude
          - exclude
        authProvider:
          include:
          - include
          - include
          provider: ACTIVE_DIRECTORY
        beforeScheduledAction:
          duration:
            number: 0
            unit: unit
          lifecycleAction:
            status: ACTIVE
        mdmEnrollment:
          blockNonSafeAndroid: true
          enrollment: OMM
        grantTypes:
          include:
          - include
          - include
        userIdentifier:
          patterns:
          - matchType: SUFFIX
            value: value
          - matchType: SUFFIX
            value: value
          attribute: attribute
          type: IDENTIFIER
        context:
          expression: expression
        risk:
          behaviors:
          - behaviors
          - behaviors
        riskScore:
          level: level
        scopes:
          include:
          - include
          - include
        device:
          rooted: true
          trustLevel: ANY
          migrated: true
          platform:
            types:
            - IOS
            - IOS
            supportedMDMFrameworks:
            - AFW
            - AFW
        apps:
          include:
          - include
          - include
          exclude:
          - exclude
          - exclude
      properties:
        app:
          $ref: '#/components/schemas/AppAndInstancePolicyRuleCondition'
        apps:
          $ref: '#/components/schemas/AppInstancePolicyRuleCondition'
        authContext:
          $ref: '#/components/schemas/PolicyRuleAuthContextCondition'
        authProvider:
          $ref: '#/components/schemas/PasswordPolicyAuthenticationProviderCondition'
        beforeScheduledAction:
          $ref: '#/components/schemas/BeforeScheduledActionPolicyRuleCondition'
        clients:
          $ref: '#/components/schemas/ClientPolicyCondition'
        context:
          $ref: '#/components/schemas/ContextPolicyRuleCondition'
        device:
          $ref: '#/components/schemas/DevicePolicyRuleCondition'
        grantTypes:
          $ref: '#/components/schemas/GrantTypePolicyRuleCondition'
        groups:
          $ref: '#/components/schemas/GroupPolicyRuleCondition'
        identityProvider:
          $ref: '#/components/schemas/IdentityProviderPolicyRuleCondition'
        mdmEnrollment:
          $ref: '#/components/schemas/MDMEnrollmentPolicyRuleCondition'
        network:
          $ref: '#/components/schemas/PolicyNetworkCondition'
        people:
          $ref: '#/components/schemas/PolicyPeopleCondition'
        platform:
          $ref: '#/components/schemas/PlatformPolicyRuleCondition'
        risk:
          $ref: '#/components/schemas/RiskPolicyRuleCondition'
        riskScore:
          $ref: '#/components/schemas/RiskScorePolicyRuleCondition'
        scopes:
          $ref: '#/components/schemas/OAuth2ScopesMediationPolicyRuleCondition'
        userIdentifier:
          $ref: '#/components/schemas/UserIdentifierPolicyRuleCondition'
        userStatus:
          $ref: '#/components/schemas/UserStatusPolicyRuleCondition'
        users:
          $ref: '#/components/schemas/UserPolicyRuleCondition'
      type: object
      x-okta-tags:
      - Policy
    PolicySubject:
      example:
        filter: filter
        matchAttribute: matchAttribute
        matchType: null
        userNameTemplate:
          template: template
        format:
        - format
        - format
      properties:
        filter:
          type: string
        format:
          items:
            type: string
          type: array
        matchAttribute:
          type: string
        matchType:
          $ref: '#/components/schemas/PolicySubjectMatchType'
        userNameTemplate:
          $ref: '#/components/schemas/PolicyUserNameTemplate'
      type: object
      x-okta-tags:
      - Policy
    PolicySubjectMatchType:
      enum:
      - USERNAME
      - EMAIL
      - USERNAME_OR_EMAIL
      - CUSTOM_ATTRIBUTE
      type: string
      x-okta-tags:
      - Policy
    PolicyType:
      enum:
      - OAUTH_AUTHORIZATION_POLICY
      - OKTA_SIGN_ON
      - PASSWORD
      - IDP_DISCOVERY
      - PROFILE_ENROLLMENT
      - ACCESS_POLICY
      - MFA_ENROLL
      type: string
      x-okta-tags:
      - Policy
    PolicyUserNameTemplate:
      example:
        template: template
      properties:
        template:
          type: string
      type: object
      x-okta-tags:
      - Policy
    PossessionConstraint:
      properties:
        deviceBound:
          type: string
        hardwareProtection:
          type: string
        phishingResistant:
          type: string
        userPresence:
          type: string
      x-okta-parent: '#/definitions/AccessPolicyConstraint'
      x-okta-tags:
      - Policy
    PreRegistrationInlineHook:
      properties:
        inlineHookId:
          type: string
      type: object
      x-okta-tags:
      - Policy
    ProfileEnrollmentPolicy:
      x-okta-parent: '#/definitions/Policy'
      x-okta-tags:
      - Policy
    ProfileEnrollmentPolicyRule:
      properties:
        actions:
          $ref: '#/components/schemas/ProfileEnrollmentPolicyRuleActions'
        name:
          type: string
      type: object
      x-okta-parent: '#/definitions/PolicyRule'
      x-okta-tags:
      - Policy
    ProfileEnrollmentPolicyRuleAction:
      properties:
        access:
          type: string
        activationRequirements:
          $ref: '#/components/schemas/ProfileEnrollmentPolicyRuleActivationRequirement'
        preRegistrationInlineHooks:
          items:
            $ref: '#/components/schemas/PreRegistrationInlineHook'
          type: array
        profileAttributes:
          items:
            $ref: '#/components/schemas/ProfileEnrollmentPolicyRuleProfileAttribute'
          type: array
        targetGroupIds:
          items:
            type: string
          type: array
        uiSchemaId:
          type: string
        unknownUserAction:
          type: string
      type: object
      x-okta-tags:
      - Policy
    ProfileEnrollmentPolicyRuleActions:
      properties:
        profileEnrollment:
          $ref: '#/components/schemas/ProfileEnrollmentPolicyRuleAction'
      type: object
      x-okta-parent: '#/definitions/PolicyRuleActions'
      x-okta-tags:
      - Policy
    ProfileEnrollmentPolicyRuleActivationRequirement:
      properties:
        emailVerification:
          type: boolean
      type: object
      x-okta-tags:
      - Policy
    ProfileEnrollmentPolicyRuleProfileAttribute:
      properties:
        label:
          type: string
        name:
          type: string
        required:
          type: boolean
      type: object
      x-okta-tags:
      - Policy
    ProfileMapping:
      example:
        _links:
          key: "{}"
        id: id
        source:
          _links:
            key: "{}"
          name: name
          id: id
          type: type
        properties:
          key:
            expression: expression
            pushStatus: null
        target:
          _links:
            key: "{}"
          name: name
          id: id
          type: type
      properties:
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        id:
          readOnly: true
          type: string
        properties:
          additionalProperties:
            $ref: '#/components/schemas/ProfileMappingProperty'
          readOnly: true
          type: object
        source:
          $ref: '#/components/schemas/ProfileMappingSource'
        target:
          $ref: '#/components/schemas/ProfileMappingSource'
      type: object
      x-okta-crud:
      - operationId: getProfileMapping
        alias: read
        arguments:
        - dest: mappingId
          src: id
      - operationId: updateProfileMapping
        alias: update
        arguments:
        - dest: mappingId
          src: id
      x-okta-tags:
      - ProfileMapping
      x-konfig-is-used-in-successful-response: true
    ProfileMappingProperty:
      example:
        expression: expression
        pushStatus: null
      properties:
        expression:
          type: string
        pushStatus:
          $ref: '#/components/schemas/ProfileMappingPropertyPushStatus'
      type: object
      x-okta-tags:
      - ProfileMapping
    ProfileMappingPropertyPushStatus:
      enum:
      - PUSH
      - DONT_PUSH
      type: object
      x-okta-tags:
      - ProfileMapping
    ProfileMappingSource:
      example:
        _links:
          key: "{}"
        name: name
        id: id
        type: type
      properties:
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        id:
          readOnly: true
          type: string
        name:
          readOnly: true
          type: string
        type:
          readOnly: true
          type: string
      type: object
      x-okta-tags:
      - ProfileMapping
    ProfileSettingObject:
      example:
        status: null
      properties:
        status:
          $ref: '#/components/schemas/EnabledStatus'
      type: object
      x-okta-tags:
      - Application
    Protocol:
      example:
        algorithms:
          request:
            signature:
              scope: RESPONSE
              algorithm: algorithm
          response:
            signature:
              scope: RESPONSE
              algorithm: algorithm
        relayState:
          format: null
        settings:
          nameFormat: nameFormat
        endpoints:
          acs:
            destination: destination
            binding: HTTP-POST
            type: INSTANCE
            url: url
          authorization:
            destination: destination
            binding: HTTP-POST
            type: INSTANCE
            url: url
          userInfo:
            destination: destination
            binding: HTTP-POST
            type: INSTANCE
            url: url
          metadata:
            destination: destination
            binding: HTTP-POST
            type: INSTANCE
            url: url
          jwks:
            destination: destination
            binding: HTTP-POST
            type: INSTANCE
            url: url
          slo:
            destination: destination
            binding: HTTP-POST
            type: INSTANCE
            url: url
          sso:
            destination: destination
            binding: HTTP-POST
            type: INSTANCE
            url: url
          token:
            destination: destination
            binding: HTTP-POST
            type: INSTANCE
            url: url
        credentials:
          trust:
            revocation: CRL
            audience: audience
            revocationCacheLifetime: 6
            kid: kid
            issuer: issuer
          client:
            client_secret: client_secret
            client_id: client_id
          signing:
            privateKey: privateKey
            kid: kid
            teamId: teamId
        scopes:
        - scopes
        - scopes
        type: SAML2
        issuer:
          destination: destination
          binding: HTTP-POST
          type: INSTANCE
          url: url
      properties:
        algorithms:
          $ref: '#/components/schemas/ProtocolAlgorithms'
        credentials:
          $ref: '#/components/schemas/IdentityProviderCredentials'
        endpoints:
          $ref: '#/components/schemas/ProtocolEndpoints'
        issuer:
          $ref: '#/components/schemas/ProtocolEndpoint'
        relayState:
          $ref: '#/components/schemas/ProtocolRelayState'
        scopes:
          items:
            type: string
          type: array
        settings:
          $ref: '#/components/schemas/ProtocolSettings'
        type:
          enum:
          - SAML2
          - OIDC
          - OAUTH2
          - MTLS
          type: string
      type: object
      x-okta-tags:
      - IdentityProvider
    ProtocolAlgorithmType:
      example:
        signature:
          scope: RESPONSE
          algorithm: algorithm
      properties:
        signature:
          $ref: '#/components/schemas/ProtocolAlgorithmTypeSignature'
      type: object
      x-okta-tags:
      - IdentityProvider
    ProtocolAlgorithmTypeSignature:
      example:
        scope: RESPONSE
        algorithm: algorithm
      properties:
        algorithm:
          type: string
        scope:
          enum:
          - RESPONSE
          - TOKEN
          - ANY
          - REQUEST
          - NONE
          type: string
      type: object
      x-okta-tags:
      - IdentityProvider
    ProtocolAlgorithms:
      example:
        request:
          signature:
            scope: RESPONSE
            algorithm: algorithm
        response:
          signature:
            scope: RESPONSE
            algorithm: algorithm
      properties:
        request:
          $ref: '#/components/schemas/ProtocolAlgorithmType'
        response:
          $ref: '#/components/schemas/ProtocolAlgorithmType'
      type: object
      x-okta-tags:
      - IdentityProvider
    ProtocolEndpoint:
      example:
        destination: destination
        binding: HTTP-POST
        type: INSTANCE
        url: url
      properties:
        binding:
          enum:
          - HTTP-POST
          - HTTP-REDIRECT
          type: string
        destination:
          type: string
        type:
          enum:
          - INSTANCE
          - ORG
          type: string
        url:
          type: string
      type: object
      x-okta-tags:
      - IdentityProvider
    ProtocolEndpoints:
      example:
        acs:
          destination: destination
          binding: HTTP-POST
          type: INSTANCE
          url: url
        authorization:
          destination: destination
          binding: HTTP-POST
          type: INSTANCE
          url: url
        userInfo:
          destination: destination
          binding: HTTP-POST
          type: INSTANCE
          url: url
        metadata:
          destination: destination
          binding: HTTP-POST
          type: INSTANCE
          url: url
        jwks:
          destination: destination
          binding: HTTP-POST
          type: INSTANCE
          url: url
        slo:
          destination: destination
          binding: HTTP-POST
          type: INSTANCE
          url: url
        sso:
          destination: destination
          binding: HTTP-POST
          type: INSTANCE
          url: url
        token:
          destination: destination
          binding: HTTP-POST
          type: INSTANCE
          url: url
      properties:
        acs:
          $ref: '#/components/schemas/ProtocolEndpoint'
        authorization:
          $ref: '#/components/schemas/ProtocolEndpoint'
        jwks:
          $ref: '#/components/schemas/ProtocolEndpoint'
        metadata:
          $ref: '#/components/schemas/ProtocolEndpoint'
        slo:
          $ref: '#/components/schemas/ProtocolEndpoint'
        sso:
          $ref: '#/components/schemas/ProtocolEndpoint'
        token:
          $ref: '#/components/schemas/ProtocolEndpoint'
        userInfo:
          $ref: '#/components/schemas/ProtocolEndpoint'
      type: object
      x-okta-tags:
      - IdentityProvider
    ProtocolRelayState:
      example:
        format: null
      properties:
        format:
          $ref: '#/components/schemas/ProtocolRelayStateFormat'
      type: object
      x-okta-tags:
      - IdentityProvider
    ProtocolRelayStateFormat:
      enum:
      - OPAQUE
      - FROM_URL
      type: string
      x-okta-tags:
      - IdentityProvider
    ProtocolSettings:
      example:
        nameFormat: nameFormat
      properties:
        nameFormat:
          type: string
      type: object
      x-okta-tags:
      - IdentityProvider
    Provisioning:
      example:
        action: AUTO
        groups:
          filter:
          - filter
          - filter
          assignments:
          - assignments
          - assignments
          sourceAttributeName: sourceAttributeName
          action: NONE
        profileMaster: true
        conditions:
          deprovisioned:
            action: NONE
          suspended:
            action: NONE
      properties:
        action:
          enum:
          - AUTO
          - CALLOUT
          - DISABLED
          type: string
        conditions:
          $ref: '#/components/schemas/ProvisioningConditions'
        groups:
          $ref: '#/components/schemas/ProvisioningGroups'
        profileMaster:
          type: boolean
      type: object
      x-okta-tags:
      - IdentityProvider
    ProvisioningConditions:
      example:
        deprovisioned:
          action: NONE
        suspended:
          action: NONE
      properties:
        deprovisioned:
          $ref: '#/components/schemas/ProvisioningDeprovisionedCondition'
        suspended:
          $ref: '#/components/schemas/ProvisioningSuspendedCondition'
      type: object
      x-okta-tags:
      - IdentityProvider
    ProvisioningConnection:
      example:
        _links:
          key: "{}"
        authScheme: null
        status: null
      properties:
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        authScheme:
          $ref: '#/components/schemas/ProvisioningConnectionAuthScheme'
        status:
          $ref: '#/components/schemas/ProvisioningConnectionStatus'
      type: object
      x-okta-operations:
      - operationId: getDefaultProvisioningConnectionForApplication
        alias: getDefaultProvisioningConnectionForApplication
      - operationId: activateDefaultProvisioningConnectionForApplication
        alias: activateDefaultProvisioningConnectionForApplication
      - operationId: deactivateDefaultProvisioningConnectionForApplication
        alias: deactivateDefaultProvisioningConnectionForApplication
      x-okta-tags:
      - Application
      x-konfig-is-used-in-successful-response: true
    ProvisioningConnectionAuthScheme:
      enum:
      - TOKEN
      - UNKNOWN
      type: string
      x-okta-tags:
      - Application
    ProvisioningConnectionProfile:
      example:
        authScheme: null
        token: token
      properties:
        authScheme:
          $ref: '#/components/schemas/ProvisioningConnectionAuthScheme'
        token:
          type: string
      type: object
      x-okta-operations:
      - operationId: setDefaultProvisioningConnectionForApplication
        alias: setDefaultProvisioningConnectionForApplication
      x-okta-tags:
      - Application
    ProvisioningConnectionRequest:
      example:
        profile:
          authScheme: null
          token: token
      properties:
        profile:
          $ref: '#/components/schemas/ProvisioningConnectionProfile'
      type: object
      x-okta-tags:
      - Application
    ProvisioningConnectionStatus:
      enum:
      - DISABLED
      - ENABLED
      - UNKNOWN
      type: string
      x-okta-tags:
      - Application
    ProvisioningDeprovisionedCondition:
      example:
        action: NONE
      properties:
        action:
          enum:
          - NONE
          - REACTIVATE
          type: string
      type: object
      x-okta-tags:
      - IdentityProvider
    ProvisioningGroups:
      example:
        filter:
        - filter
        - filter
        assignments:
        - assignments
        - assignments
        sourceAttributeName: sourceAttributeName
        action: NONE
      properties:
        action:
          enum:
          - NONE
          - APPEND
          - SYNC
          - ASSIGN
          type: string
        assignments:
          items:
            type: string
          type: array
        filter:
          items:
            type: string
          type: array
        sourceAttributeName:
          type: string
      type: object
      x-okta-tags:
      - IdentityProvider
    ProvisioningSuspendedCondition:
      example:
        action: NONE
      properties:
        action:
          enum:
          - NONE
          - UNSUSPEND
          type: string
      type: object
      x-okta-tags:
      - IdentityProvider
    PushUserFactor:
      properties:
        expiresAt:
          format: date-time
          type: string
        factorResult:
          $ref: '#/components/schemas/FactorResultType'
        profile:
          $ref: '#/components/schemas/PushUserFactorProfile'
      x-okta-parent: '#/definitions/UserFactor'
      x-okta-tags:
      - UserFactor
    PushUserFactorProfile:
      properties:
        version:
          type: string
        credentialId:
          type: string
        deviceToken:
          type: string
        deviceType:
          type: string
        name:
          type: string
        platform:
          type: string
      x-okta-tags:
      - UserFactor
    RecoveryQuestionCredential:
      example:
        answer: answer
        question: question
      properties:
        answer:
          type: string
        question:
          type: string
      type: object
      x-okta-tags:
      - User
    RequiredEnum:
      enum:
      - ALWAYS
      - HIGH_RISK_ONLY
      - NEVER
      type: string
      x-okta-tags:
      - Authenticator
    ResetPasswordToken:
      example:
        resetPasswordUrl: resetPasswordUrl
      properties:
        resetPasswordUrl:
          readOnly: true
          type: string
      type: object
      x-okta-tags:
      - User
      x-konfig-is-used-in-successful-response: true
    ResponseLinks:
      example:
        _links:
          key: "{}"
      properties:
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
      type: object
      x-okta-tags:
      - User
    RiskPolicyRuleCondition:
      example:
        behaviors:
        - behaviors
        - behaviors
      properties:
        behaviors:
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
      x-okta-tags:
      - Policy
    RiskScorePolicyRuleCondition:
      example:
        level: level
      properties:
        level:
          type: string
      type: object
      x-okta-tags:
      - Policy
    Role:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        _embedded:
          key: "{}"
        _links:
          key: "{}"
        created: 2000-01-23T04:56:07.000+00:00
        description: description
        id: id
        label: label
        type: null
        assignmentType: null
        status: null
      properties:
        description:
          type: string
        _embedded:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        assignmentType:
          $ref: '#/components/schemas/RoleAssignmentType'
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        label:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        status:
          $ref: '#/components/schemas/RoleStatus'
        type:
          $ref: '#/components/schemas/RoleType'
      type: object
      x-okta-operations:
      - operationId: addGroupTargetToGroupAdministratorRoleForGroup
        alias: addAdminGroupTarget
        arguments:
        - dest: roleId
          src: id
        - dest: groupId
          parentSrc: id
      - operationId: addApplicationInstanceTargetToAppAdminRoleGivenToGroup
        alias: addAppInstanceTargetToAdminRole
        arguments:
        - dest: roleId
          src: id
        - dest: groupId
          parentSrc: id
      - operationId: addApplicationTargetToAdminRoleGivenToGroup
        alias: addAppTargetToAdminRole
        arguments:
        - dest: roleId
          src: id
        - dest: groupId
          parentSrc: id
      - operationId: addAllAppsAsTargetToRole
        alias: addAllAppsAsTargetToRole
        arguments:
        - dest: roleId
          src: id
        - dest: userId
          parentSrc: id
      - operationId: addApplicationTargetToAppAdminRoleForUser
        alias: addAppTargetToAppAdminRoleForUser
        arguments:
        - dest: roleId
          src: id
        - dest: userId
          parentSrc: id
      - operationId: addApplicationTargetToAdminRoleForUser
        alias: addAppTargetToAdminRoleForUser
        arguments:
        - dest: roleId
          src: id
        - dest: userId
          parentSrc: id
      x-okta-tags:
      - User
      x-konfig-is-used-in-successful-response: true
    RoleAssignmentType:
      enum:
      - GROUP
      - USER
      type: string
      x-okta-tags:
      - Role
    RoleStatus:
      enum:
      - ACTIVE
      - INACTIVE
      type: string
      x-okta-tags:
      - User
    RoleType:
      enum:
      - SUPER_ADMIN
      - ORG_ADMIN
      - APP_ADMIN
      - USER_ADMIN
      - HELP_DESK_ADMIN
      - READ_ONLY_ADMIN
      - MOBILE_ADMIN
      - API_ACCESS_MANAGEMENT_ADMIN
      - REPORT_ADMIN
      - GROUP_MEMBERSHIP_ADMIN
      - CUSTOM
      type: string
      x-okta-tags:
      - Role
    SamlApplication:
      properties:
        settings:
          $ref: '#/components/schemas/SamlApplicationSettings'
      x-okta-parent: '#/definitions/Application'
      x-okta-tags:
      - Application
      x-openapi-v3-discriminator:
        mapping:
          okta_org2org: '#/definitions/Org2OrgApplication'
        propertyName: name
    SamlApplicationSettings:
      properties:
        signOn:
          $ref: '#/components/schemas/SamlApplicationSettingsSignOn'
      x-okta-parent: '#/definitions/ApplicationSettings'
      x-okta-tags:
      - Application
    SamlApplicationSettingsSignOn:
      properties:
        acsEndpoints:
          items:
            $ref: '#/components/schemas/AcsEndpoint'
          type: array
        allowMultipleAcsEndpoints:
          type: boolean
        assertionSigned:
          type: boolean
        attributeStatements:
          items:
            $ref: '#/components/schemas/SamlAttributeStatement'
          type: array
        audience:
          type: string
        audienceOverride:
          type: string
        authnContextClassRef:
          type: string
        defaultRelayState:
          type: string
        destination:
          type: string
        destinationOverride:
          type: string
        digestAlgorithm:
          type: string
        honorForceAuthn:
          type: boolean
        idpIssuer:
          type: string
        inlineHooks:
          items:
            $ref: '#/components/schemas/SignOnInlineHook'
          type: array
        recipient:
          type: string
        recipientOverride:
          type: string
        requestCompressed:
          type: boolean
        responseSigned:
          type: boolean
        samlSignedRequestEnabled:
          type: boolean
        signatureAlgorithm:
          type: string
        slo:
          $ref: '#/components/schemas/SingleLogout'
        spCertificate:
          $ref: '#/components/schemas/SpCertificate'
        spIssuer:
          type: string
        ssoAcsUrl:
          type: string
        ssoAcsUrlOverride:
          type: string
        subjectNameIdFormat:
          type: string
        subjectNameIdTemplate:
          type: string
      x-okta-tags:
      - Application
    SamlAttributeStatement:
      properties:
        filterType:
          type: string
        filterValue:
          type: string
        name:
          type: string
        namespace:
          type: string
        type:
          type: string
        values:
          items:
            type: string
          type: array
      x-okta-tags:
      - Application
    ScheduledUserLifecycleAction:
      example:
        status: ACTIVE
      properties:
        status:
          enum:
          - ACTIVE
          - INACTIVE
          - PENDING
          - DELETED
          - EXPIRED_PASSWORD
          - ACTIVATING
          - SUSPENDED
          - DELETING
          type: string
      type: object
      x-okta-tags:
      - Policy
    SchemeApplicationCredentials:
      properties:
        password:
          $ref: '#/components/schemas/PasswordCredential'
        revealPassword:
          type: boolean
        scheme:
          $ref: '#/components/schemas/ApplicationCredentialsScheme'
        signing:
          $ref: '#/components/schemas/ApplicationCredentialsSigning'
        userName:
          type: string
      x-okta-parent: '#/definitions/ApplicationCredentials'
      x-okta-tags:
      - Application
    Scope:
      example:
        stringValue: stringValue
        allowedOktaApps:
        - null
        - null
        type: null
      properties:
        allowedOktaApps:
          items:
            $ref: '#/components/schemas/IframeEmbedScopeAllowedApps'
          type: array
        stringValue:
          type: string
        type:
          $ref: '#/components/schemas/ScopeType'
      type: object
      x-okta-tags:
      - Role
    ScopeType:
      enum:
      - CORS
      - REDIRECT
      - IFRAME_EMBED
      type: string
      x-okta-tags:
      - Role
    SecurePasswordStoreApplication:
      properties:
        credentials:
          $ref: '#/components/schemas/SchemeApplicationCredentials'
        name:
          default: template_sps
        settings:
          $ref: '#/components/schemas/SecurePasswordStoreApplicationSettings'
      x-okta-defined-as:
        name: template_sps
      x-okta-parent: '#/definitions/Application'
      x-okta-tags:
      - Application
    SecurePasswordStoreApplicationSettings:
      properties:
        app:
          $ref: '#/components/schemas/SecurePasswordStoreApplicationSettingsApplication'
      x-okta-parent: '#/definitions/ApplicationSettings'
      x-okta-tags:
      - Application
    SecurePasswordStoreApplicationSettingsApplication:
      properties:
        optionalField1:
          type: string
        optionalField1Value:
          type: string
        optionalField2:
          type: string
        optionalField2Value:
          type: string
        optionalField3:
          type: string
        optionalField3Value:
          type: string
        passwordField:
          type: string
        url:
          type: string
        usernameField:
          type: string
      x-okta-parent: '#/definitions/ApplicationSettingsApplication'
      x-okta-tags:
      - Application
    SecurityQuestion:
      example:
        answer: answer
        question: question
        questionText: questionText
      properties:
        answer:
          type: string
        question:
          type: string
        questionText:
          type: string
      x-okta-tags:
      - UserFactor
    SecurityQuestionUserFactor:
      properties:
        profile:
          $ref: '#/components/schemas/SecurityQuestionUserFactorProfile'
      x-okta-parent: '#/definitions/UserFactor'
      x-okta-tags:
      - UserFactor
    SecurityQuestionUserFactorProfile:
      properties:
        answer:
          type: string
        question:
          type: string
        questionText:
          type: string
      x-okta-tags:
      - UserFactor
    SeedEnum:
      enum:
      - OKTA
      - RANDOM
      type: string
      x-okta-tags:
      - Application
    Session:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        lastFactorVerification: 2000-01-23T04:56:07.000+00:00
        idp:
          id: id
          type: null
        _links:
          key: "{}"
        amr:
        - null
        - null
        id: id
        login: login
        userId: userId
        expiresAt: 2000-01-23T04:56:07.000+00:00
        lastPasswordVerification: 2000-01-23T04:56:07.000+00:00
        status: null
      properties:
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        amr:
          items:
            $ref: '#/components/schemas/SessionAuthenticationMethod'
          readOnly: true
          type: array
        createdAt:
          format: date-time
          readOnly: true
          type: string
        expiresAt:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        idp:
          $ref: '#/components/schemas/SessionIdentityProvider'
        lastFactorVerification:
          format: date-time
          readOnly: true
          type: string
        lastPasswordVerification:
          format: date-time
          readOnly: true
          type: string
        login:
          readOnly: true
          type: string
        status:
          $ref: '#/components/schemas/SessionStatus'
        userId:
          readOnly: true
          type: string
      type: object
      x-okta-crud:
      - operationId: getSession
        alias: read
        arguments:
        - dest: sessionId
          src: id
      - operationId: endSession
        alias: delete
        arguments:
        - dest: sessionId
          src: id
      x-okta-operations:
      - operationId: refreshSession
        alias: refresh
        arguments:
        - dest: sessionId
          src: id
      x-okta-tags:
      - Session
      x-konfig-is-used-in-successful-response: true
    SessionAuthenticationMethod:
      enum:
      - pwd
      - swk
      - hwk
      - otp
      - sms
      - tel
      - geo
      - fpt
      - kba
      - mfa
      - mca
      - sc
      type: string
      x-okta-tags:
      - Session
    SessionIdentityProvider:
      example:
        id: id
        type: null
      properties:
        id:
          readOnly: true
          type: string
        type:
          $ref: '#/components/schemas/SessionIdentityProviderType'
      type: object
      x-okta-tags:
      - Session
    SessionIdentityProviderType:
      enum:
      - ACTIVE_DIRECTORY
      - LDAP
      - OKTA
      - FEDERATION
      - SOCIAL
      type: string
      x-okta-tags:
      - Session
    SessionStatus:
      enum:
      - ACTIVE
      - MFA_ENROLL
      - MFA_REQUIRED
      type: string
      x-okta-tags:
      - Session
    SignInPageTouchPointVariant:
      enum:
      - OKTA_DEFAULT
      - BACKGROUND_SECONDARY_COLOR
      - BACKGROUND_IMAGE
      type: string
      x-okta-tags:
      - Brand
    SignOnInlineHook:
      properties:
        id:
          type: string
      x-okta-tags:
      - Application
    SingleLogout:
      properties:
        enabled:
          type: boolean
        issuer:
          type: string
        logoutUrl:
          type: string
      x-okta-tags:
      - Application
    SmsTemplate:
      example:
        template: template
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        created: 2000-01-23T04:56:07.000+00:00
        translations: "{}"
        name: name
        id: id
        type: null
      properties:
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        template:
          type: string
        translations:
          type: object
          x-okta-extensible: true
          x-okta-tags:
          - Template
        type:
          $ref: '#/components/schemas/SmsTemplateType'
      type: object
      x-okta-crud:
      - operationId: createSmsTemplate
        alias: create
        arguments:
        - dest: smsTemplate
          self: true
      - operationId: getSmsTemplate
        alias: read
        arguments: []
      - operationId: updateSmsTemplate
        alias: update
        arguments:
        - dest: templateId
          src: id
        - dest: smsTemplate
          self: true
      - operationId: deleteSmsTemplate
        alias: delete
        arguments:
        - dest: templateId
          src: id
      x-okta-operations:
      - operationId: partialUpdateSmsTemplate
        alias: partialUpdate
        arguments:
        - dest: templateId
          src: id
        - dest: smsTemplate
          self: true
      x-okta-tags:
      - Template
      x-konfig-is-used-in-successful-response: true
    SmsTemplateTranslations:
      type: object
      x-okta-extensible: true
      x-okta-tags:
      - Template
    SmsTemplateType:
      enum:
      - SMS_VERIFY_CODE
      type: string
      x-okta-tags:
      - Template
    SmsUserFactor:
      properties:
        profile:
          $ref: '#/components/schemas/SmsUserFactorProfile'
      x-okta-parent: '#/definitions/UserFactor'
      x-okta-tags:
      - UserFactor
    SmsUserFactorProfile:
      properties:
        phoneNumber:
          type: string
      x-okta-tags:
      - UserFactor
    SocialAuthToken:
      example:
        id: id
        scopes:
        - scopes
        - scopes
        tokenType: tokenType
        expiresAt: 2000-01-23T04:56:07.000+00:00
        tokenAuthScheme: tokenAuthScheme
        token: token
      properties:
        expiresAt:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        scopes:
          items:
            type: string
          type: array
        token:
          type: string
        tokenAuthScheme:
          type: string
        tokenType:
          type: string
      type: object
      x-okta-tags:
      - IdentityProvider
    SpCertificate:
      properties:
        x5c:
          items:
            type: string
          readOnly: false
          type: array
      x-okta-tags:
      - Application
    Subscription:
      example:
        channels:
        - channels
        - channels
        _links:
          key: "{}"
        notificationType: null
        status: null
      properties:
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        channels:
          items:
            type: string
          type: array
        notificationType:
          $ref: '#/components/schemas/NotificationType'
        status:
          $ref: '#/components/schemas/SubscriptionStatus'
      type: object
      x-okta-operations:
      - operationId: listRoleSubscriptions
        alias: listRoleSubscriptions
      - operationId: getRoleSubscriptionByNotificationType
        alias: getRoleSubscriptionByNotificationType
      - operationId: getUserSubscriptionByNotificationType
        alias: getUserSubscriptionByNotificationType
      - operationId: listUserSubscriptions
        alias: listUserSubscriptions
      - operationId: subscribeUserSubscriptionByNotificationType
        alias: subscribeUserSubscriptionByNotificationType
      - operationId: unsubscribeRoleSubscriptionByNotificationType
        alias: unsubscribeRoleSubscriptionByNotificationType
      - operationId: subscribeRoleSubscriptionByNotificationType
        alias: subscribeRoleSubscriptionByNotificationType
      - operationId: unsubscribeUserSubscriptionByNotificationType
        alias: unsubscribeUserSubscriptionByNotificationType
      x-okta-tags:
      - Role
      x-konfig-is-used-in-successful-response: true
    SubscriptionStatus:
      enum:
      - subscribed
      - unsubscribed
      type: string
      x-okta-tags:
      - Role
    SwaApplication:
      properties:
        name:
          default: template_swa
        settings:
          $ref: '#/components/schemas/SwaApplicationSettings'
      x-okta-defined-as:
        name: template_swa
      x-okta-parent: '#/definitions/BrowserPluginApplication'
      x-okta-tags:
      - Application
    SwaApplicationSettings:
      properties:
        app:
          $ref: '#/components/schemas/SwaApplicationSettingsApplication'
      x-okta-parent: '#/definitions/ApplicationSettings'
      x-okta-tags:
      - Application
    SwaApplicationSettingsApplication:
      properties:
        buttonField:
          type: string
        checkbox:
          type: string
        loginUrlRegex:
          type: string
        passwordField:
          type: string
        redirectUrl:
          type: string
        url:
          type: string
        usernameField:
          type: string
      x-okta-parent: '#/definitions/ApplicationSettingsApplication'
      x-okta-tags:
      - Application
    SwaThreeFieldApplication:
      properties:
        name:
          default: template_swa3field
        settings:
          $ref: '#/components/schemas/SwaThreeFieldApplicationSettings'
      x-okta-defined-as:
        name: template_swa3field
      x-okta-parent: '#/definitions/BrowserPluginApplication'
      x-okta-tags:
      - Application
    SwaThreeFieldApplicationSettings:
      properties:
        app:
          $ref: '#/components/schemas/SwaThreeFieldApplicationSettingsApplication'
      x-okta-parent: '#/definitions/ApplicationSettings'
      x-okta-tags:
      - Application
    SwaThreeFieldApplicationSettingsApplication:
      properties:
        buttonSelector:
          type: string
        extraFieldSelector:
          type: string
        extraFieldValue:
          type: string
        loginUrlRegex:
          type: string
        passwordSelector:
          type: string
        targetURL:
          type: string
        userNameSelector:
          type: string
      x-okta-parent: '#/definitions/ApplicationSettingsApplication'
      x-okta-tags:
      - Application
    TempPassword:
      example:
        tempPassword: tempPassword
      properties:
        tempPassword:
          readOnly: true
          type: string
      x-okta-tags:
      - User
      x-konfig-is-used-in-successful-response: true
    Theme:
      example:
        emailTemplateTouchPointVariant: null
        signInPageTouchPointVariant: null
        primaryColorContrastHex: primaryColorContrastHex
        _links:
          key: "{}"
        backgroundImage: backgroundImage
        secondaryColorHex: secondaryColorHex
        secondaryColorContrastHex: secondaryColorContrastHex
        primaryColorHex: primaryColorHex
        errorPageTouchPointVariant: null
        endUserDashboardTouchPointVariant: null
      properties:
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        backgroundImage:
          readOnly: true
          type: string
        emailTemplateTouchPointVariant:
          $ref: '#/components/schemas/EmailTemplateTouchPointVariant'
        endUserDashboardTouchPointVariant:
          $ref: '#/components/schemas/EndUserDashboardTouchPointVariant'
        errorPageTouchPointVariant:
          $ref: '#/components/schemas/ErrorPageTouchPointVariant'
        primaryColorContrastHex:
          type: string
        primaryColorHex:
          type: string
        secondaryColorContrastHex:
          type: string
        secondaryColorHex:
          type: string
        signInPageTouchPointVariant:
          $ref: '#/components/schemas/SignInPageTouchPointVariant'
      x-okta-crud:
      - operationId: getBrandTheme
        alias: read
      - operationId: updateBrandTheme
        alias: update
      x-okta-operations:
      - operationId: uploadBrandThemeLogo
        alias: uploadBrandThemeLogo
      - operationId: deleteBrandThemeLogo
        alias: deleteBrandThemeLogo
      - operationId: uploadBrandThemeFavicon
        alias: updateBrandThemeFavicon
      - operationId: deleteBrandThemeFavicon
        alias: deleteBrandThemeFavicon
      - operationId: uploadBrandThemeBackgroundImage
        alias: updateBrandThemeBackgroundImage
      - operationId: deleteBrandThemeBackgroundImage
        alias: deleteBrandThemeBackgroundImage
      x-okta-tags:
      - Brand
    ThemeResponse:
      example:
        primaryColorContrastHex: primaryColorContrastHex
        _links:
          key: "{}"
        favicon: favicon
        backgroundImage: backgroundImage
        secondaryColorHex: secondaryColorHex
        secondaryColorContrastHex: secondaryColorContrastHex
        primaryColorHex: primaryColorHex
        errorPageTouchPointVariant: null
        emailTemplateTouchPointVariant: null
        signInPageTouchPointVariant: null
        logo: logo
        id: id
        endUserDashboardTouchPointVariant: null
      properties:
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        backgroundImage:
          readOnly: true
          type: string
        emailTemplateTouchPointVariant:
          $ref: '#/components/schemas/EmailTemplateTouchPointVariant'
        endUserDashboardTouchPointVariant:
          $ref: '#/components/schemas/EndUserDashboardTouchPointVariant'
        errorPageTouchPointVariant:
          $ref: '#/components/schemas/ErrorPageTouchPointVariant'
        favicon:
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        logo:
          readOnly: true
          type: string
        primaryColorContrastHex:
          type: string
        primaryColorHex:
          type: string
        secondaryColorContrastHex:
          type: string
        secondaryColorHex:
          type: string
        signInPageTouchPointVariant:
          $ref: '#/components/schemas/SignInPageTouchPointVariant'
      x-okta-tags:
      - Brand
      x-konfig-is-used-in-successful-response: true
    ThreatInsightConfiguration:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        _links:
          key: "{}"
        created: 2000-01-23T04:56:07.000+00:00
        excludeZones:
        - excludeZones
        - excludeZones
        action: action
      properties:
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        action:
          type: string
        created:
          format: date-time
          readOnly: true
          type: string
        excludeZones:
          items:
            type: string
          type: array
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
      x-okta-crud:
      - operationId: getCurrentConfiguration
        alias: read
        arguments: []
      - operationId: updateConfiguration
        alias: update
        arguments:
        - dest: threatInsightConfiguration
          self: true
      x-okta-tags:
      - ThreatInsight
      x-konfig-is-used-in-successful-response: true
    TokenAuthorizationServerPolicyRuleAction:
      example:
        refreshTokenWindowMinutes: 1
        accessTokenLifetimeMinutes: 0
        inlineHook:
          id: id
        refreshTokenLifetimeMinutes: 6
      properties:
        accessTokenLifetimeMinutes:
          type: integer
        inlineHook:
          $ref: '#/components/schemas/TokenAuthorizationServerPolicyRuleActionInlineHook'
        refreshTokenLifetimeMinutes:
          type: integer
        refreshTokenWindowMinutes:
          type: integer
      type: object
      x-okta-tags:
      - AuthorizationServerPolicy
    TokenAuthorizationServerPolicyRuleActionInlineHook:
      example:
        id: id
      properties:
        id:
          type: string
      type: object
      x-okta-tags:
      - AuthorizationServerPolicy
    TokenUserFactor:
      properties:
        profile:
          $ref: '#/components/schemas/TokenUserFactorProfile'
      x-okta-parent: '#/definitions/UserFactor'
      x-okta-tags:
      - UserFactor
    TokenUserFactorProfile:
      properties:
        credentialId:
          type: string
      x-okta-tags:
      - UserFactor
    TotpUserFactor:
      properties:
        profile:
          $ref: '#/components/schemas/TotpUserFactorProfile'
      x-okta-parent: '#/definitions/UserFactor'
      x-okta-tags:
      - UserFactor
    TotpUserFactorProfile:
      properties:
        credentialId:
          type: string
      x-okta-tags:
      - UserFactor
    TrustedOrigin:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        lastUpdatedBy: lastUpdatedBy
        _links:
          key: "{}"
        createdBy: createdBy
        created: 2000-01-23T04:56:07.000+00:00
        origin: origin
        name: name
        id: id
        scopes:
        - stringValue: stringValue
          allowedOktaApps:
          - null
          - null
          type: null
        - stringValue: stringValue
          allowedOktaApps:
          - null
          - null
          type: null
        status: status
      properties:
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        created:
          format: date-time
          readOnly: true
          type: string
        createdBy:
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        lastUpdatedBy:
          type: string
        name:
          type: string
        origin:
          type: string
        scopes:
          items:
            $ref: '#/components/schemas/Scope'
          type: array
        status:
          type: string
      type: object
      x-okta-crud:
      - operationId: createOrigin
        alias: create
        arguments:
        - dest: trustedOrigin
          self: true
      - operationId: getOrigin
        alias: read
        arguments: []
      - operationId: updateOrigin
        alias: update
        arguments:
        - dest: trustedOriginId
          src: id
        - dest: trustedOrigin
          self: true
      - operationId: deleteOrigin
        alias: delete
        arguments:
        - dest: trustedOriginId
          src: id
      x-okta-tags:
      - TrustedOrigin
      x-konfig-is-used-in-successful-response: true
    U2fUserFactor:
      properties:
        profile:
          $ref: '#/components/schemas/U2fUserFactorProfile'
      x-okta-parent: '#/definitions/UserFactor'
      x-okta-tags:
      - UserFactor
    U2fUserFactorProfile:
      properties:
        credentialId:
          type: string
      x-okta-tags:
      - UserFactor
    User:
      example:
        lastLogin: 2000-01-23T04:56:07.000+00:00
        transitioningToStatus: null
        _links:
          key: "{}"
        credentials:
          password:
            hook:
              type: type
            value: value
            hash:
              salt: salt
              saltOrder: saltOrder
              workFactor: 0
              value: value
              algorithm: null
          provider:
            name: name
            type: null
          recovery_question:
            answer: answer
            question: question
        created: 2000-01-23T04:56:07.000+00:00
        profile:
          profileUrl: profileUrl
          lastName: lastName
          zipCode: zipCode
          preferredLanguage: preferredLanguage
          city: city
          displayName: displayName
          timezone: timezone
          title: title
          locale: locale
          login: login
          employeeNumber: employeeNumber
          division: division
          honorificSuffix: honorificSuffix
          countryCode: countryCode
          state: state
          department: department
          email: email
          manager: manager
          costCenter: costCenter
          nickName: nickName
          secondEmail: secondEmail
          honorificPrefix: honorificPrefix
          managerId: managerId
          firstName: firstName
          primaryPhone: primaryPhone
          postalAddress: postalAddress
          mobilePhone: mobilePhone
          streetAddress: streetAddress
          organization: organization
          middleName: middleName
          userType: userType
        type:
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          lastUpdatedBy: lastUpdatedBy
          default: true
          _links:
            key: "{}"
          createdBy: createdBy
          created: 2000-01-23T04:56:07.000+00:00
          displayName: displayName
          name: name
          description: description
          id: id
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        passwordChanged: 2000-01-23T04:56:07.000+00:00
        _embedded:
          key: "{}"
        statusChanged: 2000-01-23T04:56:07.000+00:00
        id: id
        activated: 2000-01-23T04:56:07.000+00:00
        status: null
      properties:
        _embedded:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        activated:
          format: date-time
          readOnly: true
          type: string
        created:
          format: date-time
          readOnly: true
          type: string
        credentials:
          $ref: '#/components/schemas/UserCredentials'
        id:
          readOnly: true
          type: string
        lastLogin:
          format: date-time
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        passwordChanged:
          format: date-time
          readOnly: true
          type: string
        profile:
          $ref: '#/components/schemas/UserProfile'
        status:
          $ref: '#/components/schemas/UserStatus'
        statusChanged:
          format: date-time
          readOnly: true
          type: string
        transitioningToStatus:
          $ref: '#/components/schemas/UserStatus'
        type:
          $ref: '#/components/schemas/UserType'
      type: object
      x-okta-crud:
      - operationId: createUser
        alias: create
        arguments:
        - dest: user
          self: true
      - operationId: getUser
        alias: read
        arguments: []
      - operationId: updateUser
        alias: update
        arguments:
        - dest: userId
          src: id
        - dest: user
          self: true
      - operationId: deactivateOrDeleteUser
        alias: delete
        arguments:
        - dest: userId
          src: id
        - dest: user
          self: true
      x-okta-operations:
      - operationId: listAppLinks
        alias: listAppLinks
        arguments:
        - dest: userId
          src: id
      - operationId: changePassword
        alias: changePassword
        arguments:
        - dest: userId
          src: id
      - operationId: changeRecoveryQuestion
        alias: changeRecoveryQuestion
        arguments:
        - dest: userId
          src: id
      - operationId: forgotPasswordSetNewPassword
        alias: forgotPasswordSetNewPassword
        arguments:
        - dest: userId
          src: id
      - operationId: forgotPasswordGenerateOneTimeToken
        alias: forgotPasswordGenerateOneTimeToken
        arguments:
        - dest: userId
          src: id
      - operationId: assignRoleToUser
        alias: assignRole
        arguments:
        - dest: userId
          src: id
      - operationId: getUserRole
        alias: getRole
        arguments:
        - dest: userId
          src: id
      - operationId: removeRoleFromUser
        alias: removeRole
        arguments:
        - dest: userId
          src: id
      - operationId: listGroupTargetsForRole
        alias: listGroupTargets
        arguments:
        - dest: userId
          src: id
      - operationId: removeGroupTargetFromRole
        alias: removeGroupTarget
        arguments:
        - dest: userId
          src: id
      - operationId: addGroupTargetToRole
        alias: addGroupTarget
        arguments:
        - dest: userId
          src: id
      - operationId: listAssignedRolesForUser
        alias: listAssignedRoles
        arguments:
        - dest: userId
          src: id
      - operationId: addAllAppsAsTargetToRole
        alias: addAllAppsAsTarget
        arguments:
        - dest: userId
          src: id
      - operationId: listUserGroups
        alias: listGroups
        arguments:
        - dest: userId
          src: id
      - operationId: listUserGrants
        alias: listGrants
        arguments:
        - dest: userId
          src: id
      - operationId: revokeUserGrants
        alias: revokeGrants
        arguments:
        - dest: userId
          src: id
      - operationId: revokeUserGrant
        alias: revokeGrant
        arguments:
        - dest: userId
          src: id
      - operationId: revokeGrantsForUserAndClient
        alias: revokeGrantsForUserAndClient
        arguments:
        - dest: userId
          src: id
      - operationId: listRefreshTokensForUserAndClient
        alias: listRefreshTokensForUserAndClient
        arguments:
        - dest: userId
          src: id
      - operationId: revokeTokenForUserAndClient
        alias: revokeTokenForUserAndClient
        arguments:
        - dest: userId
          src: id
      - operationId: getRefreshTokenForUserAndClient
        alias: getRefreshTokenForUserAndClient
        arguments:
        - dest: userId
          src: id
      - operationId: revokeTokensForUserAndClient
        alias: revokeTokensForUserAndClient
        arguments:
        - dest: userId
          src: id
      - operationId: listUserClients
        alias: listClients
        arguments:
        - dest: userId
          src: id
      - operationId: activateUser
        alias: activate
        arguments:
        - dest: userId
          src: id
      - operationId: reactivateUser
        alias: reactivate
        arguments:
        - dest: userId
          src: id
      - operationId: deactivateUser
        alias: deactivate
        arguments:
        - dest: userId
          src: id
      - operationId: suspendUser
        alias: suspend
        arguments:
        - dest: userId
          src: id
      - operationId: unsuspendUser
        alias: unsuspend
        arguments:
        - dest: userId
          src: id
      - operationId: resetPassword
        alias: resetPassword
        arguments:
        - dest: userId
          src: id
      - operationId: expirePassword
        alias: expirePassword
        arguments:
        - dest: userId
          src: id
      - operationId: expirePasswordAndGetTemporaryPassword
        alias: expirePasswordAndGetTemporaryPassword
        arguments:
        - dest: userId
          src: id
      - operationId: unlockUser
        alias: unlock
        arguments:
        - dest: userId
          src: id
      - operationId: resetFactors
        alias: resetFactors
        arguments:
        - dest: userId
          src: id
      - operationId: deleteFactor
        alias: deleteFactor
        arguments:
        - dest: userId
          src: id
      - operationId: addUserToGroup
        description: Adds a user to a group with 'OKTA_GROUP' type
        alias: addToGroup
        arguments:
        - dest: userId
          src: id
      - operationId: enrollFactor
        alias: enrollFactor
        arguments:
        - dest: userId
          src: id
      - operationId: listSupportedFactors
        alias: listSupportedFactors
        arguments:
        - dest: userId
          src: id
      - operationId: listFactors
        alias: listFactors
        arguments:
        - dest: userId
          src: id
      - operationId: listSupportedSecurityQuestions
        alias: listSupportedSecurityQuestions
        arguments:
        - dest: userId
          src: id
      - operationId: getFactor
        alias: getFactor
        arguments:
        - dest: userId
          src: id
      - operationId: setLinkedObjectForUser
        alias: setLinkedObject
        arguments:
        - dest: associatedUserId
          src: id
      - operationId: listUserIdentityProviders
        alias: listIdentityProviders
        arguments:
        - dest: userId
          src: id
      - operationId: getLinkedObjectsForUser
        alias: getLinkedObjects
        arguments:
        - dest: userId
          src: id
      - operationId: clearUserSessions
        alias: clearSessions
        arguments:
        - dest: userId
          src: id
      - operationId: removeLinkedObjectForUser
        alias: removeLinkedObject
        arguments:
        - dest: userId
          src: id
      x-okta-tags:
      - User
      x-konfig-is-used-in-successful-response: true
    UserActivationToken:
      example:
        activationUrl: activationUrl
        activationToken: activationToken
      properties:
        activationToken:
          readOnly: true
          type: string
        activationUrl:
          readOnly: true
          type: string
      type: object
      x-okta-tags:
      - User
      x-konfig-is-used-in-successful-response: true
    UserCondition:
      example:
        include:
        - include
        - include
        exclude:
        - exclude
        - exclude
      properties:
        exclude:
          items:
            type: string
          type: array
        include:
          items:
            type: string
          type: array
      x-okta-tags:
      - Policy
    UserCredentials:
      example:
        password:
          hook:
            type: type
          value: value
          hash:
            salt: salt
            saltOrder: saltOrder
            workFactor: 0
            value: value
            algorithm: null
        provider:
          name: name
          type: null
        recovery_question:
          answer: answer
          question: question
      properties:
        password:
          $ref: '#/components/schemas/PasswordCredential'
        provider:
          $ref: '#/components/schemas/AuthenticationProvider'
        recovery_question:
          $ref: '#/components/schemas/RecoveryQuestionCredential'
      type: object
      x-okta-tags:
      - User
      x-konfig-is-used-in-successful-response: true
    UserFactor:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        _embedded:
          key: "{}"
        _links:
          key: "{}"
        provider: null
        created: 2000-01-23T04:56:07.000+00:00
        factorType: null
        verify:
          attestation: attestation
          answer: answer
          nextPassCode: nextPassCode
          stateToken: stateToken
          clientData: clientData
          passCode: passCode
          registrationData: registrationData
          activationToken: activationToken
        id: id
        status: null
      properties:
        _embedded:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        created:
          format: date-time
          readOnly: true
          type: string
        factorType:
          $ref: '#/components/schemas/FactorType'
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        provider:
          $ref: '#/components/schemas/FactorProvider'
        status:
          $ref: '#/components/schemas/FactorStatus'
        verify:
          $ref: '#/components/schemas/VerifyFactorRequest'
      type: object
      x-okta-crud:
      - operationId: deleteFactor
        alias: delete
        arguments:
        - dest: factorId
          src: id
        - dest: userId
          parentSrc: id
      x-okta-operations:
      - operationId: activateFactor
        alias: activate
        arguments:
        - dest: factorId
          src: id
        - dest: userId
          parentSrc: id
      - operationId: verifyFactor
        alias: verify
        arguments:
        - dest: factorId
          src: id
        - dest: userId
          parentSrc: id
      x-okta-tags:
      - UserFactor
      x-openapi-v3-discriminator:
        mapping:
          call: '#/definitions/CallUserFactor'
          email: '#/definitions/EmailUserFactor'
          hotp: '#/definitions/CustomHotpUserFactor'
          push: '#/definitions/PushUserFactor'
          question: '#/definitions/SecurityQuestionUserFactor'
          sms: '#/definitions/SmsUserFactor'
          token: '#/definitions/TokenUserFactor'
          token:hardware: '#/definitions/HardwareUserFactor'
          token:hotp: '#/definitions/CustomHotpUserFactor'
          token:software:totp: '#/definitions/TotpUserFactor'
          u2f: '#/definitions/U2fUserFactor'
          web: '#/definitions/WebUserFactor'
          webauthn: '#/definitions/WebAuthnUserFactor'
        propertyName: factorType
      x-konfig-is-used-in-successful-response: true
    UserIdString:
      example:
        userId: userId
      properties:
        userId:
          type: string
      type: object
      x-okta-parent: '#/definitions/OrgContactUser'
      x-okta-tags:
      - Org
    UserIdentifierConditionEvaluatorPattern:
      example:
        matchType: SUFFIX
        value: value
      properties:
        matchType:
          enum:
          - SUFFIX
          - EXPRESSION
          - STARTS_WITH
          - EQUALS
          - CONTAINS
          type: string
        value:
          type: string
      type: object
      x-okta-tags:
      - Policy
    UserIdentifierPolicyRuleCondition:
      example:
        patterns:
        - matchType: SUFFIX
          value: value
        - matchType: SUFFIX
          value: value
        attribute: attribute
        type: IDENTIFIER
      properties:
        attribute:
          type: string
        patterns:
          items:
            $ref: '#/components/schemas/UserIdentifierConditionEvaluatorPattern'
          type: array
        type:
          enum:
          - IDENTIFIER
          - ATTRIBUTE
          type: string
      type: object
      x-okta-tags:
      - Policy
    UserIdentityProviderLinkRequest:
      example:
        externalId: externalId
      properties:
        externalId:
          type: string
      type: object
      x-okta-tags:
      - Policy
    UserLifecycleAttributePolicyRuleCondition:
      example:
        matchingValue: matchingValue
        attributeName: attributeName
      properties:
        attributeName:
          type: string
        matchingValue:
          type: string
      type: object
      x-okta-tags:
      - Policy
    UserNextLogin:
      enum:
      - changePassword
      type: string
      x-okta-tags:
      - User
    UserPolicyRuleCondition:
      example:
        userLifecycleAttribute:
          matchingValue: matchingValue
          attributeName: attributeName
        include:
        - include
        - include
        passwordExpiration:
          number: 5
          unit: unit
        lifecycleExpiration:
          number: 1
          unit: unit
          lifecycleStatus: lifecycleStatus
        inactivity:
          number: 6
          unit: unit
        exclude:
        - exclude
        - exclude
      properties:
        exclude:
          items:
            type: string
          type: array
        inactivity:
          $ref: '#/components/schemas/InactivityPolicyRuleCondition'
        include:
          items:
            type: string
          type: array
        lifecycleExpiration:
          $ref: '#/components/schemas/LifecycleExpirationPolicyRuleCondition'
        passwordExpiration:
          $ref: '#/components/schemas/PasswordExpirationPolicyRuleCondition'
        userLifecycleAttribute:
          $ref: '#/components/schemas/UserLifecycleAttributePolicyRuleCondition'
      type: object
      x-okta-tags:
      - Policy
    UserProfile:
      example:
        profileUrl: profileUrl
        lastName: lastName
        zipCode: zipCode
        preferredLanguage: preferredLanguage
        city: city
        displayName: displayName
        timezone: timezone
        title: title
        locale: locale
        login: login
        employeeNumber: employeeNumber
        division: division
        honorificSuffix: honorificSuffix
        countryCode: countryCode
        state: state
        department: department
        email: email
        manager: manager
        costCenter: costCenter
        nickName: nickName
        secondEmail: secondEmail
        honorificPrefix: honorificPrefix
        managerId: managerId
        firstName: firstName
        primaryPhone: primaryPhone
        postalAddress: postalAddress
        mobilePhone: mobilePhone
        streetAddress: streetAddress
        organization: organization
        middleName: middleName
        userType: userType
      properties:
        title:
          type: string
        city:
          type: string
        costCenter:
          type: string
        countryCode:
          type: string
        department:
          type: string
        displayName:
          type: string
        division:
          type: string
        email:
          type: string
        employeeNumber:
          type: string
        firstName:
          type: string
        honorificPrefix:
          type: string
        honorificSuffix:
          type: string
        lastName:
          type: string
        locale:
          type: string
        login:
          type: string
        manager:
          type: string
        managerId:
          type: string
        middleName:
          type: string
        mobilePhone:
          type: string
        nickName:
          type: string
        organization:
          type: string
        postalAddress:
          type: string
        preferredLanguage:
          type: string
        primaryPhone:
          type: string
        profileUrl:
          type: string
        secondEmail:
          type: string
        state:
          type: string
        streetAddress:
          type: string
        timezone:
          type: string
        userType:
          type: string
        zipCode:
          type: string
      type: object
      x-okta-extensible: true
      x-okta-tags:
      - User
    UserSchema:
      example:
        lastUpdated: lastUpdated
        $schema: $schema
        _links:
          key: "{}"
        created: created
        name: name
        id: id
        title: title
        type: type
        definitions:
          custom:
            id: id
            type: type
            properties:
              key: {}
            required:
            - required
            - required
          base:
            id: id
            type: type
            properties:
              profileUrl: "{}"
              lastName: "{}"
              zipCode: "{}"
              preferredLanguage: "{}"
              city: "{}"
              displayName: "{}"
              timezone: "{}"
              title: "{}"
              locale: "{}"
              login: "{}"
              employeeNumber: "{}"
              division: "{}"
              honorificSuffix: "{}"
              countryCode: "{}"
              state: "{}"
              department: "{}"
              email: "{}"
              manager: "{}"
              costCenter: "{}"
              nickName: "{}"
              secondEmail: "{}"
              honorificPrefix: "{}"
              managerId: "{}"
              firstName: "{}"
              primaryPhone: "{}"
              postalAddress: "{}"
              mobilePhone: "{}"
              streetAddress: "{}"
              organization: "{}"
              middleName: "{}"
              userType: "{}"
            required:
            - required
            - required
        properties:
          profile:
            allOf:
            - $ref: $ref
            - $ref: $ref
      properties:
        title:
          type: string
        $schema:
          readOnly: true
          type: string
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        created:
          readOnly: true
          type: string
        definitions:
          $ref: '#/components/schemas/UserSchemaDefinitions'
        id:
          readOnly: true
          type: string
        lastUpdated:
          readOnly: true
          type: string
        name:
          readOnly: true
          type: string
        properties:
          $ref: '#/components/schemas/UserSchemaProperties'
        type:
          readOnly: true
          type: string
      type: object
      x-okta-tags:
      - UserSchema
      x-konfig-is-used-in-successful-response: true
    UserSchemaAttribute:
      example: {}
      properties: {}
      type: object
      x-okta-tags:
      - UserSchema
    UserSchemaAttributeEnum:
      properties:
        title:
          type: string
        const:
          type: string
      type: object
      x-okta-tags:
      - UserSchema
    UserSchemaAttributeItems:
      properties: {}
      type: object
      x-okta-tags:
      - UserSchema
    UserSchemaAttributeMaster:
      properties:
        priority:
          items:
            $ref: '#/components/schemas/UserSchemaAttributeMasterPriority'
          type: array
        type:
          $ref: '#/components/schemas/UserSchemaAttributeMasterType'
      type: object
      x-okta-tags:
      - UserSchema
    UserSchemaAttributeMasterPriority:
      properties:
        type:
          type: string
        value:
          type: string
      type: object
      x-okta-tags:
      - UserSchema
    UserSchemaAttributeMasterType:
      enum:
      - PROFILE_MASTER
      - OKTA
      - OVERRIDE
      type: string
      x-okta-tags:
      - UserSchema
    UserSchemaAttributePermission:
      properties:
        action:
          type: string
        principal:
          type: string
      type: object
      x-okta-tags:
      - UserSchema
    UserSchemaAttributeScope:
      enum:
      - SELF
      - NONE
      type: object
      x-okta-tags:
      - UserSchema
    UserSchemaAttributeType:
      enum:
      - string
      - boolean
      - number
      - integer
      - array
      type: string
      x-okta-tags:
      - UserSchema
    UserSchemaAttributeUnion:
      enum:
      - DISABLE
      - ENABLE
      type: object
      x-okta-tags:
      - UserSchema
    UserSchemaBase:
      example:
        id: id
        type: type
        properties:
          profileUrl: "{}"
          lastName: "{}"
          zipCode: "{}"
          preferredLanguage: "{}"
          city: "{}"
          displayName: "{}"
          timezone: "{}"
          title: "{}"
          locale: "{}"
          login: "{}"
          employeeNumber: "{}"
          division: "{}"
          honorificSuffix: "{}"
          countryCode: "{}"
          state: "{}"
          department: "{}"
          email: "{}"
          manager: "{}"
          costCenter: "{}"
          nickName: "{}"
          secondEmail: "{}"
          honorificPrefix: "{}"
          managerId: "{}"
          firstName: "{}"
          primaryPhone: "{}"
          postalAddress: "{}"
          mobilePhone: "{}"
          streetAddress: "{}"
          organization: "{}"
          middleName: "{}"
          userType: "{}"
        required:
        - required
        - required
      properties:
        id:
          readOnly: true
          type: string
        properties:
          $ref: '#/components/schemas/UserSchemaBaseProperties'
        required:
          items:
            type: string
          type: array
        type:
          type: string
      type: object
      x-okta-tags:
      - UserSchema
    UserSchemaBaseProperties:
      example:
        profileUrl: "{}"
        lastName: "{}"
        zipCode: "{}"
        preferredLanguage: "{}"
        city: "{}"
        displayName: "{}"
        timezone: "{}"
        title: "{}"
        locale: "{}"
        login: "{}"
        employeeNumber: "{}"
        division: "{}"
        honorificSuffix: "{}"
        countryCode: "{}"
        state: "{}"
        department: "{}"
        email: "{}"
        manager: "{}"
        costCenter: "{}"
        nickName: "{}"
        secondEmail: "{}"
        honorificPrefix: "{}"
        managerId: "{}"
        firstName: "{}"
        primaryPhone: "{}"
        postalAddress: "{}"
        mobilePhone: "{}"
        streetAddress: "{}"
        organization: "{}"
        middleName: "{}"
        userType: "{}"
      properties:
        title:
          example: {}
          properties: {}
          type: object
          x-okta-tags:
          - UserSchema
        city:
          example: {}
          properties: {}
          type: object
          x-okta-tags:
          - UserSchema
        costCenter:
          example: {}
          properties: {}
          type: object
          x-okta-tags:
          - UserSchema
        countryCode:
          example: {}
          properties: {}
          type: object
          x-okta-tags:
          - UserSchema
        department:
          example: {}
          properties: {}
          type: object
          x-okta-tags:
          - UserSchema
        displayName:
          example: {}
          properties: {}
          type: object
          x-okta-tags:
          - UserSchema
        division:
          example: {}
          properties: {}
          type: object
          x-okta-tags:
          - UserSchema
        email:
          example: {}
          properties: {}
          type: object
          x-okta-tags:
          - UserSchema
        employeeNumber:
          example: {}
          properties: {}
          type: object
          x-okta-tags:
          - UserSchema
        firstName:
          example: {}
          properties: {}
          type: object
          x-okta-tags:
          - UserSchema
        honorificPrefix:
          example: {}
          properties: {}
          type: object
          x-okta-tags:
          - UserSchema
        honorificSuffix:
          example: {}
          properties: {}
          type: object
          x-okta-tags:
          - UserSchema
        lastName:
          example: {}
          properties: {}
          type: object
          x-okta-tags:
          - UserSchema
        locale:
          example: {}
          properties: {}
          type: object
          x-okta-tags:
          - UserSchema
        login:
          example: {}
          properties: {}
          type: object
          x-okta-tags:
          - UserSchema
        manager:
          example: {}
          properties: {}
          type: object
          x-okta-tags:
          - UserSchema
        managerId:
          example: {}
          properties: {}
          type: object
          x-okta-tags:
          - UserSchema
        middleName:
          example: {}
          properties: {}
          type: object
          x-okta-tags:
          - UserSchema
        mobilePhone:
          example: {}
          properties: {}
          type: object
          x-okta-tags:
          - UserSchema
        nickName:
          example: {}
          properties: {}
          type: object
          x-okta-tags:
          - UserSchema
        organization:
          example: {}
          properties: {}
          type: object
          x-okta-tags:
          - UserSchema
        postalAddress:
          example: {}
          properties: {}
          type: object
          x-okta-tags:
          - UserSchema
        preferredLanguage:
          example: {}
          properties: {}
          type: object
          x-okta-tags:
          - UserSchema
        primaryPhone:
          example: {}
          properties: {}
          type: object
          x-okta-tags:
          - UserSchema
        profileUrl:
          example: {}
          properties: {}
          type: object
          x-okta-tags:
          - UserSchema
        secondEmail:
          example: {}
          properties: {}
          type: object
          x-okta-tags:
          - UserSchema
        state:
          example: {}
          properties: {}
          type: object
          x-okta-tags:
          - UserSchema
        streetAddress:
          example: {}
          properties: {}
          type: object
          x-okta-tags:
          - UserSchema
        timezone:
          example: {}
          properties: {}
          type: object
          x-okta-tags:
          - UserSchema
        userType:
          example: {}
          properties: {}
          type: object
          x-okta-tags:
          - UserSchema
        zipCode:
          example: {}
          properties: {}
          type: object
          x-okta-tags:
          - UserSchema
      type: object
      x-okta-tags:
      - UserSchema
    UserSchemaDefinitions:
      example:
        custom:
          id: id
          type: type
          properties:
            key: {}
          required:
          - required
          - required
        base:
          id: id
          type: type
          properties:
            profileUrl: "{}"
            lastName: "{}"
            zipCode: "{}"
            preferredLanguage: "{}"
            city: "{}"
            displayName: "{}"
            timezone: "{}"
            title: "{}"
            locale: "{}"
            login: "{}"
            employeeNumber: "{}"
            division: "{}"
            honorificSuffix: "{}"
            countryCode: "{}"
            state: "{}"
            department: "{}"
            email: "{}"
            manager: "{}"
            costCenter: "{}"
            nickName: "{}"
            secondEmail: "{}"
            honorificPrefix: "{}"
            managerId: "{}"
            firstName: "{}"
            primaryPhone: "{}"
            postalAddress: "{}"
            mobilePhone: "{}"
            streetAddress: "{}"
            organization: "{}"
            middleName: "{}"
            userType: "{}"
          required:
          - required
          - required
      properties:
        base:
          $ref: '#/components/schemas/UserSchemaBase'
        custom:
          $ref: '#/components/schemas/UserSchemaPublic'
      type: object
      x-okta-tags:
      - UserSchema
    UserSchemaProperties:
      example:
        profile:
          allOf:
          - $ref: $ref
          - $ref: $ref
      properties:
        profile:
          $ref: '#/components/schemas/UserSchemaPropertiesProfile'
      type: object
      x-okta-tags:
      - UserSchema
    UserSchemaPropertiesProfile:
      example:
        allOf:
        - $ref: $ref
        - $ref: $ref
      properties:
        allOf:
          items:
            $ref: '#/components/schemas/UserSchemaPropertiesProfileItem'
          type: array
      type: object
      x-okta-tags:
      - UserSchema
    UserSchemaPropertiesProfileItem:
      example:
        $ref: $ref
      properties:
        $ref:
          type: string
      type: object
      x-okta-tags:
      - UserSchema
    UserSchemaPublic:
      example:
        id: id
        type: type
        properties:
          key: {}
        required:
        - required
        - required
      properties:
        id:
          readOnly: true
          type: string
        properties:
          additionalProperties:
            $ref: '#/components/schemas/UserSchemaAttribute'
          type: object
        required:
          items:
            type: string
          type: array
        type:
          type: string
      type: object
      x-okta-tags:
      - UserSchema
    UserStatus:
      enum:
      - ACTIVE
      - DEPROVISIONED
      - LOCKED_OUT
      - PASSWORD_EXPIRED
      - PROVISIONED
      - RECOVERY
      - STAGED
      - SUSPENDED
      type: string
      x-okta-tags:
      - User
    UserStatusPolicyRuleCondition:
      example:
        value: ACTIVE
      properties:
        value:
          enum:
          - ACTIVE
          - INACTIVE
          - PENDING
          - DELETED
          - EXPIRED_PASSWORD
          - ACTIVATING
          - SUSPENDED
          - DELETING
          type: string
      type: object
      x-okta-tags:
      - Policy
    UserType:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        lastUpdatedBy: lastUpdatedBy
        default: true
        _links:
          key: "{}"
        createdBy: createdBy
        created: 2000-01-23T04:56:07.000+00:00
        displayName: displayName
        name: name
        description: description
        id: id
      properties:
        description:
          type: string
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        created:
          format: date-time
          readOnly: true
          type: string
        createdBy:
          readOnly: true
          type: string
        default:
          readOnly: true
          type: boolean
        displayName:
          type: string
        id:
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        lastUpdatedBy:
          readOnly: true
          type: string
        name:
          type: string
      type: object
      x-okta-crud:
      - operationId: createUserType
        alias: create
        arguments:
        - dest: userType
          self: true
      - operationId: updateUserType
        alias: update
        arguments:
        - dest: typeId
          src: id
        - dest: userType
          self: true
      - operationId: getUserType
        alias: read
        arguments:
        - dest: typeId
          src: id
      - operationId: deleteUserType
        alias: delete
        arguments:
        - dest: typeId
          src: id
      x-okta-operations:
      - operationId: replaceUserType
        alias: replaceUserType
        arguments:
        - dest: roleId
          src: id
      x-okta-tags:
      - UserType
      x-konfig-is-used-in-successful-response: true
    UserTypeCondition:
      properties:
        exclude:
          items:
            type: string
          type: array
        include:
          items:
            type: string
          type: array
      x-okta-tags:
      - Policy
    UserVerificationEnum:
      enum:
      - REQUIRED
      - PREFERRED
      type: string
      x-okta-tags:
      - Authenticator
    VerificationMethod:
      properties:
        constraints:
          items:
            $ref: '#/components/schemas/AccessPolicyConstraints'
          type: array
        factorMode:
          type: string
        inactivityPeriod:
          type: string
        reauthenticateIn:
          type: string
        type:
          type: string
      type: object
      x-okta-tags:
      - Policy
    VerifyFactorRequest:
      example:
        attestation: attestation
        answer: answer
        nextPassCode: nextPassCode
        stateToken: stateToken
        clientData: clientData
        passCode: passCode
        registrationData: registrationData
        activationToken: activationToken
      properties:
        activationToken:
          type: string
        answer:
          type: string
        attestation:
          type: string
        clientData:
          type: string
        nextPassCode:
          type: string
        passCode:
          type: string
        registrationData:
          type: string
        stateToken:
          type: string
      x-okta-tags:
      - UserFactor
    VerifyUserFactorResponse:
      example:
        factorResultMessage: factorResultMessage
        _embedded:
          key: "{}"
        _links:
          key: "{}"
        factorResult: SUCCESS
        expiresAt: 2000-01-23T04:56:07.000+00:00
      properties:
        _embedded:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        expiresAt:
          format: date-time
          readOnly: true
          type: string
        factorResult:
          enum:
          - SUCCESS
          - EXPIRED
          - CHALLENGE
          - WAITING
          - FAILED
          - REJECTED
          - TIMEOUT
          - TIME_WINDOW_EXCEEDED
          - PASSCODE_REPLAYED
          - ERROR
          type: string
        factorResultMessage:
          type: string
      type: object
      x-okta-tags:
      - UserFactor
      x-konfig-is-used-in-successful-response: true
    WebAuthnUserFactor:
      properties:
        profile:
          $ref: '#/components/schemas/WebAuthnUserFactorProfile'
      x-okta-parent: '#/definitions/UserFactor'
      x-okta-tags:
      - UserFactor
    WebAuthnUserFactorProfile:
      properties:
        authenticatorName:
          type: string
        credentialId:
          type: string
      x-okta-tags:
      - UserFactor
    WebUserFactor:
      properties:
        profile:
          $ref: '#/components/schemas/WebUserFactorProfile'
      x-okta-parent: '#/definitions/UserFactor'
      x-okta-tags:
      - UserFactor
    WebUserFactorProfile:
      properties:
        credentialId:
          type: string
      x-okta-tags:
      - UserFactor
    WsFederationApplication:
      properties:
        name:
          default: template_wsfed
        settings:
          $ref: '#/components/schemas/WsFederationApplicationSettings'
      x-okta-defined-as:
        name: template_wsfed
      x-okta-parent: '#/definitions/Application'
      x-okta-tags:
      - Application
    WsFederationApplicationSettings:
      properties:
        app:
          $ref: '#/components/schemas/WsFederationApplicationSettingsApplication'
      x-okta-parent: '#/definitions/ApplicationSettings'
      x-okta-tags:
      - Application
    WsFederationApplicationSettingsApplication:
      properties:
        attributeStatements:
          type: string
        audienceRestriction:
          type: string
        authnContextClassRef:
          type: string
        groupFilter:
          type: string
        groupName:
          type: string
        groupValueFormat:
          type: string
        nameIDFormat:
          type: string
        realm:
          type: string
        siteURL:
          type: string
        usernameAttribute:
          type: string
        wReplyOverride:
          type: boolean
        wReplyURL:
          type: string
      x-okta-parent: '#/definitions/ApplicationSettingsApplication'
      x-okta-tags:
      - Application
    ApplicationUpdateLogoRequest:
      properties:
        file:
          format: binary
          type: string
      required:
      - file
      type: object
    ApplicationListAppsResponse:
      items:
        $ref: '#/components/schemas/Application'
      type: array
      x-konfig-is-used-in-successful-response: true
    ApplicationListCsrsForApplicationResponse:
      items:
        $ref: '#/components/schemas/Csr'
      type: array
      x-konfig-is-used-in-successful-response: true
    ApplicationListKeyCredentialsResponse:
      items:
        $ref: '#/components/schemas/JsonWebKey'
      type: array
      x-konfig-is-used-in-successful-response: true
    ApplicationListClientSecretsResponse:
      items:
        $ref: '#/components/schemas/ClientSecret'
      type: array
      x-konfig-is-used-in-successful-response: true
    ApplicationListFeaturesResponse:
      items:
        $ref: '#/components/schemas/ApplicationFeature'
      type: array
      x-konfig-is-used-in-successful-response: true
    ApplicationListScopeConsentGrantsResponse:
      items:
        $ref: '#/components/schemas/OAuth2ScopeConsentGrant'
      type: array
      x-konfig-is-used-in-successful-response: true
    ApplicationListGroupsAssignedResponse:
      items:
        $ref: '#/components/schemas/ApplicationGroupAssignment'
      type: array
      x-konfig-is-used-in-successful-response: true
    ApplicationPreviewSamlAppMetadataResponse:
      properties:
        EntityDescriptor:
          $ref: '#/components/schemas/ApplicationPreviewSamlAppMetadataResponse_EntityDescriptor'
      type: object
      x-konfig-is-used-in-successful-response: true
    ApplicationListTokensResponse:
      items:
        $ref: '#/components/schemas/OAuth2Token'
      type: array
      x-konfig-is-used-in-successful-response: true
    ApplicationListAssignedUsersResponse:
      items:
        $ref: '#/components/schemas/AppUser'
      type: array
      x-konfig-is-used-in-successful-response: true
    AuthenticatorListAllAvailableResponse:
      items:
        $ref: '#/components/schemas/Authenticator'
      type: array
      x-konfig-is-used-in-successful-response: true
    AuthorizationServerListServersResponse:
      items:
        $ref: '#/components/schemas/AuthorizationServer'
      type: array
      x-konfig-is-used-in-successful-response: true
    AuthorizationServerGetClaimsResponse:
      items:
        $ref: '#/components/schemas/OAuth2Claim'
      type: array
      x-konfig-is-used-in-successful-response: true
    AuthorizationServerListClientsResponse:
      items:
        $ref: '#/components/schemas/OAuth2Client'
      type: array
      x-konfig-is-used-in-successful-response: true
    AuthorizationServerGetClientTokensResponse:
      items:
        $ref: '#/components/schemas/OAuth2RefreshToken'
      type: array
      x-konfig-is-used-in-successful-response: true
    AuthorizationServerListCredentialsKeysResponse:
      items:
        $ref: '#/components/schemas/JsonWebKey'
      type: array
      x-konfig-is-used-in-successful-response: true
    AuthorizationServerRotateKeyLifecycleResponse:
      items:
        $ref: '#/components/schemas/JsonWebKey'
      type: array
      x-konfig-is-used-in-successful-response: true
    AuthorizationServerGetPoliciesSuccessResponse:
      items:
        $ref: '#/components/schemas/AuthorizationServerPolicy'
      type: array
      x-konfig-is-used-in-successful-response: true
    AuthorizationServerEnumeratePolicyRulesResponse:
      items:
        $ref: '#/components/schemas/AuthorizationServerPolicyRule'
      type: array
      x-konfig-is-used-in-successful-response: true
    AuthorizationServerGetScopesResponse:
      items:
        $ref: '#/components/schemas/OAuth2Scope'
      type: array
      x-konfig-is-used-in-successful-response: true
    BrandGetAllBrandsResponse:
      items:
        $ref: '#/components/schemas/Brand'
      type: array
      x-konfig-is-used-in-successful-response: true
    BrandListEmailTemplatesResponse:
      items:
        $ref: '#/components/schemas/EmailTemplate'
      type: array
      x-konfig-is-used-in-successful-response: true
    BrandListEmailTemplateCustomizationsResponse:
      items:
        $ref: '#/components/schemas/EmailTemplateCustomization'
      type: array
      x-konfig-is-used-in-successful-response: true
    BrandGetThemesResponse:
      items:
        $ref: '#/components/schemas/ThemeResponse'
      type: array
      x-konfig-is-used-in-successful-response: true
    EventHookListSuccessEventsResponse:
      items:
        $ref: '#/components/schemas/EventHook'
      type: array
      x-konfig-is-used-in-successful-response: true
    FeatureGetSuccessResponse:
      items:
        $ref: '#/components/schemas/Feature'
      type: array
      x-konfig-is-used-in-successful-response: true
    FeatureListDependenciesResponse:
      items:
        $ref: '#/components/schemas/Feature'
      type: array
      x-konfig-is-used-in-successful-response: true
    FeatureListDependentsResponse:
      items:
        $ref: '#/components/schemas/Feature'
      type: array
      x-konfig-is-used-in-successful-response: true
    GroupListResponse:
      items:
        $ref: '#/components/schemas/Group'
      type: array
      x-konfig-is-used-in-successful-response: true
    GroupGetAllRulesResponse:
      items:
        $ref: '#/components/schemas/GroupRule'
      type: array
      x-konfig-is-used-in-successful-response: true
    GroupListAssignedAppsResponse:
      items:
        $ref: '#/components/schemas/Application'
      type: array
      x-konfig-is-used-in-successful-response: true
    GroupGetRoleListResponse:
      items:
        $ref: '#/components/schemas/Role'
      type: array
      x-konfig-is-used-in-successful-response: true
    GroupGetRoleTargetsCatalogAppsResponse:
      items:
        $ref: '#/components/schemas/CatalogApplication'
      type: array
      x-konfig-is-used-in-successful-response: true
    GroupListRoleTargetsGroupsResponse:
      items:
        $ref: '#/components/schemas/Group'
      type: array
      x-konfig-is-used-in-successful-response: true
    GroupEnumerateGroupMembersResponse:
      items:
        $ref: '#/components/schemas/User'
      type: array
      x-konfig-is-used-in-successful-response: true
    IdentityProviderListResponse:
      items:
        $ref: '#/components/schemas/IdentityProvider'
      type: array
      x-konfig-is-used-in-successful-response: true
    IdentityProviderEnumerateIdpKeysResponse:
      items:
        $ref: '#/components/schemas/JsonWebKey'
      type: array
      x-konfig-is-used-in-successful-response: true
    IdentityProviderListCsrsForCertificateSigningRequestsResponse:
      items:
        $ref: '#/components/schemas/Csr'
      type: array
      x-konfig-is-used-in-successful-response: true
    IdentityProviderListSigningKeyCredentialsResponse:
      items:
        $ref: '#/components/schemas/JsonWebKey'
      type: array
      x-konfig-is-used-in-successful-response: true
    IdentityProviderGetUserResponse:
      items:
        $ref: '#/components/schemas/IdentityProviderApplicationUser'
      type: array
      x-konfig-is-used-in-successful-response: true
    IdentityProviderGetSocialAuthTokensResponse:
      items:
        $ref: '#/components/schemas/SocialAuthToken'
      type: array
      x-konfig-is-used-in-successful-response: true
    InlineHookGetSuccessResponse:
      items:
        $ref: '#/components/schemas/InlineHook'
      type: array
      x-konfig-is-used-in-successful-response: true
    LogGetListEventsResponse:
      items:
        $ref: '#/components/schemas/LogEvent'
      type: array
      x-konfig-is-used-in-successful-response: true
    ProfileMappingListWithPaginationResponse:
      items:
        $ref: '#/components/schemas/ProfileMapping'
      type: array
      x-konfig-is-used-in-successful-response: true
    LinkedObjectGetUserLinkedObjectsResponse:
      items:
        $ref: '#/components/schemas/LinkedObject'
      type: array
      x-konfig-is-used-in-successful-response: true
    UserTypeGetAllUserTypesResponse:
      items:
        $ref: '#/components/schemas/UserType'
      type: array
      x-konfig-is-used-in-successful-response: true
    OrgListContactTypesResponse:
      items:
        $ref: '#/components/schemas/OrgContactTypeObj'
      type: array
      x-konfig-is-used-in-successful-response: true
    PolicyGetAllWithTypeResponse:
      items:
        $ref: '#/components/schemas/Policy'
      type: array
      x-konfig-is-used-in-successful-response: true
    PolicyEnumerateRulesResponse:
      items:
        $ref: '#/components/schemas/PolicyRule'
      type: array
      x-konfig-is-used-in-successful-response: true
    SubscriptionListRoleSubscriptionsResponse:
      items:
        $ref: '#/components/schemas/Subscription'
      type: array
      x-konfig-is-used-in-successful-response: true
    TemplateEnumerateSmsTemplatesResponse:
      items:
        $ref: '#/components/schemas/SmsTemplate'
      type: array
      x-konfig-is-used-in-successful-response: true
    TrustedOriginGetListResponse:
      items:
        $ref: '#/components/schemas/TrustedOrigin'
      type: array
      x-konfig-is-used-in-successful-response: true
    UserListActiveUsersResponse:
      items:
        $ref: '#/components/schemas/User'
      type: array
      x-konfig-is-used-in-successful-response: true
    UserListAssignedAppLinksResponse:
      items:
        $ref: '#/components/schemas/AppLink'
      type: array
      x-konfig-is-used-in-successful-response: true
    UserListClientsResponse:
      items:
        $ref: '#/components/schemas/OAuth2Client'
      type: array
      x-konfig-is-used-in-successful-response: true
    UserListGrantsForClientResponse:
      items:
        $ref: '#/components/schemas/OAuth2ScopeConsentGrant'
      type: array
      x-konfig-is-used-in-successful-response: true
    UserListRefreshTokensForUserAndClientResponse:
      items:
        $ref: '#/components/schemas/OAuth2RefreshToken'
      type: array
      x-konfig-is-used-in-successful-response: true
    UserFactorEnumerateEnrolledResponse:
      items:
        $ref: '#/components/schemas/UserFactor'
      type: array
      x-konfig-is-used-in-successful-response: true
    UserFactorEnumerateSupportedFactorsResponse:
      items:
        $ref: '#/components/schemas/UserFactor'
      type: array
      x-konfig-is-used-in-successful-response: true
    UserFactorEnumerateSecurityQuestionsResponse:
      items:
        $ref: '#/components/schemas/SecurityQuestion'
      type: array
      x-konfig-is-used-in-successful-response: true
    UserListGrantsResponse:
      items:
        $ref: '#/components/schemas/OAuth2ScopeConsentGrant'
      type: array
      x-konfig-is-used-in-successful-response: true
    UserGetMemberGroupsResponse:
      items:
        $ref: '#/components/schemas/Group'
      type: array
      x-konfig-is-used-in-successful-response: true
    UserListIdpsForUserResponse:
      items:
        $ref: '#/components/schemas/IdentityProvider'
      type: array
      x-konfig-is-used-in-successful-response: true
    UserGetLinkedObjectsResponse:
      items:
        $ref: '#/components/schemas/ResponseLinks'
      type: array
      x-konfig-is-used-in-successful-response: true
    UserListAssignedRolesResponse:
      items:
        $ref: '#/components/schemas/Role'
      type: array
      x-konfig-is-used-in-successful-response: true
    UserListAppTargetsForRoleResponse:
      items:
        $ref: '#/components/schemas/CatalogApplication'
      type: array
      x-konfig-is-used-in-successful-response: true
    UserListRoleTargetsGroupsResponse:
      items:
        $ref: '#/components/schemas/Group'
      type: array
      x-konfig-is-used-in-successful-response: true
    UserListSubscriptionsResponse:
      items:
        $ref: '#/components/schemas/Subscription'
      type: array
      x-konfig-is-used-in-successful-response: true
    NetworkZoneListZonesResponse:
      items:
        $ref: '#/components/schemas/NetworkZone'
      type: array
      x-konfig-is-used-in-successful-response: true
    konfig-generated-schema-paths--api-v1-apps-get-parameters-2-schema:
      example: -1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-apps-get-parameters-5-schema:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-apps-post-parameters-0-schema:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-apps-appId-groups-get-parameters-3-schema:
      example: -1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-apps-appId-tokens-get-parameters-3-schema:
      example: 20
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-apps-appId-users-get-parameters-4-schema:
      example: -1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-apps-appId-users-userId-delete-parameters-2-schema:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-authorizationServers-authServerId-clients-clientId-tokens-get-parameters-4-schema:
      example: -1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-authorizationServers-authServerId-scopes-get-parameters-4-schema:
      example: -1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-brands-brandId-templates-email-get-parameters-2-schema:
      example: 20
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-groups-get-parameters-3-schema:
      example: 10000
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-groups-rules-get-parameters-0-schema:
      example: 50
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-groups-groupId-apps-get-parameters-2-schema:
      example: 20
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-groups-groupId-roles-roleId-targets-catalog-apps-get-parameters-3-schema:
      example: 20
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-groups-groupId-roles-roleId-targets-groups-get-parameters-3-schema:
      example: 20
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-groups-groupId-users-get-parameters-2-schema:
      example: 1000
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-idps-get-parameters-2-schema:
      example: 20
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-idps-credentials-keys-get-parameters-1-schema:
      example: 20
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-logs-get-parameters-4-schema:
      example: 100
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-logs-get-parameters-5-schema:
      example: ASCENDING
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-mappings-get-parameters-1-schema:
      example: -1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-mappings-get-parameters-3-schema:
      example: ""
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-policies-get-parameters-2-schema:
      example: ""
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-policies-post-parameters-0-schema:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-policies-policyId-get-parameters-1-schema:
      example: ""
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-trustedOrigins-get-parameters-3-schema:
      example: -1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-users-get-parameters-2-schema:
      example: 10
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-users-post-parameters-0-schema:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-users-post-parameters-1-schema:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-users-post-parameters-2-schema:
      example: ""
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-users-userId-delete-parameters-1-schema:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-users-userId-clients-clientId-grants-get-parameters-4-schema:
      example: 20
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-users-userId-clients-clientId-tokens-get-parameters-4-schema:
      example: 20
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-users-userId-clients-clientId-tokens-tokenId-get-parameters-4-schema:
      example: 20
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-users-userId-credentials-forgot_password-post-x-okta-multi-operation-0-parameters-0:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-users-userId-credentials-forgot_password-post-x-okta-multi-operation-1-parameters-1:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-users-userId-factors-post-parameters-1-schema:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-users-userId-factors-post-parameters-3-schema:
      example: 300
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-users-userId-factors-post-parameters-4-schema:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-users-userId-factors-factorId-verify-post-parameters-3-schema:
      example: 300
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-users-userId-grants-get-parameters-4-schema:
      example: 20
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-users-userId-lifecycle-activate-post-parameters-1-schema:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-users-userId-lifecycle-deactivate-post-parameters-1-schema:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-users-userId-lifecycle-reactivate-post-parameters-1-schema:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-users-userId-linkedObjects-relationshipName-get-parameters-3-schema:
      example: -1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-users-userId-roles-roleId-targets-catalog-apps-get-parameters-3-schema:
      example: 20
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-users-userId-roles-roleId-targets-groups-get-parameters-3-schema:
      example: 20
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-users-userId-sessions-delete-parameters-1-schema:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-zones-get-parameters-1-schema:
      example: -1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AuthorizationServerPolicyRule-properties-status:
      example: ACTIVE
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AuthorizationServerPolicyRule-properties-system:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OktaSignOnPolicyRuleSignonActions-properties-rememberDeviceByDefault:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OktaSignOnPolicyRuleSignonActions-properties-requireFactor:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OktaSignOnPolicyRuleSignonSessionActions-properties-maxSessionIdleMinutes:
      example: 120
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OktaSignOnPolicyRuleSignonSessionActions-properties-maxSessionLifetimeMinutes:
      example: 0
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OktaSignOnPolicyRuleSignonSessionActions-properties-usePersistentCookie:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PasswordDictionaryCommon-properties-exclude:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PasswordPolicyPasswordSettingsAge-properties-expireWarnDays:
      example: 0
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PasswordPolicyPasswordSettingsAge-properties-historyCount:
      example: 0
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PasswordPolicyPasswordSettingsAge-properties-maxAgeDays:
      example: 0
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PasswordPolicyPasswordSettingsAge-properties-minAgeMinutes:
      example: 0
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PasswordPolicyPasswordSettingsComplexity-properties-excludeAttributes:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PasswordPolicyPasswordSettingsComplexity-properties-excludeUsername:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PasswordPolicyPasswordSettingsComplexity-properties-minLength:
      example: 8
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PasswordPolicyPasswordSettingsComplexity-properties-minLowerCase:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PasswordPolicyPasswordSettingsComplexity-properties-minNumber:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PasswordPolicyPasswordSettingsComplexity-properties-minSymbol:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PasswordPolicyPasswordSettingsComplexity-properties-minUpperCase:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PasswordPolicyRecoveryEmailRecoveryToken-properties-tokenLifetimeMinutes:
      example: 10080
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PasswordPolicyRecoveryFactorSettings-properties-status:
      example: INACTIVE
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PolicyRule-properties-status:
      example: ACTIVE
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PolicyRule-properties-system:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-single-parameter-schema-get--api-v1-apps:
      properties:
        q:
          type: string
        after:
          type: string
        limit:
          default: -1
          example: -1
          format: int32
          type: integer
          x-konfig-original-example: -1
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-apps-get-parameters-2-schema
        filter:
          type: string
        expand:
          type: string
        includeNonDeleted:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-apps-get-parameters-5-schema
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - q
      - after
      - limit
      - filter
      - expand
      - includeNonDeleted
    konfig-generated-schema-single-parameter-schema-post--api-v1-apps:
      properties:
        activate:
          default: true
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-apps-post-parameters-0-schema
        OktaAccessGateway-Agent:
          type: string
        _embedded:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        accessibility:
          $ref: '#/components/schemas/ApplicationAccessibility'
        created:
          format: date-time
          readOnly: true
          type: string
        credentials:
          $ref: '#/components/schemas/ApplicationCredentials'
        features:
          items:
            type: string
          type: array
        id:
          readOnly: true
          type: string
        label:
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        licensing:
          $ref: '#/components/schemas/ApplicationLicensing'
        name:
          readOnly: true
          type: string
        profile:
          additionalProperties:
            type: object
          type: object
        settings:
          $ref: '#/components/schemas/ApplicationSettings'
        signOnMode:
          $ref: '#/components/schemas/ApplicationSignOnMode'
        status:
          enum:
          - ACTIVE
          - INACTIVE
          - DELETED
          readOnly: true
          type: string
        visibility:
          $ref: '#/components/schemas/ApplicationVisibility'
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - activate
      - OktaAccessGateway-Agent
    konfig-generated-schema-single-parameter-schema-delete--api-v1-apps-appId:
      properties:
        appId:
          type: string
      required:
      - appId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - appId
    konfig-generated-schema-single-parameter-schema-get--api-v1-apps-appId:
      properties:
        appId:
          type: string
        expand:
          type: string
      required:
      - appId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - appId
      - expand
    konfig-generated-schema-single-parameter-schema-put--api-v1-apps-appId:
      properties:
        appId:
          type: string
        _embedded:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        accessibility:
          $ref: '#/components/schemas/ApplicationAccessibility'
        created:
          format: date-time
          readOnly: true
          type: string
        credentials:
          $ref: '#/components/schemas/ApplicationCredentials'
        features:
          items:
            type: string
          type: array
        id:
          readOnly: true
          type: string
        label:
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        licensing:
          $ref: '#/components/schemas/ApplicationLicensing'
        name:
          readOnly: true
          type: string
        profile:
          additionalProperties:
            type: object
          type: object
        settings:
          $ref: '#/components/schemas/ApplicationSettings'
        signOnMode:
          $ref: '#/components/schemas/ApplicationSignOnMode'
        status:
          enum:
          - ACTIVE
          - INACTIVE
          - DELETED
          readOnly: true
          type: string
        visibility:
          $ref: '#/components/schemas/ApplicationVisibility'
      required:
      - appId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - appId
    konfig-generated-schema-single-parameter-schema-get--api-v1-apps-appId-connections-default:
      properties:
        appId:
          type: string
      required:
      - appId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - appId
    konfig-generated-schema-single-parameter-schema-post--api-v1-apps-appId-connections-default:
      properties:
        appId:
          type: string
        activate:
          type: boolean
        profile:
          $ref: '#/components/schemas/ProvisioningConnectionProfile'
      required:
      - appId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - appId
      - activate
    konfig-generated-schema-single-parameter-schema-post--api-v1-apps-appId-connections-default-lifecycle-activate:
      properties:
        appId:
          type: string
      required:
      - appId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - appId
    konfig-generated-schema-single-parameter-schema-post--api-v1-apps-appId-connections-default-lifecycle-deactivate:
      properties:
        appId:
          type: string
      required:
      - appId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - appId
    konfig-generated-schema-single-parameter-schema-get--api-v1-apps-appId-credentials-csrs:
      properties:
        appId:
          type: string
      required:
      - appId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - appId
    konfig-generated-schema-single-parameter-schema-post--api-v1-apps-appId-credentials-csrs:
      properties:
        appId:
          type: string
        subject:
          $ref: '#/components/schemas/CsrMetadataSubject'
        subjectAltNames:
          $ref: '#/components/schemas/CsrMetadataSubjectAltNames'
      required:
      - appId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - appId
    konfig-generated-schema-single-parameter-schema-delete--api-v1-apps-appId-credentials-csrs-csrId:
      properties:
        appId:
          type: string
        csrId:
          type: string
      required:
      - appId
      - csrId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - appId
      - csrId
    konfig-generated-schema-single-parameter-schema-get--api-v1-apps-appId-credentials-csrs-csrId:
      properties:
        appId:
          type: string
        csrId:
          type: string
      required:
      - appId
      - csrId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - appId
      - csrId
    konfig-generated-schema-single-parameter-schema-post--api-v1-apps-appId-credentials-csrs-csrId-lifecycle-publish:
      properties:
        appId:
          type: string
        csrId:
          type: string
      required:
      - appId
      - csrId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - appId
      - csrId
    konfig-generated-schema-single-parameter-schema-get--api-v1-apps-appId-credentials-keys:
      properties:
        appId:
          type: string
      required:
      - appId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - appId
    konfig-generated-schema-single-parameter-schema-post--api-v1-apps-appId-credentials-keys-generate:
      properties:
        appId:
          type: string
        validityYears:
          type: integer
      required:
      - appId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - appId
      - validityYears
    konfig-generated-schema-single-parameter-schema-get--api-v1-apps-appId-credentials-keys-keyId:
      properties:
        appId:
          type: string
        keyId:
          type: string
      required:
      - appId
      - keyId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - appId
      - keyId
    konfig-generated-schema-single-parameter-schema-post--api-v1-apps-appId-credentials-keys-keyId-clone:
      properties:
        appId:
          type: string
        keyId:
          type: string
        targetAid:
          type: string
      required:
      - appId
      - keyId
      - targetAid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - appId
      - keyId
      - targetAid
    konfig-generated-schema-single-parameter-schema-get--api-v1-apps-appId-credentials-secrets:
      properties:
        appId:
          type: string
      required:
      - appId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - appId
    konfig-generated-schema-single-parameter-schema-post--api-v1-apps-appId-credentials-secrets:
      properties:
        appId:
          type: string
        client_secret:
          type: string
      required:
      - appId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - appId
    konfig-generated-schema-single-parameter-schema-delete--api-v1-apps-appId-credentials-secrets-secretId:
      properties:
        appId:
          type: string
        secretId:
          type: string
      required:
      - appId
      - secretId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - appId
      - secretId
    konfig-generated-schema-single-parameter-schema-get--api-v1-apps-appId-credentials-secrets-secretId:
      properties:
        appId:
          type: string
        secretId:
          type: string
      required:
      - appId
      - secretId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - appId
      - secretId
    konfig-generated-schema-single-parameter-schema-post--api-v1-apps-appId-credentials-secrets-secretId-lifecycle-activate:
      properties:
        appId:
          type: string
        secretId:
          type: string
      required:
      - appId
      - secretId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - appId
      - secretId
    konfig-generated-schema-single-parameter-schema-post--api-v1-apps-appId-credentials-secrets-secretId-lifecycle-deactivate:
      properties:
        appId:
          type: string
        secretId:
          type: string
      required:
      - appId
      - secretId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - appId
      - secretId
    konfig-generated-schema-single-parameter-schema-get--api-v1-apps-appId-features:
      properties:
        appId:
          type: string
      required:
      - appId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - appId
    konfig-generated-schema-single-parameter-schema-get--api-v1-apps-appId-features-name:
      properties:
        appId:
          type: string
        name:
          type: string
      required:
      - appId
      - name
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - appId
      - name
    konfig-generated-schema-single-parameter-schema-put--api-v1-apps-appId-features-name:
      properties:
        appId:
          type: string
        name:
          type: string
        create:
          $ref: '#/components/schemas/CapabilitiesCreateObject'
        update:
          $ref: '#/components/schemas/CapabilitiesUpdateObject'
      required:
      - appId
      - name
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - appId
      - name
    konfig-generated-schema-single-parameter-schema-get--api-v1-apps-appId-grants:
      properties:
        appId:
          type: string
        expand:
          type: string
      required:
      - appId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - appId
      - expand
    konfig-generated-schema-single-parameter-schema-post--api-v1-apps-appId-grants:
      properties:
        appId:
          type: string
        _embedded:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        clientId:
          type: string
        created:
          format: date-time
          readOnly: true
          type: string
        createdBy:
          $ref: '#/components/schemas/OAuth2Actor'
        id:
          readOnly: true
          type: string
        issuer:
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        scopeId:
          type: string
        source:
          $ref: '#/components/schemas/OAuth2ScopeConsentGrantSource'
        status:
          $ref: '#/components/schemas/OAuth2ScopeConsentGrantStatus'
        userId:
          type: string
      required:
      - appId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - appId
    konfig-generated-schema-single-parameter-schema-delete--api-v1-apps-appId-grants-grantId:
      properties:
        appId:
          type: string
        grantId:
          type: string
      required:
      - appId
      - grantId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - appId
      - grantId
    konfig-generated-schema-single-parameter-schema-get--api-v1-apps-appId-grants-grantId:
      properties:
        appId:
          type: string
        grantId:
          type: string
        expand:
          type: string
      required:
      - appId
      - grantId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - appId
      - grantId
      - expand
    konfig-generated-schema-single-parameter-schema-get--api-v1-apps-appId-groups:
      properties:
        appId:
          type: string
        q:
          type: string
        after:
          type: string
        limit:
          default: -1
          example: -1
          format: int32
          type: integer
          x-konfig-original-example: -1
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-apps-appId-groups-get-parameters-3-schema
        expand:
          type: string
      required:
      - appId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - appId
      - q
      - after
      - limit
      - expand
    konfig-generated-schema-single-parameter-schema-delete--api-v1-apps-appId-groups-groupId:
      properties:
        appId:
          type: string
        groupId:
          type: string
      required:
      - appId
      - groupId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - appId
      - groupId
    konfig-generated-schema-single-parameter-schema-get--api-v1-apps-appId-groups-groupId:
      properties:
        appId:
          type: string
        groupId:
          type: string
        expand:
          type: string
      required:
      - appId
      - groupId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - appId
      - groupId
      - expand
    konfig-generated-schema-single-parameter-schema-put--api-v1-apps-appId-groups-groupId:
      properties:
        appId:
          type: string
        groupId:
          type: string
        _embedded:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        priority:
          type: integer
        profile:
          additionalProperties:
            type: object
          type: object
      required:
      - appId
      - groupId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - appId
      - groupId
    konfig-generated-schema-single-parameter-schema-post--api-v1-apps-appId-lifecycle-activate:
      properties:
        appId:
          type: string
      required:
      - appId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - appId
    konfig-generated-schema-single-parameter-schema-post--api-v1-apps-appId-lifecycle-deactivate:
      properties:
        appId:
          type: string
      required:
      - appId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - appId
    konfig-generated-schema-single-parameter-schema-post--api-v1-apps-appId-logo:
      properties:
        appId:
          type: string
        file:
          format: binary
          type: string
      required:
      - appId
      - file
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - appId
    konfig-generated-schema-single-parameter-schema-put--api-v1-apps-appId-policies-policyId:
      properties:
        appId:
          type: string
        policyId:
          type: string
      required:
      - appId
      - policyId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - appId
      - policyId
    konfig-generated-schema-single-parameter-schema-get--api-v1-apps-appId-sso-saml-metadata:
      properties:
        appId:
          type: string
        kid:
          type: string
      required:
      - appId
      - kid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - appId
      - kid
    konfig-generated-schema-single-parameter-schema-delete--api-v1-apps-appId-tokens:
      properties:
        appId:
          type: string
      required:
      - appId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - appId
    konfig-generated-schema-single-parameter-schema-get--api-v1-apps-appId-tokens:
      properties:
        appId:
          type: string
        expand:
          type: string
        after:
          type: string
        limit:
          default: 20
          example: 20
          format: int32
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-apps-appId-tokens-get-parameters-3-schema
      required:
      - appId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - appId
      - expand
      - after
      - limit
    konfig-generated-schema-single-parameter-schema-delete--api-v1-apps-appId-tokens-tokenId:
      properties:
        appId:
          type: string
        tokenId:
          type: string
      required:
      - appId
      - tokenId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - appId
      - tokenId
    konfig-generated-schema-single-parameter-schema-get--api-v1-apps-appId-tokens-tokenId:
      properties:
        appId:
          type: string
        tokenId:
          type: string
        expand:
          type: string
      required:
      - appId
      - tokenId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - appId
      - tokenId
      - expand
    konfig-generated-schema-single-parameter-schema-get--api-v1-apps-appId-users:
      properties:
        appId:
          type: string
        q:
          type: string
        query_scope:
          type: string
        after:
          type: string
        limit:
          default: -1
          example: -1
          format: int32
          type: integer
          x-konfig-original-example: -1
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-apps-appId-users-get-parameters-4-schema
        filter:
          type: string
        expand:
          type: string
      required:
      - appId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - appId
      - q
      - query_scope
      - after
      - limit
      - filter
      - expand
    konfig-generated-schema-single-parameter-schema-post--api-v1-apps-appId-users:
      properties:
        appId:
          type: string
        _embedded:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        created:
          format: date-time
          readOnly: true
          type: string
        credentials:
          $ref: '#/components/schemas/AppUserCredentials'
        externalId:
          readOnly: true
          type: string
        id:
          type: string
        lastSync:
          format: date-time
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        passwordChanged:
          format: date-time
          readOnly: true
          type: string
        profile:
          additionalProperties:
            type: object
          type: object
        scope:
          type: string
        status:
          readOnly: true
          type: string
        statusChanged:
          format: date-time
          readOnly: true
          type: string
        syncState:
          readOnly: true
          type: string
      required:
      - appId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - appId
    konfig-generated-schema-single-parameter-schema-delete--api-v1-apps-appId-users-userId:
      properties:
        appId:
          type: string
        userId:
          type: string
        sendEmail:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-apps-appId-users-userId-delete-parameters-2-schema
      required:
      - appId
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - appId
      - userId
      - sendEmail
    konfig-generated-schema-single-parameter-schema-get--api-v1-apps-appId-users-userId:
      properties:
        appId:
          type: string
        userId:
          type: string
        expand:
          type: string
      required:
      - appId
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - appId
      - userId
      - expand
    konfig-generated-schema-single-parameter-schema-post--api-v1-apps-appId-users-userId:
      properties:
        appId:
          type: string
        userId:
          type: string
        _embedded:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        created:
          format: date-time
          readOnly: true
          type: string
        credentials:
          $ref: '#/components/schemas/AppUserCredentials'
        externalId:
          readOnly: true
          type: string
        id:
          type: string
        lastSync:
          format: date-time
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        passwordChanged:
          format: date-time
          readOnly: true
          type: string
        profile:
          additionalProperties:
            type: object
          type: object
        scope:
          type: string
        status:
          readOnly: true
          type: string
        statusChanged:
          format: date-time
          readOnly: true
          type: string
        syncState:
          readOnly: true
          type: string
      required:
      - appId
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - appId
      - userId
    konfig-generated-schema-single-parameter-schema-get--api-v1-authenticators:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--api-v1-authenticators:
      properties:
        activate:
          type: boolean
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        key:
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        provider:
          $ref: '#/components/schemas/AuthenticatorProvider'
        settings:
          $ref: '#/components/schemas/AuthenticatorSettings'
        status:
          $ref: '#/components/schemas/AuthenticatorStatus'
        type:
          $ref: '#/components/schemas/AuthenticatorType'
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - activate
    konfig-generated-schema-single-parameter-schema-get--api-v1-authenticators-authenticatorId:
      properties:
        authenticatorId:
          type: string
      required:
      - authenticatorId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - authenticatorId
    konfig-generated-schema-single-parameter-schema-put--api-v1-authenticators-authenticatorId:
      properties:
        authenticatorId:
          type: string
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        key:
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        provider:
          $ref: '#/components/schemas/AuthenticatorProvider'
        settings:
          $ref: '#/components/schemas/AuthenticatorSettings'
        status:
          $ref: '#/components/schemas/AuthenticatorStatus'
        type:
          $ref: '#/components/schemas/AuthenticatorType'
      required:
      - authenticatorId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - authenticatorId
    konfig-generated-schema-single-parameter-schema-post--api-v1-authenticators-authenticatorId-lifecycle-activate:
      properties:
        authenticatorId:
          type: string
      required:
      - authenticatorId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - authenticatorId
    konfig-generated-schema-single-parameter-schema-post--api-v1-authenticators-authenticatorId-lifecycle-deactivate:
      properties:
        authenticatorId:
          type: string
      required:
      - authenticatorId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - authenticatorId
    konfig-generated-schema-single-parameter-schema-get--api-v1-authorizationServers:
      properties:
        q:
          type: string
        limit:
          type: string
        after:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - q
      - limit
      - after
    konfig-generated-schema-single-parameter-schema-post--api-v1-authorizationServers:
      properties:
        description:
          type: string
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        audiences:
          items:
            type: string
          type: array
        created:
          format: date-time
          readOnly: true
          type: string
        credentials:
          $ref: '#/components/schemas/AuthorizationServerCredentials'
        default:
          readOnly: true
          type: boolean
        id:
          readOnly: true
          type: string
        issuer:
          type: string
        issuerMode:
          enum:
          - ORG_URL
          - CUSTOM_URL
          - DYNAMIC
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        status:
          enum:
          - ACTIVE
          - INACTIVE
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--api-v1-authorizationServers-authServerId:
      properties:
        authServerId:
          type: string
      required:
      - authServerId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - authServerId
    konfig-generated-schema-single-parameter-schema-get--api-v1-authorizationServers-authServerId:
      properties:
        authServerId:
          type: string
      required:
      - authServerId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - authServerId
    konfig-generated-schema-single-parameter-schema-put--api-v1-authorizationServers-authServerId:
      properties:
        authServerId:
          type: string
        description:
          type: string
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        audiences:
          items:
            type: string
          type: array
        created:
          format: date-time
          readOnly: true
          type: string
        credentials:
          $ref: '#/components/schemas/AuthorizationServerCredentials'
        default:
          readOnly: true
          type: boolean
        id:
          readOnly: true
          type: string
        issuer:
          type: string
        issuerMode:
          enum:
          - ORG_URL
          - CUSTOM_URL
          - DYNAMIC
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        status:
          enum:
          - ACTIVE
          - INACTIVE
          type: string
      required:
      - authServerId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - authServerId
    konfig-generated-schema-single-parameter-schema-get--api-v1-authorizationServers-authServerId-claims:
      properties:
        authServerId:
          type: string
      required:
      - authServerId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - authServerId
    konfig-generated-schema-single-parameter-schema-post--api-v1-authorizationServers-authServerId-claims:
      properties:
        authServerId:
          type: string
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        alwaysIncludeInToken:
          type: boolean
        claimType:
          enum:
          - IDENTITY
          - RESOURCE
          type: string
        conditions:
          $ref: '#/components/schemas/OAuth2ClaimConditions'
        group_filter_type:
          enum:
          - STARTS_WITH
          - EQUALS
          - CONTAINS
          - REGEX
          type: string
        id:
          readOnly: true
          type: string
        name:
          type: string
        status:
          enum:
          - ACTIVE
          - INACTIVE
          type: string
        system:
          type: boolean
        value:
          type: string
        valueType:
          enum:
          - EXPRESSION
          - GROUPS
          - SYSTEM
          type: string
      required:
      - authServerId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - authServerId
    konfig-generated-schema-single-parameter-schema-delete--api-v1-authorizationServers-authServerId-claims-claimId:
      properties:
        authServerId:
          type: string
        claimId:
          type: string
      required:
      - authServerId
      - claimId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - authServerId
      - claimId
    konfig-generated-schema-single-parameter-schema-get--api-v1-authorizationServers-authServerId-claims-claimId:
      properties:
        authServerId:
          type: string
        claimId:
          type: string
      required:
      - authServerId
      - claimId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - authServerId
      - claimId
    konfig-generated-schema-single-parameter-schema-put--api-v1-authorizationServers-authServerId-claims-claimId:
      properties:
        authServerId:
          type: string
        claimId:
          type: string
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        alwaysIncludeInToken:
          type: boolean
        claimType:
          enum:
          - IDENTITY
          - RESOURCE
          type: string
        conditions:
          $ref: '#/components/schemas/OAuth2ClaimConditions'
        group_filter_type:
          enum:
          - STARTS_WITH
          - EQUALS
          - CONTAINS
          - REGEX
          type: string
        id:
          readOnly: true
          type: string
        name:
          type: string
        status:
          enum:
          - ACTIVE
          - INACTIVE
          type: string
        system:
          type: boolean
        value:
          type: string
        valueType:
          enum:
          - EXPRESSION
          - GROUPS
          - SYSTEM
          type: string
      required:
      - authServerId
      - claimId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - authServerId
      - claimId
    konfig-generated-schema-single-parameter-schema-get--api-v1-authorizationServers-authServerId-clients:
      properties:
        authServerId:
          type: string
      required:
      - authServerId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - authServerId
    konfig-generated-schema-single-parameter-schema-delete--api-v1-authorizationServers-authServerId-clients-clientId-tokens:
      properties:
        authServerId:
          type: string
        clientId:
          type: string
      required:
      - authServerId
      - clientId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - authServerId
      - clientId
    konfig-generated-schema-single-parameter-schema-get--api-v1-authorizationServers-authServerId-clients-clientId-tokens:
      properties:
        authServerId:
          type: string
        clientId:
          type: string
        expand:
          type: string
        after:
          type: string
        limit:
          default: -1
          example: -1
          format: int32
          type: integer
          x-konfig-original-example: -1
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-authorizationServers-authServerId-clients-clientId-tokens-get-parameters-4-schema
      required:
      - authServerId
      - clientId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - authServerId
      - clientId
      - expand
      - after
      - limit
    ? konfig-generated-schema-single-parameter-schema-delete--api-v1-authorizationServers-authServerId-clients-clientId-tokens-tokenId
    : properties:
        authServerId:
          type: string
        clientId:
          type: string
        tokenId:
          type: string
      required:
      - authServerId
      - clientId
      - tokenId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - authServerId
      - clientId
      - tokenId
    konfig-generated-schema-single-parameter-schema-get--api-v1-authorizationServers-authServerId-clients-clientId-tokens-tokenId:
      properties:
        authServerId:
          type: string
        clientId:
          type: string
        tokenId:
          type: string
        expand:
          type: string
      required:
      - authServerId
      - clientId
      - tokenId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - authServerId
      - clientId
      - tokenId
      - expand
    konfig-generated-schema-single-parameter-schema-get--api-v1-authorizationServers-authServerId-credentials-keys:
      properties:
        authServerId:
          type: string
      required:
      - authServerId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - authServerId
    konfig-generated-schema-single-parameter-schema-post--api-v1-authorizationServers-authServerId-credentials-lifecycle-keyRotate:
      properties:
        authServerId:
          type: string
        use:
          enum:
          - sig
          type: string
      required:
      - authServerId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - authServerId
    konfig-generated-schema-single-parameter-schema-post--api-v1-authorizationServers-authServerId-lifecycle-activate:
      properties:
        authServerId:
          type: string
      required:
      - authServerId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - authServerId
    konfig-generated-schema-single-parameter-schema-post--api-v1-authorizationServers-authServerId-lifecycle-deactivate:
      properties:
        authServerId:
          type: string
      required:
      - authServerId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - authServerId
    konfig-generated-schema-single-parameter-schema-get--api-v1-authorizationServers-authServerId-policies:
      properties:
        authServerId:
          type: string
      required:
      - authServerId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - authServerId
    konfig-generated-schema-single-parameter-schema-post--api-v1-authorizationServers-authServerId-policies:
      properties:
        authServerId:
          type: string
        description:
          type: string
        _embedded:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        conditions:
          $ref: '#/components/schemas/PolicyRuleConditions'
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        priority:
          type: integer
        status:
          enum:
          - ACTIVE
          - INACTIVE
          type: string
        system:
          type: boolean
        type:
          $ref: '#/components/schemas/PolicyType'
      required:
      - authServerId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - authServerId
    konfig-generated-schema-single-parameter-schema-delete--api-v1-authorizationServers-authServerId-policies-policyId:
      properties:
        authServerId:
          type: string
        policyId:
          type: string
      required:
      - authServerId
      - policyId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - authServerId
      - policyId
    konfig-generated-schema-single-parameter-schema-get--api-v1-authorizationServers-authServerId-policies-policyId:
      properties:
        authServerId:
          type: string
        policyId:
          type: string
      required:
      - authServerId
      - policyId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - authServerId
      - policyId
    konfig-generated-schema-single-parameter-schema-put--api-v1-authorizationServers-authServerId-policies-policyId:
      properties:
        authServerId:
          type: string
        policyId:
          type: string
        description:
          type: string
        _embedded:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        conditions:
          $ref: '#/components/schemas/PolicyRuleConditions'
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        priority:
          type: integer
        status:
          enum:
          - ACTIVE
          - INACTIVE
          type: string
        system:
          type: boolean
        type:
          $ref: '#/components/schemas/PolicyType'
      required:
      - authServerId
      - policyId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - authServerId
      - policyId
    ? konfig-generated-schema-single-parameter-schema-post--api-v1-authorizationServers-authServerId-policies-policyId-lifecycle-activate
    : properties:
        authServerId:
          type: string
        policyId:
          type: string
      required:
      - authServerId
      - policyId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - authServerId
      - policyId
    ? konfig-generated-schema-single-parameter-schema-post--api-v1-authorizationServers-authServerId-policies-policyId-lifecycle-deactivate
    : properties:
        authServerId:
          type: string
        policyId:
          type: string
      required:
      - authServerId
      - policyId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - authServerId
      - policyId
    konfig-generated-schema-single-parameter-schema-get--api-v1-authorizationServers-authServerId-policies-policyId-rules:
      properties:
        authServerId:
          type: string
        policyId:
          type: string
      required:
      - authServerId
      - policyId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - authServerId
      - policyId
    konfig-generated-schema-single-parameter-schema-post--api-v1-authorizationServers-authServerId-policies-policyId-rules:
      properties:
        authServerId:
          type: string
        policyId:
          type: string
        actions:
          $ref: '#/components/schemas/AuthorizationServerPolicyRuleActions'
        conditions:
          $ref: '#/components/schemas/AuthorizationServerPolicyRuleConditions'
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        priority:
          type: integer
        status:
          default: ACTIVE
          enum:
          - ACTIVE
          - INACTIVE
          example: ACTIVE
          type: string
          x-konfig-original-example: ACTIVE
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AuthorizationServerPolicyRule-properties-status
        system:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AuthorizationServerPolicyRule-properties-system
        type:
          enum:
          - RESOURCE_ACCESS
          type: string
      required:
      - authServerId
      - policyId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - authServerId
      - policyId
    konfig-generated-schema-single-parameter-schema-delete--api-v1-authorizationServers-authServerId-policies-policyId-rules-ruleId:
      properties:
        authServerId:
          type: string
        policyId:
          type: string
        ruleId:
          type: string
      required:
      - authServerId
      - policyId
      - ruleId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - authServerId
      - policyId
      - ruleId
    konfig-generated-schema-single-parameter-schema-get--api-v1-authorizationServers-authServerId-policies-policyId-rules-ruleId:
      properties:
        authServerId:
          type: string
        policyId:
          type: string
        ruleId:
          type: string
      required:
      - authServerId
      - policyId
      - ruleId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - authServerId
      - policyId
      - ruleId
    konfig-generated-schema-single-parameter-schema-put--api-v1-authorizationServers-authServerId-policies-policyId-rules-ruleId:
      properties:
        authServerId:
          type: string
        policyId:
          type: string
        ruleId:
          type: string
        actions:
          $ref: '#/components/schemas/AuthorizationServerPolicyRuleActions'
        conditions:
          $ref: '#/components/schemas/AuthorizationServerPolicyRuleConditions'
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        priority:
          type: integer
        status:
          default: ACTIVE
          enum:
          - ACTIVE
          - INACTIVE
          example: ACTIVE
          type: string
          x-konfig-original-example: ACTIVE
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AuthorizationServerPolicyRule-properties-status
        system:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AuthorizationServerPolicyRule-properties-system
        type:
          enum:
          - RESOURCE_ACCESS
          type: string
      required:
      - authServerId
      - policyId
      - ruleId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - authServerId
      - policyId
      - ruleId
    ? konfig-generated-schema-single-parameter-schema-post--api-v1-authorizationServers-authServerId-policies-policyId-rules-ruleId-lifecycle-activate
    : properties:
        authServerId:
          type: string
        policyId:
          type: string
        ruleId:
          type: string
      required:
      - authServerId
      - policyId
      - ruleId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - authServerId
      - policyId
      - ruleId
    ? konfig-generated-schema-single-parameter-schema-post--api-v1-authorizationServers-authServerId-policies-policyId-rules-ruleId-lifecycle-deactivate
    : properties:
        authServerId:
          type: string
        policyId:
          type: string
        ruleId:
          type: string
      required:
      - authServerId
      - policyId
      - ruleId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - authServerId
      - policyId
      - ruleId
    konfig-generated-schema-single-parameter-schema-get--api-v1-authorizationServers-authServerId-scopes:
      properties:
        authServerId:
          type: string
        q:
          type: string
        filter:
          type: string
        cursor:
          type: string
        limit:
          default: -1
          example: -1
          format: int32
          type: integer
          x-konfig-original-example: -1
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-authorizationServers-authServerId-scopes-get-parameters-4-schema
      required:
      - authServerId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - authServerId
      - q
      - filter
      - cursor
      - limit
    konfig-generated-schema-single-parameter-schema-post--api-v1-authorizationServers-authServerId-scopes:
      properties:
        authServerId:
          type: string
        description:
          type: string
        consent:
          enum:
          - REQUIRED
          - IMPLICIT
          - ADMIN
          type: string
        default:
          type: boolean
        displayName:
          type: string
        id:
          readOnly: true
          type: string
        metadataPublish:
          enum:
          - ALL_CLIENTS
          - NO_CLIENTS
          type: string
        name:
          type: string
        system:
          type: boolean
      required:
      - authServerId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - authServerId
    konfig-generated-schema-single-parameter-schema-delete--api-v1-authorizationServers-authServerId-scopes-scopeId:
      properties:
        authServerId:
          type: string
        scopeId:
          type: string
      required:
      - authServerId
      - scopeId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - authServerId
      - scopeId
    konfig-generated-schema-single-parameter-schema-get--api-v1-authorizationServers-authServerId-scopes-scopeId:
      properties:
        authServerId:
          type: string
        scopeId:
          type: string
      required:
      - authServerId
      - scopeId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - authServerId
      - scopeId
    konfig-generated-schema-single-parameter-schema-put--api-v1-authorizationServers-authServerId-scopes-scopeId:
      properties:
        authServerId:
          type: string
        scopeId:
          type: string
        description:
          type: string
        consent:
          enum:
          - REQUIRED
          - IMPLICIT
          - ADMIN
          type: string
        default:
          type: boolean
        displayName:
          type: string
        id:
          readOnly: true
          type: string
        metadataPublish:
          enum:
          - ALL_CLIENTS
          - NO_CLIENTS
          type: string
        name:
          type: string
        system:
          type: boolean
      required:
      - authServerId
      - scopeId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - authServerId
      - scopeId
    konfig-generated-schema-single-parameter-schema-get--api-v1-brands:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--api-v1-brands-brandId:
      properties:
        brandId:
          type: string
      required:
      - brandId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - brandId
    konfig-generated-schema-single-parameter-schema-put--api-v1-brands-brandId:
      properties:
        brandId:
          type: string
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        agreeToCustomPrivacyPolicy:
          type: boolean
        customPrivacyPolicyUrl:
          type: string
        id:
          readOnly: true
          type: string
        removePoweredByOkta:
          type: boolean
      required:
      - brandId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - brandId
    konfig-generated-schema-single-parameter-schema-get--api-v1-brands-brandId-templates-email:
      properties:
        brandId:
          type: string
        after:
          type: string
        limit:
          default: 20
          example: 20
          format: int32
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-brands-brandId-templates-email-get-parameters-2-schema
      required:
      - brandId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - brandId
      - after
      - limit
    konfig-generated-schema-single-parameter-schema-get--api-v1-brands-brandId-templates-email-templateName:
      properties:
        brandId:
          type: string
        templateName:
          type: string
      required:
      - brandId
      - templateName
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - brandId
      - templateName
    konfig-generated-schema-single-parameter-schema-delete--api-v1-brands-brandId-templates-email-templateName-customizations:
      properties:
        brandId:
          type: string
        templateName:
          type: string
      required:
      - brandId
      - templateName
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - brandId
      - templateName
    konfig-generated-schema-single-parameter-schema-get--api-v1-brands-brandId-templates-email-templateName-customizations:
      properties:
        brandId:
          type: string
        templateName:
          type: string
      required:
      - brandId
      - templateName
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - brandId
      - templateName
    konfig-generated-schema-single-parameter-schema-post--api-v1-brands-brandId-templates-email-templateName-customizations:
      properties:
        brandId:
          type: string
        templateName:
          type: string
        body:
          type: string
        isDefault:
          type: boolean
        language:
          description: unique under each email template
          type: string
        subject:
          type: string
      required:
      - brandId
      - templateName
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - brandId
      - templateName
    ? konfig-generated-schema-single-parameter-schema-delete--api-v1-brands-brandId-templates-email-templateName-customizations-customizationId
    : properties:
        brandId:
          type: string
        templateName:
          type: string
        customizationId:
          type: string
      required:
      - brandId
      - customizationId
      - templateName
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - brandId
      - templateName
      - customizationId
    ? konfig-generated-schema-single-parameter-schema-get--api-v1-brands-brandId-templates-email-templateName-customizations-customizationId
    : properties:
        brandId:
          type: string
        templateName:
          type: string
        customizationId:
          type: string
      required:
      - brandId
      - customizationId
      - templateName
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - brandId
      - templateName
      - customizationId
    ? konfig-generated-schema-single-parameter-schema-put--api-v1-brands-brandId-templates-email-templateName-customizations-customizationId
    : properties:
        brandId:
          type: string
        templateName:
          type: string
        customizationId:
          type: string
        body:
          type: string
        isDefault:
          type: boolean
        language:
          description: unique under each email template
          type: string
        subject:
          type: string
      required:
      - brandId
      - customizationId
      - templateName
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - brandId
      - templateName
      - customizationId
    ? konfig-generated-schema-single-parameter-schema-get--api-v1-brands-brandId-templates-email-templateName-customizations-customizationId-preview
    : properties:
        brandId:
          type: string
        templateName:
          type: string
        customizationId:
          type: string
      required:
      - brandId
      - customizationId
      - templateName
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - brandId
      - templateName
      - customizationId
    konfig-generated-schema-single-parameter-schema-get--api-v1-brands-brandId-templates-email-templateName-default-content:
      properties:
        brandId:
          type: string
        templateName:
          type: string
      required:
      - brandId
      - templateName
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - brandId
      - templateName
    konfig-generated-schema-single-parameter-schema-get--api-v1-brands-brandId-templates-email-templateName-default-content-preview:
      properties:
        brandId:
          type: string
        templateName:
          type: string
      required:
      - brandId
      - templateName
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - brandId
      - templateName
    konfig-generated-schema-single-parameter-schema-post--api-v1-brands-brandId-templates-email-templateName-test:
      properties:
        brandId:
          type: string
        templateName:
          type: string
        customizationId:
          type: string
      required:
      - brandId
      - templateName
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - brandId
      - templateName
    konfig-generated-schema-single-parameter-schema-get--api-v1-brands-brandId-themes:
      properties:
        brandId:
          type: string
      required:
      - brandId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - brandId
    konfig-generated-schema-single-parameter-schema-get--api-v1-brands-brandId-themes-themeId:
      properties:
        brandId:
          type: string
        themeId:
          type: string
      required:
      - brandId
      - themeId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - brandId
      - themeId
    konfig-generated-schema-single-parameter-schema-put--api-v1-brands-brandId-themes-themeId:
      properties:
        brandId:
          type: string
        themeId:
          type: string
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        backgroundImage:
          readOnly: true
          type: string
        emailTemplateTouchPointVariant:
          $ref: '#/components/schemas/EmailTemplateTouchPointVariant'
        endUserDashboardTouchPointVariant:
          $ref: '#/components/schemas/EndUserDashboardTouchPointVariant'
        errorPageTouchPointVariant:
          $ref: '#/components/schemas/ErrorPageTouchPointVariant'
        primaryColorContrastHex:
          type: string
        primaryColorHex:
          type: string
        secondaryColorContrastHex:
          type: string
        secondaryColorHex:
          type: string
        signInPageTouchPointVariant:
          $ref: '#/components/schemas/SignInPageTouchPointVariant'
      required:
      - brandId
      - themeId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - brandId
      - themeId
    konfig-generated-schema-single-parameter-schema-delete--api-v1-brands-brandId-themes-themeId-background-image:
      properties:
        brandId:
          type: string
        themeId:
          type: string
      required:
      - brandId
      - themeId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - brandId
      - themeId
    konfig-generated-schema-single-parameter-schema-post--api-v1-brands-brandId-themes-themeId-background-image:
      properties:
        brandId:
          type: string
        themeId:
          type: string
        file:
          format: binary
          type: string
      required:
      - brandId
      - file
      - themeId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - brandId
      - themeId
    konfig-generated-schema-single-parameter-schema-delete--api-v1-brands-brandId-themes-themeId-favicon:
      properties:
        brandId:
          type: string
        themeId:
          type: string
      required:
      - brandId
      - themeId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - brandId
      - themeId
    konfig-generated-schema-single-parameter-schema-post--api-v1-brands-brandId-themes-themeId-favicon:
      properties:
        brandId:
          type: string
        themeId:
          type: string
        file:
          format: binary
          type: string
      required:
      - brandId
      - file
      - themeId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - brandId
      - themeId
    konfig-generated-schema-single-parameter-schema-delete--api-v1-brands-brandId-themes-themeId-logo:
      properties:
        brandId:
          type: string
        themeId:
          type: string
      required:
      - brandId
      - themeId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - brandId
      - themeId
    konfig-generated-schema-single-parameter-schema-post--api-v1-brands-brandId-themes-themeId-logo:
      properties:
        brandId:
          type: string
        themeId:
          type: string
        file:
          format: binary
          type: string
      required:
      - brandId
      - file
      - themeId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - brandId
      - themeId
    konfig-generated-schema-single-parameter-schema-get--api-v1-domains:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--api-v1-domains:
      properties:
        certificateSourceType:
          $ref: '#/components/schemas/DomainCertificateSourceType'
        dnsRecords:
          items:
            $ref: '#/components/schemas/DNSRecord'
          type: array
        domain:
          type: string
        id:
          readOnly: true
          type: string
        publicCertificate:
          $ref: '#/components/schemas/DomainCertificateMetadata'
        validationStatus:
          $ref: '#/components/schemas/DomainValidationStatus'
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--api-v1-domains-domainId:
      properties:
        domainId:
          type: string
      required:
      - domainId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - domainId
    konfig-generated-schema-single-parameter-schema-get--api-v1-domains-domainId:
      properties:
        domainId:
          type: string
      required:
      - domainId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - domainId
    konfig-generated-schema-single-parameter-schema-put--api-v1-domains-domainId-certificate:
      properties:
        domainId:
          type: string
        certificate:
          type: string
        certificateChain:
          type: string
        privateKey:
          type: string
        type:
          $ref: '#/components/schemas/DomainCertificateType'
      required:
      - domainId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - domainId
    konfig-generated-schema-single-parameter-schema-post--api-v1-domains-domainId-verify:
      properties:
        domainId:
          type: string
      required:
      - domainId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - domainId
    konfig-generated-schema-single-parameter-schema-get--api-v1-eventHooks:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--api-v1-eventHooks:
      properties:
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        channel:
          $ref: '#/components/schemas/EventHookChannel'
        created:
          format: date-time
          readOnly: true
          type: string
        createdBy:
          type: string
        events:
          $ref: '#/components/schemas/EventSubscriptions'
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        status:
          enum:
          - ACTIVE
          - INACTIVE
          type: string
        verificationStatus:
          enum:
          - UNVERIFIED
          - VERIFIED
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--api-v1-eventHooks-eventHookId:
      properties:
        eventHookId:
          type: string
      required:
      - eventHookId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - eventHookId
    konfig-generated-schema-single-parameter-schema-get--api-v1-eventHooks-eventHookId:
      properties:
        eventHookId:
          type: string
      required:
      - eventHookId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - eventHookId
    konfig-generated-schema-single-parameter-schema-put--api-v1-eventHooks-eventHookId:
      properties:
        eventHookId:
          type: string
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        channel:
          $ref: '#/components/schemas/EventHookChannel'
        created:
          format: date-time
          readOnly: true
          type: string
        createdBy:
          type: string
        events:
          $ref: '#/components/schemas/EventSubscriptions'
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        status:
          enum:
          - ACTIVE
          - INACTIVE
          type: string
        verificationStatus:
          enum:
          - UNVERIFIED
          - VERIFIED
          type: string
      required:
      - eventHookId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - eventHookId
    konfig-generated-schema-single-parameter-schema-post--api-v1-eventHooks-eventHookId-lifecycle-activate:
      properties:
        eventHookId:
          type: string
      required:
      - eventHookId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - eventHookId
    konfig-generated-schema-single-parameter-schema-post--api-v1-eventHooks-eventHookId-lifecycle-deactivate:
      properties:
        eventHookId:
          type: string
      required:
      - eventHookId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - eventHookId
    konfig-generated-schema-single-parameter-schema-post--api-v1-eventHooks-eventHookId-lifecycle-verify:
      properties:
        eventHookId:
          type: string
      required:
      - eventHookId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - eventHookId
    konfig-generated-schema-single-parameter-schema-get--api-v1-features:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--api-v1-features-featureId:
      properties:
        featureId:
          type: string
      required:
      - featureId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - featureId
    konfig-generated-schema-single-parameter-schema-get--api-v1-features-featureId-dependencies:
      properties:
        featureId:
          type: string
      required:
      - featureId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - featureId
    konfig-generated-schema-single-parameter-schema-get--api-v1-features-featureId-dependents:
      properties:
        featureId:
          type: string
      required:
      - featureId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - featureId
    konfig-generated-schema-single-parameter-schema-post--api-v1-features-featureId-lifecycle:
      properties:
        featureId:
          type: string
        lifecycle:
          type: string
        mode:
          type: string
      required:
      - featureId
      - lifecycle
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - featureId
      - lifecycle
      - mode
    konfig-generated-schema-single-parameter-schema-get--api-v1-groups:
      properties:
        q:
          type: string
        filter:
          type: string
        after:
          type: string
        limit:
          default: 10000
          example: 10000
          format: int32
          type: integer
          x-konfig-original-example: 10000
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-groups-get-parameters-3-schema
        expand:
          type: string
        search:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - q
      - filter
      - after
      - limit
      - expand
      - search
    konfig-generated-schema-single-parameter-schema-post--api-v1-groups:
      properties:
        _embedded:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        lastMembershipUpdated:
          format: date-time
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        objectClass:
          items:
            type: string
          readOnly: true
          type: array
        profile:
          $ref: '#/components/schemas/GroupProfile'
        type:
          $ref: '#/components/schemas/GroupType'
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--api-v1-groups-rules:
      properties:
        limit:
          default: 50
          example: 50
          format: int32
          type: integer
          x-konfig-original-example: 50
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-groups-rules-get-parameters-0-schema
        after:
          type: string
        search:
          type: string
        expand:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - limit
      - after
      - search
      - expand
    konfig-generated-schema-single-parameter-schema-post--api-v1-groups-rules:
      properties:
        actions:
          $ref: '#/components/schemas/GroupRuleAction'
        conditions:
          $ref: '#/components/schemas/GroupRuleConditions'
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        status:
          $ref: '#/components/schemas/GroupRuleStatus'
        type:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--api-v1-groups-rules-ruleId:
      properties:
        ruleId:
          type: string
        removeUsers:
          type: boolean
      required:
      - ruleId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - ruleId
      - removeUsers
    konfig-generated-schema-single-parameter-schema-get--api-v1-groups-rules-ruleId:
      properties:
        ruleId:
          type: string
        expand:
          type: string
      required:
      - ruleId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - ruleId
      - expand
    konfig-generated-schema-single-parameter-schema-put--api-v1-groups-rules-ruleId:
      properties:
        ruleId:
          type: string
        actions:
          $ref: '#/components/schemas/GroupRuleAction'
        conditions:
          $ref: '#/components/schemas/GroupRuleConditions'
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        status:
          $ref: '#/components/schemas/GroupRuleStatus'
        type:
          type: string
      required:
      - ruleId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - ruleId
    konfig-generated-schema-single-parameter-schema-post--api-v1-groups-rules-ruleId-lifecycle-activate:
      properties:
        ruleId:
          type: string
      required:
      - ruleId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - ruleId
    konfig-generated-schema-single-parameter-schema-post--api-v1-groups-rules-ruleId-lifecycle-deactivate:
      properties:
        ruleId:
          type: string
      required:
      - ruleId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - ruleId
    konfig-generated-schema-single-parameter-schema-delete--api-v1-groups-groupId:
      properties:
        groupId:
          type: string
      required:
      - groupId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - groupId
    konfig-generated-schema-single-parameter-schema-get--api-v1-groups-groupId:
      properties:
        groupId:
          type: string
      required:
      - groupId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - groupId
    konfig-generated-schema-single-parameter-schema-put--api-v1-groups-groupId:
      properties:
        groupId:
          type: string
        _embedded:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        lastMembershipUpdated:
          format: date-time
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        objectClass:
          items:
            type: string
          readOnly: true
          type: array
        profile:
          $ref: '#/components/schemas/GroupProfile'
        type:
          $ref: '#/components/schemas/GroupType'
      required:
      - groupId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - groupId
    konfig-generated-schema-single-parameter-schema-get--api-v1-groups-groupId-apps:
      properties:
        groupId:
          type: string
        after:
          type: string
        limit:
          default: 20
          example: 20
          format: int32
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-groups-groupId-apps-get-parameters-2-schema
      required:
      - groupId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - groupId
      - after
      - limit
    konfig-generated-schema-single-parameter-schema-get--api-v1-groups-groupId-roles:
      properties:
        groupId:
          type: string
        expand:
          type: string
      required:
      - groupId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - groupId
      - expand
    konfig-generated-schema-single-parameter-schema-post--api-v1-groups-groupId-roles:
      properties:
        groupId:
          type: string
        disableNotifications:
          type: boolean
        type:
          $ref: '#/components/schemas/RoleType'
      required:
      - groupId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - groupId
      - disableNotifications
    konfig-generated-schema-single-parameter-schema-delete--api-v1-groups-groupId-roles-roleId:
      properties:
        groupId:
          type: string
        roleId:
          type: string
      required:
      - groupId
      - roleId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - groupId
      - roleId
    konfig-generated-schema-single-parameter-schema-get--api-v1-groups-groupId-roles-roleId:
      properties:
        groupId:
          type: string
        roleId:
          type: string
      required:
      - groupId
      - roleId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - groupId
      - roleId
    konfig-generated-schema-single-parameter-schema-get--api-v1-groups-groupId-roles-roleId-targets-catalog-apps:
      properties:
        groupId:
          type: string
        roleId:
          type: string
        after:
          type: string
        limit:
          default: 20
          example: 20
          format: int32
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-groups-groupId-roles-roleId-targets-catalog-apps-get-parameters-3-schema
      required:
      - groupId
      - roleId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - groupId
      - roleId
      - after
      - limit
    konfig-generated-schema-single-parameter-schema-delete--api-v1-groups-groupId-roles-roleId-targets-catalog-apps-appName:
      properties:
        groupId:
          type: string
        roleId:
          type: string
        appName:
          type: string
      required:
      - appName
      - groupId
      - roleId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - groupId
      - roleId
      - appName
    konfig-generated-schema-single-parameter-schema-put--api-v1-groups-groupId-roles-roleId-targets-catalog-apps-appName:
      properties:
        groupId:
          type: string
        roleId:
          type: string
        appName:
          type: string
      required:
      - appName
      - groupId
      - roleId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - groupId
      - roleId
      - appName
    ? konfig-generated-schema-single-parameter-schema-delete--api-v1-groups-groupId-roles-roleId-targets-catalog-apps-appName-applicationId
    : properties:
        groupId:
          type: string
        roleId:
          type: string
        appName:
          type: string
        applicationId:
          type: string
      required:
      - appName
      - applicationId
      - groupId
      - roleId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - groupId
      - roleId
      - appName
      - applicationId
    ? konfig-generated-schema-single-parameter-schema-put--api-v1-groups-groupId-roles-roleId-targets-catalog-apps-appName-applicationId
    : properties:
        groupId:
          type: string
        roleId:
          type: string
        appName:
          type: string
        applicationId:
          type: string
      required:
      - appName
      - applicationId
      - groupId
      - roleId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - groupId
      - roleId
      - appName
      - applicationId
    konfig-generated-schema-single-parameter-schema-get--api-v1-groups-groupId-roles-roleId-targets-groups:
      properties:
        groupId:
          type: string
        roleId:
          type: string
        after:
          type: string
        limit:
          default: 20
          example: 20
          format: int32
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-groups-groupId-roles-roleId-targets-groups-get-parameters-3-schema
      required:
      - groupId
      - roleId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - groupId
      - roleId
      - after
      - limit
    konfig-generated-schema-single-parameter-schema-delete--api-v1-groups-groupId-roles-roleId-targets-groups-targetGroupId:
      properties:
        groupId:
          type: string
        roleId:
          type: string
        targetGroupId:
          type: string
      required:
      - groupId
      - roleId
      - targetGroupId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - groupId
      - roleId
      - targetGroupId
    konfig-generated-schema-single-parameter-schema-put--api-v1-groups-groupId-roles-roleId-targets-groups-targetGroupId:
      properties:
        groupId:
          type: string
        roleId:
          type: string
        targetGroupId:
          type: string
      required:
      - groupId
      - roleId
      - targetGroupId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - groupId
      - roleId
      - targetGroupId
    konfig-generated-schema-single-parameter-schema-get--api-v1-groups-groupId-users:
      properties:
        groupId:
          type: string
        after:
          type: string
        limit:
          default: 1000
          example: 1000
          format: int32
          type: integer
          x-konfig-original-example: 1000
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-groups-groupId-users-get-parameters-2-schema
      required:
      - groupId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - groupId
      - after
      - limit
    konfig-generated-schema-single-parameter-schema-delete--api-v1-groups-groupId-users-userId:
      properties:
        groupId:
          type: string
        userId:
          type: string
      required:
      - groupId
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - groupId
      - userId
    konfig-generated-schema-single-parameter-schema-put--api-v1-groups-groupId-users-userId:
      properties:
        groupId:
          type: string
        userId:
          type: string
      required:
      - groupId
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - groupId
      - userId
    konfig-generated-schema-single-parameter-schema-get--api-v1-idps:
      properties:
        q:
          type: string
        after:
          type: string
        limit:
          default: 20
          example: 20
          format: int32
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-idps-get-parameters-2-schema
        type:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - q
      - after
      - limit
      - type
    konfig-generated-schema-single-parameter-schema-post--api-v1-idps:
      properties:
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        issuerMode:
          enum:
          - ORG_URL
          - CUSTOM_URL
          - DYNAMIC
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        policy:
          $ref: '#/components/schemas/IdentityProviderPolicy'
        protocol:
          $ref: '#/components/schemas/Protocol'
        status:
          enum:
          - ACTIVE
          - INACTIVE
          type: string
        type:
          enum:
          - SAML2
          - GOOGLE
          - FACEBOOK
          - LINKEDIN
          - MICROSOFT
          - OIDC
          - OKTA
          - IWA
          - AgentlessDSSO
          - X509
          type: string
          x-okta-known-values:
          - SAML2
          - GOOGLE
          - FACEBOOK
          - LINKEDIN
          - MICROSOFT
          - OIDC
          - OKTA
          - IWA
          - AgentlessDSSO
          - X509
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--api-v1-idps-credentials-keys:
      properties:
        after:
          type: string
        limit:
          default: 20
          example: 20
          format: int32
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-idps-credentials-keys-get-parameters-1-schema
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - after
      - limit
    konfig-generated-schema-single-parameter-schema-post--api-v1-idps-credentials-keys:
      properties:
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        alg:
          readOnly: false
          type: string
        created:
          format: date-time
          readOnly: false
          type: string
        e:
          readOnly: false
          type: string
        expiresAt:
          format: date-time
          readOnly: false
          type: string
        key_ops:
          items:
            type: string
          readOnly: false
          type: array
        kid:
          readOnly: false
          type: string
        kty:
          readOnly: false
          type: string
        lastUpdated:
          format: date-time
          readOnly: false
          type: string
        "n":
          readOnly: false
          type: string
        status:
          readOnly: false
          type: string
        use:
          readOnly: false
          type: string
        x5c:
          items:
            type: string
          readOnly: false
          type: array
        x5t:
          readOnly: false
          type: string
        x5t#S256:
          readOnly: false
          type: string
        x5u:
          readOnly: false
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--api-v1-idps-credentials-keys-keyId:
      properties:
        keyId:
          type: string
      required:
      - keyId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - keyId
    konfig-generated-schema-single-parameter-schema-get--api-v1-idps-credentials-keys-keyId:
      properties:
        keyId:
          type: string
      required:
      - keyId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - keyId
    konfig-generated-schema-single-parameter-schema-delete--api-v1-idps-idpId:
      properties:
        idpId:
          type: string
      required:
      - idpId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idpId
    konfig-generated-schema-single-parameter-schema-get--api-v1-idps-idpId:
      properties:
        idpId:
          type: string
      required:
      - idpId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idpId
    konfig-generated-schema-single-parameter-schema-put--api-v1-idps-idpId:
      properties:
        idpId:
          type: string
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        issuerMode:
          enum:
          - ORG_URL
          - CUSTOM_URL
          - DYNAMIC
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        policy:
          $ref: '#/components/schemas/IdentityProviderPolicy'
        protocol:
          $ref: '#/components/schemas/Protocol'
        status:
          enum:
          - ACTIVE
          - INACTIVE
          type: string
        type:
          enum:
          - SAML2
          - GOOGLE
          - FACEBOOK
          - LINKEDIN
          - MICROSOFT
          - OIDC
          - OKTA
          - IWA
          - AgentlessDSSO
          - X509
          type: string
          x-okta-known-values:
          - SAML2
          - GOOGLE
          - FACEBOOK
          - LINKEDIN
          - MICROSOFT
          - OIDC
          - OKTA
          - IWA
          - AgentlessDSSO
          - X509
      required:
      - idpId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idpId
    konfig-generated-schema-single-parameter-schema-get--api-v1-idps-idpId-credentials-csrs:
      properties:
        idpId:
          type: string
      required:
      - idpId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idpId
    konfig-generated-schema-single-parameter-schema-post--api-v1-idps-idpId-credentials-csrs:
      properties:
        idpId:
          type: string
        subject:
          $ref: '#/components/schemas/CsrMetadataSubject'
        subjectAltNames:
          $ref: '#/components/schemas/CsrMetadataSubjectAltNames'
      required:
      - idpId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idpId
    konfig-generated-schema-single-parameter-schema-delete--api-v1-idps-idpId-credentials-csrs-csrId:
      properties:
        idpId:
          type: string
        csrId:
          type: string
      required:
      - csrId
      - idpId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idpId
      - csrId
    konfig-generated-schema-single-parameter-schema-get--api-v1-idps-idpId-credentials-csrs-csrId:
      properties:
        idpId:
          type: string
        csrId:
          type: string
      required:
      - csrId
      - idpId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idpId
      - csrId
    konfig-generated-schema-single-parameter-schema-post--api-v1-idps-idpId-credentials-csrs-csrId-lifecycle-publish:
      properties:
        idpId:
          type: string
        csrId:
          type: string
      required:
      - csrId
      - idpId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idpId
      - csrId
    konfig-generated-schema-single-parameter-schema-get--api-v1-idps-idpId-credentials-keys:
      properties:
        idpId:
          type: string
      required:
      - idpId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idpId
    konfig-generated-schema-single-parameter-schema-post--api-v1-idps-idpId-credentials-keys-generate:
      properties:
        idpId:
          type: string
        validityYears:
          format: int32
          type: integer
      required:
      - idpId
      - validityYears
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idpId
      - validityYears
    konfig-generated-schema-single-parameter-schema-get--api-v1-idps-idpId-credentials-keys-keyId:
      properties:
        idpId:
          type: string
        keyId:
          type: string
      required:
      - idpId
      - keyId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idpId
      - keyId
    konfig-generated-schema-single-parameter-schema-post--api-v1-idps-idpId-credentials-keys-keyId-clone:
      properties:
        idpId:
          type: string
        keyId:
          type: string
        targetIdpId:
          type: string
      required:
      - idpId
      - keyId
      - targetIdpId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idpId
      - keyId
      - targetIdpId
    konfig-generated-schema-single-parameter-schema-post--api-v1-idps-idpId-lifecycle-activate:
      properties:
        idpId:
          type: string
      required:
      - idpId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idpId
    konfig-generated-schema-single-parameter-schema-post--api-v1-idps-idpId-lifecycle-deactivate:
      properties:
        idpId:
          type: string
      required:
      - idpId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idpId
    konfig-generated-schema-single-parameter-schema-get--api-v1-idps-idpId-users:
      properties:
        idpId:
          type: string
      required:
      - idpId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idpId
    konfig-generated-schema-single-parameter-schema-delete--api-v1-idps-idpId-users-userId:
      properties:
        idpId:
          type: string
        userId:
          type: string
      required:
      - idpId
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idpId
      - userId
    konfig-generated-schema-single-parameter-schema-get--api-v1-idps-idpId-users-userId:
      properties:
        idpId:
          type: string
        userId:
          type: string
      required:
      - idpId
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idpId
      - userId
    konfig-generated-schema-single-parameter-schema-post--api-v1-idps-idpId-users-userId:
      properties:
        idpId:
          type: string
        userId:
          type: string
        externalId:
          type: string
      required:
      - idpId
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idpId
      - userId
    konfig-generated-schema-single-parameter-schema-get--api-v1-idps-idpId-users-userId-credentials-tokens:
      properties:
        idpId:
          type: string
        userId:
          type: string
      required:
      - idpId
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idpId
      - userId
    konfig-generated-schema-single-parameter-schema-get--api-v1-inlineHooks:
      properties:
        type:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - type
    konfig-generated-schema-single-parameter-schema-post--api-v1-inlineHooks:
      properties:
        version:
          type: string
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        channel:
          $ref: '#/components/schemas/InlineHookChannel'
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        status:
          $ref: '#/components/schemas/InlineHookStatus'
        type:
          $ref: '#/components/schemas/InlineHookType'
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--api-v1-inlineHooks-inlineHookId:
      properties:
        inlineHookId:
          type: string
      required:
      - inlineHookId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - inlineHookId
    konfig-generated-schema-single-parameter-schema-get--api-v1-inlineHooks-inlineHookId:
      properties:
        inlineHookId:
          type: string
      required:
      - inlineHookId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - inlineHookId
    konfig-generated-schema-single-parameter-schema-put--api-v1-inlineHooks-inlineHookId:
      properties:
        inlineHookId:
          type: string
        version:
          type: string
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        channel:
          $ref: '#/components/schemas/InlineHookChannel'
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        status:
          $ref: '#/components/schemas/InlineHookStatus'
        type:
          $ref: '#/components/schemas/InlineHookType'
      required:
      - inlineHookId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - inlineHookId
    konfig-generated-schema-single-parameter-schema-post--api-v1-inlineHooks-inlineHookId-execute:
      properties:
        inlineHookId:
          type: string
      required:
      - inlineHookId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - inlineHookId
    konfig-generated-schema-single-parameter-schema-post--api-v1-inlineHooks-inlineHookId-lifecycle-activate:
      properties:
        inlineHookId:
          type: string
      required:
      - inlineHookId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - inlineHookId
    konfig-generated-schema-single-parameter-schema-post--api-v1-inlineHooks-inlineHookId-lifecycle-deactivate:
      properties:
        inlineHookId:
          type: string
      required:
      - inlineHookId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - inlineHookId
    konfig-generated-schema-single-parameter-schema-get--api-v1-logs:
      properties:
        since:
          format: date-time
          type: string
        until:
          format: date-time
          type: string
        filter:
          type: string
        q:
          type: string
        limit:
          default: 100
          example: 100
          type: integer
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-logs-get-parameters-4-schema
        sortOrder:
          default: ASCENDING
          example: ASCENDING
          type: string
          x-konfig-original-example: ASCENDING
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-logs-get-parameters-5-schema
        after:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - since
      - until
      - filter
      - q
      - limit
      - sortOrder
      - after
    konfig-generated-schema-single-parameter-schema-get--api-v1-mappings:
      properties:
        after:
          type: string
        limit:
          default: -1
          example: -1
          format: int32
          type: integer
          x-konfig-original-example: -1
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-mappings-get-parameters-1-schema
        sourceId:
          type: string
        targetId:
          default: ""
          example: ""
          type: string
          x-konfig-original-example: ""
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-mappings-get-parameters-3-schema
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - after
      - limit
      - sourceId
      - targetId
    konfig-generated-schema-single-parameter-schema-get--api-v1-mappings-mappingId:
      properties:
        mappingId:
          type: string
      required:
      - mappingId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - mappingId
    konfig-generated-schema-single-parameter-schema-post--api-v1-mappings-mappingId:
      properties:
        mappingId:
          type: string
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        id:
          readOnly: true
          type: string
        properties:
          additionalProperties:
            $ref: '#/components/schemas/ProfileMappingProperty'
          readOnly: true
          type: object
        source:
          $ref: '#/components/schemas/ProfileMappingSource'
        target:
          $ref: '#/components/schemas/ProfileMappingSource'
      required:
      - mappingId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - mappingId
    konfig-generated-schema-single-parameter-schema-get--api-v1-meta-schemas-apps-appInstanceId-default:
      properties:
        appInstanceId:
          type: string
      required:
      - appInstanceId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - appInstanceId
    konfig-generated-schema-single-parameter-schema-post--api-v1-meta-schemas-apps-appInstanceId-default:
      properties:
        appInstanceId:
          type: string
        title:
          type: string
        $schema:
          readOnly: true
          type: string
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        created:
          readOnly: true
          type: string
        definitions:
          $ref: '#/components/schemas/UserSchemaDefinitions'
        id:
          readOnly: true
          type: string
        lastUpdated:
          readOnly: true
          type: string
        name:
          readOnly: true
          type: string
        properties:
          $ref: '#/components/schemas/UserSchemaProperties'
        type:
          readOnly: true
          type: string
      required:
      - appInstanceId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - appInstanceId
    konfig-generated-schema-single-parameter-schema-get--api-v1-meta-schemas-group-default:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--api-v1-meta-schemas-group-default:
      properties:
        title:
          type: string
        description:
          type: string
        $schema:
          readOnly: true
          type: string
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        created:
          readOnly: true
          type: string
        definitions:
          $ref: '#/components/schemas/GroupSchemaDefinitions'
        id:
          readOnly: true
          type: string
        lastUpdated:
          readOnly: true
          type: string
        name:
          readOnly: true
          type: string
        properties:
          $ref: '#/components/schemas/UserSchemaProperties'
        type:
          readOnly: true
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--api-v1-meta-schemas-user-linkedObjects:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--api-v1-meta-schemas-user-linkedObjects:
      properties:
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        associated:
          $ref: '#/components/schemas/LinkedObjectDetails'
        primary:
          $ref: '#/components/schemas/LinkedObjectDetails'
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--api-v1-meta-schemas-user-linkedObjects-linkedObjectName:
      properties:
        linkedObjectName:
          type: string
      required:
      - linkedObjectName
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - linkedObjectName
    konfig-generated-schema-single-parameter-schema-get--api-v1-meta-schemas-user-linkedObjects-linkedObjectName:
      properties:
        linkedObjectName:
          type: string
      required:
      - linkedObjectName
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - linkedObjectName
    konfig-generated-schema-single-parameter-schema-get--api-v1-meta-schemas-user-schemaId:
      properties:
        schemaId:
          type: string
      required:
      - schemaId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - schemaId
    konfig-generated-schema-single-parameter-schema-post--api-v1-meta-schemas-user-schemaId:
      properties:
        schemaId:
          type: string
        title:
          type: string
        $schema:
          readOnly: true
          type: string
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        created:
          readOnly: true
          type: string
        definitions:
          $ref: '#/components/schemas/UserSchemaDefinitions'
        id:
          readOnly: true
          type: string
        lastUpdated:
          readOnly: true
          type: string
        name:
          readOnly: true
          type: string
        properties:
          $ref: '#/components/schemas/UserSchemaProperties'
        type:
          readOnly: true
          type: string
      required:
      - schemaId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - schemaId
    konfig-generated-schema-single-parameter-schema-get--api-v1-meta-types-user:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--api-v1-meta-types-user:
      properties:
        description:
          type: string
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        created:
          format: date-time
          readOnly: true
          type: string
        createdBy:
          readOnly: true
          type: string
        default:
          readOnly: true
          type: boolean
        displayName:
          type: string
        id:
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        lastUpdatedBy:
          readOnly: true
          type: string
        name:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--api-v1-meta-types-user-typeId:
      properties:
        typeId:
          type: string
      required:
      - typeId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - typeId
    konfig-generated-schema-single-parameter-schema-get--api-v1-meta-types-user-typeId:
      properties:
        typeId:
          type: string
      required:
      - typeId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - typeId
    konfig-generated-schema-single-parameter-schema-post--api-v1-meta-types-user-typeId:
      properties:
        typeId:
          type: string
        description:
          type: string
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        created:
          format: date-time
          readOnly: true
          type: string
        createdBy:
          readOnly: true
          type: string
        default:
          readOnly: true
          type: boolean
        displayName:
          type: string
        id:
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        lastUpdatedBy:
          readOnly: true
          type: string
        name:
          type: string
      required:
      - typeId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - typeId
    konfig-generated-schema-single-parameter-schema-put--api-v1-meta-types-user-typeId:
      properties:
        typeId:
          type: string
        description:
          type: string
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        created:
          format: date-time
          readOnly: true
          type: string
        createdBy:
          readOnly: true
          type: string
        default:
          readOnly: true
          type: boolean
        displayName:
          type: string
        id:
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        lastUpdatedBy:
          readOnly: true
          type: string
        name:
          type: string
      required:
      - typeId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - typeId
    konfig-generated-schema-single-parameter-schema-get--api-v1-org:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--api-v1-org:
      properties:
        _links:
          additionalProperties:
            type: object
          type: object
        address1:
          type: string
        address2:
          type: string
        city:
          type: string
        companyName:
          type: string
        country:
          type: string
        created:
          format: date-time
          readOnly: true
          type: string
        endUserSupportHelpURL:
          type: string
        expiresAt:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        phoneNumber:
          type: string
        postalCode:
          type: string
        state:
          type: string
        status:
          readOnly: true
          type: string
        subdomain:
          readOnly: true
          type: string
        supportPhoneNumber:
          type: string
        website:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-put--api-v1-org:
      properties:
        _links:
          additionalProperties:
            type: object
          type: object
        address1:
          type: string
        address2:
          type: string
        city:
          type: string
        companyName:
          type: string
        country:
          type: string
        created:
          format: date-time
          readOnly: true
          type: string
        endUserSupportHelpURL:
          type: string
        expiresAt:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        phoneNumber:
          type: string
        postalCode:
          type: string
        state:
          type: string
        status:
          readOnly: true
          type: string
        subdomain:
          readOnly: true
          type: string
        supportPhoneNumber:
          type: string
        website:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--api-v1-org-contacts:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--api-v1-org-contacts-contactType:
      properties:
        contactType:
          type: string
      required:
      - contactType
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - contactType
    konfig-generated-schema-single-parameter-schema-put--api-v1-org-contacts-contactType:
      properties:
        contactType:
          type: string
        userId:
          type: string
      required:
      - contactType
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - contactType
    konfig-generated-schema-single-parameter-schema-post--api-v1-org-logo:
      properties:
        file:
          format: binary
          type: string
      required:
      - file
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--api-v1-org-preferences:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--api-v1-org-preferences-hideEndUserFooter:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--api-v1-org-preferences-showEndUserFooter:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--api-v1-org-privacy-oktaCommunication:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--api-v1-org-privacy-oktaCommunication-optIn:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--api-v1-org-privacy-oktaCommunication-optOut:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--api-v1-org-privacy-oktaSupport:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--api-v1-org-privacy-oktaSupport-extend:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--api-v1-org-privacy-oktaSupport-grant:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--api-v1-org-privacy-oktaSupport-revoke:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--api-v1-policies:
      properties:
        type:
          type: string
        status:
          type: string
        expand:
          default: ""
          example: ""
          type: string
          x-konfig-original-example: ""
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-policies-get-parameters-2-schema
      required:
      - type
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - type
      - status
      - expand
    konfig-generated-schema-single-parameter-schema-post--api-v1-policies:
      properties:
        activate:
          default: true
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-policies-post-parameters-0-schema
        description:
          type: string
        _embedded:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        conditions:
          $ref: '#/components/schemas/PolicyRuleConditions'
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        priority:
          type: integer
        status:
          enum:
          - ACTIVE
          - INACTIVE
          type: string
        system:
          type: boolean
        type:
          $ref: '#/components/schemas/PolicyType'
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - activate
    konfig-generated-schema-single-parameter-schema-delete--api-v1-policies-policyId:
      properties:
        policyId:
          type: string
      required:
      - policyId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - policyId
    konfig-generated-schema-single-parameter-schema-get--api-v1-policies-policyId:
      properties:
        policyId:
          type: string
        expand:
          default: ""
          example: ""
          type: string
          x-konfig-original-example: ""
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-policies-policyId-get-parameters-1-schema
      required:
      - policyId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - policyId
      - expand
    konfig-generated-schema-single-parameter-schema-put--api-v1-policies-policyId:
      properties:
        policyId:
          type: string
        description:
          type: string
        _embedded:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        conditions:
          $ref: '#/components/schemas/PolicyRuleConditions'
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        priority:
          type: integer
        status:
          enum:
          - ACTIVE
          - INACTIVE
          type: string
        system:
          type: boolean
        type:
          $ref: '#/components/schemas/PolicyType'
      required:
      - policyId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - policyId
    konfig-generated-schema-single-parameter-schema-post--api-v1-policies-policyId-lifecycle-activate:
      properties:
        policyId:
          type: string
      required:
      - policyId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - policyId
    konfig-generated-schema-single-parameter-schema-post--api-v1-policies-policyId-lifecycle-deactivate:
      properties:
        policyId:
          type: string
      required:
      - policyId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - policyId
    konfig-generated-schema-single-parameter-schema-get--api-v1-policies-policyId-rules:
      properties:
        policyId:
          type: string
      required:
      - policyId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - policyId
    konfig-generated-schema-single-parameter-schema-post--api-v1-policies-policyId-rules:
      properties:
        policyId:
          type: string
        actions:
          $ref: '#/components/schemas/PolicyRuleActions'
        conditions:
          $ref: '#/components/schemas/PolicyRuleConditions'
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        priority:
          type: integer
        status:
          default: ACTIVE
          enum:
          - ACTIVE
          - INACTIVE
          example: ACTIVE
          type: string
          x-konfig-original-example: ACTIVE
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PolicyRule-properties-status
        system:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PolicyRule-properties-system
        type:
          enum:
          - SIGN_ON
          - PASSWORD
          type: string
      required:
      - policyId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - policyId
    konfig-generated-schema-single-parameter-schema-delete--api-v1-policies-policyId-rules-ruleId:
      properties:
        policyId:
          type: string
        ruleId:
          type: string
      required:
      - policyId
      - ruleId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - policyId
      - ruleId
    konfig-generated-schema-single-parameter-schema-get--api-v1-policies-policyId-rules-ruleId:
      properties:
        policyId:
          type: string
        ruleId:
          type: string
      required:
      - policyId
      - ruleId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - policyId
      - ruleId
    konfig-generated-schema-single-parameter-schema-put--api-v1-policies-policyId-rules-ruleId:
      properties:
        policyId:
          type: string
        ruleId:
          type: string
        actions:
          $ref: '#/components/schemas/PolicyRuleActions'
        conditions:
          $ref: '#/components/schemas/PolicyRuleConditions'
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        priority:
          type: integer
        status:
          default: ACTIVE
          enum:
          - ACTIVE
          - INACTIVE
          example: ACTIVE
          type: string
          x-konfig-original-example: ACTIVE
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PolicyRule-properties-status
        system:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PolicyRule-properties-system
        type:
          enum:
          - SIGN_ON
          - PASSWORD
          type: string
      required:
      - policyId
      - ruleId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - policyId
      - ruleId
    konfig-generated-schema-single-parameter-schema-post--api-v1-policies-policyId-rules-ruleId-lifecycle-activate:
      properties:
        policyId:
          type: string
        ruleId:
          type: string
      required:
      - policyId
      - ruleId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - policyId
      - ruleId
    konfig-generated-schema-single-parameter-schema-post--api-v1-policies-policyId-rules-ruleId-lifecycle-deactivate:
      properties:
        policyId:
          type: string
        ruleId:
          type: string
      required:
      - policyId
      - ruleId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - policyId
      - ruleId
    konfig-generated-schema-single-parameter-schema-get--api-v1-roles-roleTypeOrRoleId-subscriptions:
      properties:
        roleTypeOrRoleId:
          type: string
      required:
      - roleTypeOrRoleId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - roleTypeOrRoleId
    konfig-generated-schema-single-parameter-schema-get--api-v1-roles-roleTypeOrRoleId-subscriptions-notificationType:
      properties:
        roleTypeOrRoleId:
          type: string
        notificationType:
          type: string
      required:
      - notificationType
      - roleTypeOrRoleId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - roleTypeOrRoleId
      - notificationType
    konfig-generated-schema-single-parameter-schema-post--api-v1-roles-roleTypeOrRoleId-subscriptions-notificationType-subscribe:
      properties:
        roleTypeOrRoleId:
          type: string
        notificationType:
          type: string
      required:
      - notificationType
      - roleTypeOrRoleId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - roleTypeOrRoleId
      - notificationType
    konfig-generated-schema-single-parameter-schema-post--api-v1-roles-roleTypeOrRoleId-subscriptions-notificationType-unsubscribe:
      properties:
        roleTypeOrRoleId:
          type: string
        notificationType:
          type: string
      required:
      - notificationType
      - roleTypeOrRoleId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - roleTypeOrRoleId
      - notificationType
    konfig-generated-schema-single-parameter-schema-post--api-v1-sessions:
      properties:
        sessionToken:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--api-v1-sessions-sessionId:
      properties:
        sessionId:
          type: string
      required:
      - sessionId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - sessionId
    konfig-generated-schema-single-parameter-schema-get--api-v1-sessions-sessionId:
      properties:
        sessionId:
          type: string
      required:
      - sessionId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - sessionId
    konfig-generated-schema-single-parameter-schema-post--api-v1-sessions-sessionId-lifecycle-refresh:
      properties:
        sessionId:
          type: string
      required:
      - sessionId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - sessionId
    konfig-generated-schema-single-parameter-schema-get--api-v1-templates-sms:
      properties:
        templateType:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - templateType
    konfig-generated-schema-single-parameter-schema-post--api-v1-templates-sms:
      properties:
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        template:
          type: string
        translations:
          $ref: '#/components/schemas/SmsTemplateTranslations'
        type:
          $ref: '#/components/schemas/SmsTemplateType'
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--api-v1-templates-sms-templateId:
      properties:
        templateId:
          type: string
      required:
      - templateId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - templateId
    konfig-generated-schema-single-parameter-schema-get--api-v1-templates-sms-templateId:
      properties:
        templateId:
          type: string
      required:
      - templateId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - templateId
    konfig-generated-schema-single-parameter-schema-post--api-v1-templates-sms-templateId:
      properties:
        templateId:
          type: string
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        template:
          type: string
        translations:
          $ref: '#/components/schemas/SmsTemplateTranslations'
        type:
          $ref: '#/components/schemas/SmsTemplateType'
      required:
      - templateId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - templateId
    konfig-generated-schema-single-parameter-schema-put--api-v1-templates-sms-templateId:
      properties:
        templateId:
          type: string
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        template:
          type: string
        translations:
          $ref: '#/components/schemas/SmsTemplateTranslations'
        type:
          $ref: '#/components/schemas/SmsTemplateType'
      required:
      - templateId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - templateId
    konfig-generated-schema-single-parameter-schema-get--api-v1-threats-configuration:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--api-v1-threats-configuration:
      properties:
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        action:
          type: string
        created:
          format: date-time
          readOnly: true
          type: string
        excludeZones:
          items:
            type: string
          type: array
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--api-v1-trustedOrigins:
      properties:
        q:
          type: string
        filter:
          type: string
        after:
          type: string
        limit:
          default: -1
          example: -1
          format: int32
          type: integer
          x-konfig-original-example: -1
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-trustedOrigins-get-parameters-3-schema
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - q
      - filter
      - after
      - limit
    konfig-generated-schema-single-parameter-schema-post--api-v1-trustedOrigins:
      properties:
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        created:
          format: date-time
          readOnly: true
          type: string
        createdBy:
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        lastUpdatedBy:
          type: string
        name:
          type: string
        origin:
          type: string
        scopes:
          items:
            $ref: '#/components/schemas/Scope'
          type: array
        status:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--api-v1-trustedOrigins-trustedOriginId:
      properties:
        trustedOriginId:
          type: string
      required:
      - trustedOriginId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - trustedOriginId
    konfig-generated-schema-single-parameter-schema-get--api-v1-trustedOrigins-trustedOriginId:
      properties:
        trustedOriginId:
          type: string
      required:
      - trustedOriginId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - trustedOriginId
    konfig-generated-schema-single-parameter-schema-put--api-v1-trustedOrigins-trustedOriginId:
      properties:
        trustedOriginId:
          type: string
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        created:
          format: date-time
          readOnly: true
          type: string
        createdBy:
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        lastUpdatedBy:
          type: string
        name:
          type: string
        origin:
          type: string
        scopes:
          items:
            $ref: '#/components/schemas/Scope'
          type: array
        status:
          type: string
      required:
      - trustedOriginId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - trustedOriginId
    konfig-generated-schema-single-parameter-schema-post--api-v1-trustedOrigins-trustedOriginId-lifecycle-activate:
      properties:
        trustedOriginId:
          type: string
      required:
      - trustedOriginId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - trustedOriginId
    konfig-generated-schema-single-parameter-schema-post--api-v1-trustedOrigins-trustedOriginId-lifecycle-deactivate:
      properties:
        trustedOriginId:
          type: string
      required:
      - trustedOriginId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - trustedOriginId
    konfig-generated-schema-single-parameter-schema-get--api-v1-users:
      properties:
        q:
          type: string
        after:
          type: string
        limit:
          default: 10
          example: 10
          format: int32
          type: integer
          x-konfig-original-example: 10
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-users-get-parameters-2-schema
        filter:
          type: string
        search:
          type: string
        sortBy:
          type: string
        sortOrder:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - q
      - after
      - limit
      - filter
      - search
      - sortBy
      - sortOrder
    konfig-generated-schema-single-parameter-schema-post--api-v1-users:
      properties:
        activate:
          default: true
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-users-post-parameters-0-schema
        provider:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-users-post-parameters-1-schema
        nextLogin:
          default: ""
          example: ""
          type: string
          x-konfig-original-example: ""
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-users-post-parameters-2-schema
        credentials:
          $ref: '#/components/schemas/UserCredentials'
        groupIds:
          items:
            type: string
          type: array
        profile:
          $ref: '#/components/schemas/UserProfile'
        type:
          $ref: '#/components/schemas/UserType'
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - activate
      - provider
      - nextLogin
    ? konfig-generated-schema-single-parameter-schema-put--api-v1-users-associatedUserId-linkedObjects-primaryRelationshipName-primaryUserId
    : properties:
        associatedUserId:
          type: string
        primaryRelationshipName:
          type: string
        primaryUserId:
          type: string
      required:
      - associatedUserId
      - primaryRelationshipName
      - primaryUserId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - associatedUserId
      - primaryRelationshipName
      - primaryUserId
    konfig-generated-schema-single-parameter-schema-delete--api-v1-users-userId:
      properties:
        userId:
          type: string
        sendEmail:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-users-userId-delete-parameters-1-schema
      required:
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - sendEmail
    konfig-generated-schema-single-parameter-schema-get--api-v1-users-userId:
      properties:
        userId:
          type: string
      required:
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
    konfig-generated-schema-single-parameter-schema-post--api-v1-users-userId:
      properties:
        userId:
          type: string
        strict:
          type: boolean
        _embedded:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        activated:
          format: date-time
          readOnly: true
          type: string
        created:
          format: date-time
          readOnly: true
          type: string
        credentials:
          $ref: '#/components/schemas/UserCredentials'
        id:
          readOnly: true
          type: string
        lastLogin:
          format: date-time
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        passwordChanged:
          format: date-time
          readOnly: true
          type: string
        profile:
          $ref: '#/components/schemas/UserProfile'
        status:
          $ref: '#/components/schemas/UserStatus'
        statusChanged:
          format: date-time
          readOnly: true
          type: string
        transitioningToStatus:
          $ref: '#/components/schemas/UserStatus'
        type:
          $ref: '#/components/schemas/UserType'
      required:
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - strict
    konfig-generated-schema-single-parameter-schema-put--api-v1-users-userId:
      properties:
        userId:
          type: string
        strict:
          type: boolean
        _embedded:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        activated:
          format: date-time
          readOnly: true
          type: string
        created:
          format: date-time
          readOnly: true
          type: string
        credentials:
          $ref: '#/components/schemas/UserCredentials'
        id:
          readOnly: true
          type: string
        lastLogin:
          format: date-time
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        passwordChanged:
          format: date-time
          readOnly: true
          type: string
        profile:
          $ref: '#/components/schemas/UserProfile'
        status:
          $ref: '#/components/schemas/UserStatus'
        statusChanged:
          format: date-time
          readOnly: true
          type: string
        transitioningToStatus:
          $ref: '#/components/schemas/UserStatus'
        type:
          $ref: '#/components/schemas/UserType'
      required:
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - strict
    konfig-generated-schema-single-parameter-schema-get--api-v1-users-userId-appLinks:
      properties:
        userId:
          type: string
      required:
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
    konfig-generated-schema-single-parameter-schema-get--api-v1-users-userId-clients:
      properties:
        userId:
          type: string
      required:
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
    konfig-generated-schema-single-parameter-schema-delete--api-v1-users-userId-clients-clientId-grants:
      properties:
        userId:
          type: string
        clientId:
          type: string
      required:
      - clientId
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - clientId
    konfig-generated-schema-single-parameter-schema-get--api-v1-users-userId-clients-clientId-grants:
      properties:
        userId:
          type: string
        clientId:
          type: string
        expand:
          type: string
        after:
          type: string
        limit:
          default: 20
          example: 20
          format: int32
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-users-userId-clients-clientId-grants-get-parameters-4-schema
      required:
      - clientId
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - clientId
      - expand
      - after
      - limit
    konfig-generated-schema-single-parameter-schema-delete--api-v1-users-userId-clients-clientId-tokens:
      properties:
        userId:
          type: string
        clientId:
          type: string
      required:
      - clientId
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - clientId
    konfig-generated-schema-single-parameter-schema-get--api-v1-users-userId-clients-clientId-tokens:
      properties:
        userId:
          type: string
        clientId:
          type: string
        expand:
          type: string
        after:
          type: string
        limit:
          default: 20
          example: 20
          format: int32
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-users-userId-clients-clientId-tokens-get-parameters-4-schema
      required:
      - clientId
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - clientId
      - expand
      - after
      - limit
    konfig-generated-schema-single-parameter-schema-delete--api-v1-users-userId-clients-clientId-tokens-tokenId:
      properties:
        userId:
          type: string
        clientId:
          type: string
        tokenId:
          type: string
      required:
      - clientId
      - tokenId
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - clientId
      - tokenId
    konfig-generated-schema-single-parameter-schema-get--api-v1-users-userId-clients-clientId-tokens-tokenId:
      properties:
        userId:
          type: string
        clientId:
          type: string
        tokenId:
          type: string
        expand:
          type: string
        limit:
          default: 20
          example: 20
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-users-userId-clients-clientId-tokens-tokenId-get-parameters-4-schema
        after:
          type: string
      required:
      - clientId
      - tokenId
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - clientId
      - tokenId
      - expand
      - limit
      - after
    konfig-generated-schema-single-parameter-schema-post--api-v1-users-userId-credentials-change_password:
      properties:
        userId:
          type: string
        strict:
          type: boolean
        newPassword:
          $ref: '#/components/schemas/PasswordCredential'
        oldPassword:
          $ref: '#/components/schemas/PasswordCredential'
      required:
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - strict
    konfig-generated-schema-single-parameter-schema-post--api-v1-users-userId-credentials-change_recovery_question:
      properties:
        userId:
          type: string
        password:
          $ref: '#/components/schemas/PasswordCredential'
        provider:
          $ref: '#/components/schemas/AuthenticationProvider'
        recovery_question:
          $ref: '#/components/schemas/RecoveryQuestionCredential'
      required:
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
    konfig-generated-schema-single-parameter-schema-post--api-v1-users-userId-credentials-forgot_password:
      properties:
        userId:
          type: string
      required:
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
    konfig-generated-schema-single-parameter-schema-get--api-v1-users-userId-factors:
      properties:
        userId:
          type: string
      required:
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
    konfig-generated-schema-single-parameter-schema-post--api-v1-users-userId-factors:
      properties:
        userId:
          type: string
        updatePhone:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-users-userId-factors-post-parameters-1-schema
        templateId:
          type: string
        tokenLifetimeSeconds:
          default: 300
          example: 300
          format: int32
          type: integer
          x-konfig-original-example: 300
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-users-userId-factors-post-parameters-3-schema
        activate:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-users-userId-factors-post-parameters-4-schema
        _embedded:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        created:
          format: date-time
          readOnly: true
          type: string
        factorType:
          $ref: '#/components/schemas/FactorType'
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        provider:
          $ref: '#/components/schemas/FactorProvider'
        status:
          $ref: '#/components/schemas/FactorStatus'
        verify:
          $ref: '#/components/schemas/VerifyFactorRequest'
      required:
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - updatePhone
      - templateId
      - tokenLifetimeSeconds
      - activate
    konfig-generated-schema-single-parameter-schema-get--api-v1-users-userId-factors-catalog:
      properties:
        userId:
          type: string
      required:
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
    konfig-generated-schema-single-parameter-schema-get--api-v1-users-userId-factors-questions:
      properties:
        userId:
          type: string
      required:
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
    konfig-generated-schema-single-parameter-schema-delete--api-v1-users-userId-factors-factorId:
      properties:
        userId:
          type: string
        factorId:
          type: string
      required:
      - factorId
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - factorId
    konfig-generated-schema-single-parameter-schema-get--api-v1-users-userId-factors-factorId:
      properties:
        userId:
          type: string
        factorId:
          type: string
      required:
      - factorId
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - factorId
    konfig-generated-schema-single-parameter-schema-post--api-v1-users-userId-factors-factorId-lifecycle-activate:
      properties:
        userId:
          type: string
        factorId:
          type: string
        attestation:
          type: string
        clientData:
          type: string
        passCode:
          type: string
        registrationData:
          type: string
        stateToken:
          type: string
      required:
      - factorId
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - factorId
    konfig-generated-schema-single-parameter-schema-get--api-v1-users-userId-factors-factorId-transactions-transactionId:
      properties:
        userId:
          type: string
        factorId:
          type: string
        transactionId:
          type: string
      required:
      - factorId
      - transactionId
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - factorId
      - transactionId
    konfig-generated-schema-single-parameter-schema-post--api-v1-users-userId-factors-factorId-verify:
      properties:
        userId:
          type: string
        factorId:
          type: string
        templateId:
          type: string
        tokenLifetimeSeconds:
          default: 300
          example: 300
          format: int32
          type: integer
          x-konfig-original-example: 300
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-users-userId-factors-factorId-verify-post-parameters-3-schema
        X-Forwarded-For:
          type: string
        User-Agent:
          type: string
        Accept-Language:
          type: string
        activationToken:
          type: string
        answer:
          type: string
        attestation:
          type: string
        clientData:
          type: string
        nextPassCode:
          type: string
        passCode:
          type: string
        registrationData:
          type: string
        stateToken:
          type: string
      required:
      - factorId
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - factorId
      - templateId
      - tokenLifetimeSeconds
      - X-Forwarded-For
      - User-Agent
      - Accept-Language
    konfig-generated-schema-single-parameter-schema-delete--api-v1-users-userId-grants:
      properties:
        userId:
          type: string
      required:
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
    konfig-generated-schema-single-parameter-schema-get--api-v1-users-userId-grants:
      properties:
        userId:
          type: string
        scopeId:
          type: string
        expand:
          type: string
        after:
          type: string
        limit:
          default: 20
          example: 20
          format: int32
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-users-userId-grants-get-parameters-4-schema
      required:
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - scopeId
      - expand
      - after
      - limit
    konfig-generated-schema-single-parameter-schema-delete--api-v1-users-userId-grants-grantId:
      properties:
        userId:
          type: string
        grantId:
          type: string
      required:
      - grantId
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - grantId
    konfig-generated-schema-single-parameter-schema-get--api-v1-users-userId-grants-grantId:
      properties:
        userId:
          type: string
        grantId:
          type: string
        expand:
          type: string
      required:
      - grantId
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - grantId
      - expand
    konfig-generated-schema-single-parameter-schema-get--api-v1-users-userId-groups:
      properties:
        userId:
          type: string
      required:
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
    konfig-generated-schema-single-parameter-schema-get--api-v1-users-userId-idps:
      properties:
        userId:
          type: string
      required:
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
    konfig-generated-schema-single-parameter-schema-post--api-v1-users-userId-lifecycle-activate:
      properties:
        userId:
          type: string
        sendEmail:
          default: true
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-users-userId-lifecycle-activate-post-parameters-1-schema
      required:
      - sendEmail
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - sendEmail
    konfig-generated-schema-single-parameter-schema-post--api-v1-users-userId-lifecycle-deactivate:
      properties:
        userId:
          type: string
        sendEmail:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-users-userId-lifecycle-deactivate-post-parameters-1-schema
      required:
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - sendEmail
    konfig-generated-schema-single-parameter-schema-post--api-v1-users-userId-lifecycle-expire_password?tempPassword=false:
      properties:
        userId:
          type: string
      required:
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
    konfig-generated-schema-single-parameter-schema-post--api-v1-users-userId-lifecycle-expire_password?tempPassword=true:
      properties:
        userId:
          type: string
      required:
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
    konfig-generated-schema-single-parameter-schema-post--api-v1-users-userId-lifecycle-reactivate:
      properties:
        userId:
          type: string
        sendEmail:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-users-userId-lifecycle-reactivate-post-parameters-1-schema
      required:
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - sendEmail
    konfig-generated-schema-single-parameter-schema-post--api-v1-users-userId-lifecycle-reset_factors:
      properties:
        userId:
          type: string
      required:
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
    konfig-generated-schema-single-parameter-schema-post--api-v1-users-userId-lifecycle-reset_password:
      properties:
        userId:
          type: string
        sendEmail:
          type: boolean
      required:
      - sendEmail
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - sendEmail
    konfig-generated-schema-single-parameter-schema-post--api-v1-users-userId-lifecycle-suspend:
      properties:
        userId:
          type: string
      required:
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
    konfig-generated-schema-single-parameter-schema-post--api-v1-users-userId-lifecycle-unlock:
      properties:
        userId:
          type: string
      required:
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
    konfig-generated-schema-single-parameter-schema-post--api-v1-users-userId-lifecycle-unsuspend:
      properties:
        userId:
          type: string
      required:
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
    konfig-generated-schema-single-parameter-schema-delete--api-v1-users-userId-linkedObjects-relationshipName:
      properties:
        userId:
          type: string
        relationshipName:
          type: string
      required:
      - relationshipName
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - relationshipName
    konfig-generated-schema-single-parameter-schema-get--api-v1-users-userId-linkedObjects-relationshipName:
      properties:
        userId:
          type: string
        relationshipName:
          type: string
        after:
          type: string
        limit:
          default: -1
          example: -1
          format: int32
          type: integer
          x-konfig-original-example: -1
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-users-userId-linkedObjects-relationshipName-get-parameters-3-schema
      required:
      - relationshipName
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - relationshipName
      - after
      - limit
    konfig-generated-schema-single-parameter-schema-get--api-v1-users-userId-roles:
      properties:
        userId:
          type: string
        expand:
          type: string
      required:
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - expand
    konfig-generated-schema-single-parameter-schema-post--api-v1-users-userId-roles:
      properties:
        userId:
          type: string
        disableNotifications:
          type: boolean
        type:
          $ref: '#/components/schemas/RoleType'
      required:
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - disableNotifications
    konfig-generated-schema-single-parameter-schema-delete--api-v1-users-userId-roles-roleId:
      properties:
        userId:
          type: string
        roleId:
          type: string
      required:
      - roleId
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - roleId
    konfig-generated-schema-single-parameter-schema-get--api-v1-users-userId-roles-roleId:
      properties:
        userId:
          type: string
        roleId:
          type: string
      required:
      - roleId
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - roleId
    konfig-generated-schema-single-parameter-schema-get--api-v1-users-userId-roles-roleId-targets-catalog-apps:
      properties:
        userId:
          type: string
        roleId:
          type: string
        after:
          type: string
        limit:
          default: 20
          example: 20
          format: int32
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-users-userId-roles-roleId-targets-catalog-apps-get-parameters-3-schema
      required:
      - roleId
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - roleId
      - after
      - limit
    konfig-generated-schema-single-parameter-schema-put--api-v1-users-userId-roles-roleId-targets-catalog-apps:
      properties:
        userId:
          type: string
        roleId:
          type: string
      required:
      - roleId
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - roleId
    konfig-generated-schema-single-parameter-schema-delete--api-v1-users-userId-roles-roleId-targets-catalog-apps-appName:
      properties:
        userId:
          type: string
        roleId:
          type: string
        appName:
          type: string
      required:
      - appName
      - roleId
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - roleId
      - appName
    konfig-generated-schema-single-parameter-schema-put--api-v1-users-userId-roles-roleId-targets-catalog-apps-appName:
      properties:
        userId:
          type: string
        roleId:
          type: string
        appName:
          type: string
      required:
      - appName
      - roleId
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - roleId
      - appName
    ? konfig-generated-schema-single-parameter-schema-delete--api-v1-users-userId-roles-roleId-targets-catalog-apps-appName-applicationId
    : properties:
        userId:
          type: string
        roleId:
          type: string
        appName:
          type: string
        applicationId:
          type: string
      required:
      - appName
      - applicationId
      - roleId
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - roleId
      - appName
      - applicationId
    ? konfig-generated-schema-single-parameter-schema-put--api-v1-users-userId-roles-roleId-targets-catalog-apps-appName-applicationId
    : properties:
        userId:
          type: string
        roleId:
          type: string
        appName:
          type: string
        applicationId:
          type: string
      required:
      - appName
      - applicationId
      - roleId
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - roleId
      - appName
      - applicationId
    konfig-generated-schema-single-parameter-schema-get--api-v1-users-userId-roles-roleId-targets-groups:
      properties:
        userId:
          type: string
        roleId:
          type: string
        after:
          type: string
        limit:
          default: 20
          example: 20
          format: int32
          type: integer
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-users-userId-roles-roleId-targets-groups-get-parameters-3-schema
      required:
      - roleId
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - roleId
      - after
      - limit
    konfig-generated-schema-single-parameter-schema-delete--api-v1-users-userId-roles-roleId-targets-groups-groupId:
      properties:
        userId:
          type: string
        roleId:
          type: string
        groupId:
          type: string
      required:
      - groupId
      - roleId
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - roleId
      - groupId
    konfig-generated-schema-single-parameter-schema-put--api-v1-users-userId-roles-roleId-targets-groups-groupId:
      properties:
        userId:
          type: string
        roleId:
          type: string
        groupId:
          type: string
      required:
      - groupId
      - roleId
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - roleId
      - groupId
    konfig-generated-schema-single-parameter-schema-delete--api-v1-users-userId-sessions:
      properties:
        userId:
          type: string
        oauthTokens:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-users-userId-sessions-delete-parameters-1-schema
      required:
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - oauthTokens
    konfig-generated-schema-single-parameter-schema-get--api-v1-users-userId-subscriptions:
      properties:
        userId:
          type: string
      required:
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
    konfig-generated-schema-single-parameter-schema-get--api-v1-users-userId-subscriptions-notificationType:
      properties:
        userId:
          type: string
        notificationType:
          type: string
      required:
      - notificationType
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - notificationType
    konfig-generated-schema-single-parameter-schema-post--api-v1-users-userId-subscriptions-notificationType-subscribe:
      properties:
        userId:
          type: string
        notificationType:
          type: string
      required:
      - notificationType
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - notificationType
    konfig-generated-schema-single-parameter-schema-post--api-v1-users-userId-subscriptions-notificationType-unsubscribe:
      properties:
        userId:
          type: string
        notificationType:
          type: string
      required:
      - notificationType
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - notificationType
    konfig-generated-schema-single-parameter-schema-get--api-v1-zones:
      properties:
        after:
          type: string
        limit:
          default: -1
          example: -1
          format: int32
          type: integer
          x-konfig-original-example: -1
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-zones-get-parameters-1-schema
        filter:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - after
      - limit
      - filter
    konfig-generated-schema-single-parameter-schema-post--api-v1-zones:
      properties:
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        asns:
          items:
            type: string
          type: array
        created:
          format: date-time
          readOnly: true
          type: string
        gateways:
          items:
            $ref: '#/components/schemas/NetworkZoneAddress'
          type: array
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        locations:
          items:
            $ref: '#/components/schemas/NetworkZoneLocation'
          type: array
        name:
          type: string
        proxies:
          items:
            $ref: '#/components/schemas/NetworkZoneAddress'
          type: array
        proxyType:
          type: string
        status:
          $ref: '#/components/schemas/NetworkZoneStatus'
        system:
          type: boolean
        type:
          $ref: '#/components/schemas/NetworkZoneType'
        usage:
          $ref: '#/components/schemas/NetworkZoneUsage'
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--api-v1-zones-zoneId:
      properties:
        zoneId:
          type: string
      required:
      - zoneId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - zoneId
    konfig-generated-schema-single-parameter-schema-get--api-v1-zones-zoneId:
      properties:
        zoneId:
          type: string
      required:
      - zoneId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - zoneId
    konfig-generated-schema-single-parameter-schema-put--api-v1-zones-zoneId:
      properties:
        zoneId:
          type: string
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        asns:
          items:
            type: string
          type: array
        created:
          format: date-time
          readOnly: true
          type: string
        gateways:
          items:
            $ref: '#/components/schemas/NetworkZoneAddress'
          type: array
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        locations:
          items:
            $ref: '#/components/schemas/NetworkZoneLocation'
          type: array
        name:
          type: string
        proxies:
          items:
            $ref: '#/components/schemas/NetworkZoneAddress'
          type: array
        proxyType:
          type: string
        status:
          $ref: '#/components/schemas/NetworkZoneStatus'
        system:
          type: boolean
        type:
          $ref: '#/components/schemas/NetworkZoneType'
        usage:
          $ref: '#/components/schemas/NetworkZoneUsage'
      required:
      - zoneId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - zoneId
    konfig-generated-schema-single-parameter-schema-post--api-v1-zones-zoneId-lifecycle-activate:
      properties:
        zoneId:
          type: string
      required:
      - zoneId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - zoneId
    konfig-generated-schema-single-parameter-schema-post--api-v1-zones-zoneId-lifecycle-deactivate:
      properties:
        zoneId:
          type: string
      required:
      - zoneId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - zoneId
    MultifactorEnrollmentPolicy_allOf:
      properties:
        conditions:
          $ref: '#/components/schemas/PolicyRuleConditions'
        settings:
          $ref: '#/components/schemas/MultifactorEnrollmentPolicySettings'
      type: object
      example: null
    MultifactorEnrollmentPolicyAuthenticatorSettings_constraints:
      minimum: 0
      properties:
        aaguidGroups:
          items:
            type: string
            uniqueItems: true
          type: array
      type: object
      x-okta-lifecycle:
        features:
        - WEBAUTHN_MDS_CATALOG_BASED_AAGUID_ALLOWLIST
    MultifactorEnrollmentPolicyAuthenticatorSettings_enroll:
      properties:
        self:
          $ref: '#/components/schemas/MultifactorEnrollmentPolicyAuthenticatorStatus'
      type: object
    ApplicationPreviewSamlAppMetadataResponse_EntityDescriptor_IDPSSODescriptor_KeyDescriptor_KeyInfo_X509Data:
      properties:
        X509Certificate:
          type: string
      type: object
    ApplicationPreviewSamlAppMetadataResponse_EntityDescriptor_IDPSSODescriptor_KeyDescriptor_KeyInfo:
      properties:
        X509Data:
          $ref: '#/components/schemas/ApplicationPreviewSamlAppMetadataResponse_EntityDescriptor_IDPSSODescriptor_KeyDescriptor_KeyInfo_X509Data'
      type: object
    ApplicationPreviewSamlAppMetadataResponse_EntityDescriptor_IDPSSODescriptor_KeyDescriptor:
      properties:
        KeyInfo:
          $ref: '#/components/schemas/ApplicationPreviewSamlAppMetadataResponse_EntityDescriptor_IDPSSODescriptor_KeyDescriptor_KeyInfo'
        use:
          type: string
          xml:
            attribute: true
      type: object
    ApplicationPreviewSamlAppMetadataResponse_EntityDescriptor_IDPSSODescriptor:
      properties:
        KeyDescriptor:
          $ref: '#/components/schemas/ApplicationPreviewSamlAppMetadataResponse_EntityDescriptor_IDPSSODescriptor_KeyDescriptor'
        NameIDFormat:
          items:
            type: string
          type: array
        SingleLogoutService:
          items:
            type: string
          properties:
            Binding:
              type: string
              xml:
                attribute: true
            Location:
              type: string
              xml:
                attribute: true
          type: array
        SingleSignOnService:
          items:
            type: string
          properties:
            Binding:
              type: string
              xml:
                attribute: true
            Location:
              type: string
              xml:
                attribute: true
          type: array
        WantAuthnRequestsSigned:
          type: boolean
          xml:
            attribute: true
        protocolSupportEnumeration:
          type: string
          xml:
            attribute: true
      type: object
    ApplicationPreviewSamlAppMetadataResponse_EntityDescriptor:
      properties:
        IDPSSODescriptor:
          $ref: '#/components/schemas/ApplicationPreviewSamlAppMetadataResponse_EntityDescriptor_IDPSSODescriptor'
        entityID:
          type: string
          xml:
            attribute: true
      type: object
  securitySchemes:
    api_token:
      description: "SSWS {API Token}"
      in: header
      name: Authorization
      type: apiKey
      x-konfig-globally-required-security: true

