/*
 * Okta API
 * Allows customers to easily access the Okta API
 *
 * The version of the OpenAPI document: 2.16.0
 * Contact: devex-public@okta.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * UserSchemaBaseProperties
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class UserSchemaBaseProperties {
  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private Object title;

  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  private Object city;

  public static final String SERIALIZED_NAME_COST_CENTER = "costCenter";
  @SerializedName(SERIALIZED_NAME_COST_CENTER)
  private Object costCenter;

  public static final String SERIALIZED_NAME_COUNTRY_CODE = "countryCode";
  @SerializedName(SERIALIZED_NAME_COUNTRY_CODE)
  private Object countryCode;

  public static final String SERIALIZED_NAME_DEPARTMENT = "department";
  @SerializedName(SERIALIZED_NAME_DEPARTMENT)
  private Object department;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private Object displayName;

  public static final String SERIALIZED_NAME_DIVISION = "division";
  @SerializedName(SERIALIZED_NAME_DIVISION)
  private Object division;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private Object email;

  public static final String SERIALIZED_NAME_EMPLOYEE_NUMBER = "employeeNumber";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_NUMBER)
  private Object employeeNumber;

  public static final String SERIALIZED_NAME_FIRST_NAME = "firstName";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private Object firstName;

  public static final String SERIALIZED_NAME_HONORIFIC_PREFIX = "honorificPrefix";
  @SerializedName(SERIALIZED_NAME_HONORIFIC_PREFIX)
  private Object honorificPrefix;

  public static final String SERIALIZED_NAME_HONORIFIC_SUFFIX = "honorificSuffix";
  @SerializedName(SERIALIZED_NAME_HONORIFIC_SUFFIX)
  private Object honorificSuffix;

  public static final String SERIALIZED_NAME_LAST_NAME = "lastName";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private Object lastName;

  public static final String SERIALIZED_NAME_LOCALE = "locale";
  @SerializedName(SERIALIZED_NAME_LOCALE)
  private Object locale;

  public static final String SERIALIZED_NAME_LOGIN = "login";
  @SerializedName(SERIALIZED_NAME_LOGIN)
  private Object login;

  public static final String SERIALIZED_NAME_MANAGER = "manager";
  @SerializedName(SERIALIZED_NAME_MANAGER)
  private Object manager;

  public static final String SERIALIZED_NAME_MANAGER_ID = "managerId";
  @SerializedName(SERIALIZED_NAME_MANAGER_ID)
  private Object managerId;

  public static final String SERIALIZED_NAME_MIDDLE_NAME = "middleName";
  @SerializedName(SERIALIZED_NAME_MIDDLE_NAME)
  private Object middleName;

  public static final String SERIALIZED_NAME_MOBILE_PHONE = "mobilePhone";
  @SerializedName(SERIALIZED_NAME_MOBILE_PHONE)
  private Object mobilePhone;

  public static final String SERIALIZED_NAME_NICK_NAME = "nickName";
  @SerializedName(SERIALIZED_NAME_NICK_NAME)
  private Object nickName;

  public static final String SERIALIZED_NAME_ORGANIZATION = "organization";
  @SerializedName(SERIALIZED_NAME_ORGANIZATION)
  private Object organization;

  public static final String SERIALIZED_NAME_POSTAL_ADDRESS = "postalAddress";
  @SerializedName(SERIALIZED_NAME_POSTAL_ADDRESS)
  private Object postalAddress;

  public static final String SERIALIZED_NAME_PREFERRED_LANGUAGE = "preferredLanguage";
  @SerializedName(SERIALIZED_NAME_PREFERRED_LANGUAGE)
  private Object preferredLanguage;

  public static final String SERIALIZED_NAME_PRIMARY_PHONE = "primaryPhone";
  @SerializedName(SERIALIZED_NAME_PRIMARY_PHONE)
  private Object primaryPhone;

  public static final String SERIALIZED_NAME_PROFILE_URL = "profileUrl";
  @SerializedName(SERIALIZED_NAME_PROFILE_URL)
  private Object profileUrl;

  public static final String SERIALIZED_NAME_SECOND_EMAIL = "secondEmail";
  @SerializedName(SERIALIZED_NAME_SECOND_EMAIL)
  private Object secondEmail;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private Object state;

  public static final String SERIALIZED_NAME_STREET_ADDRESS = "streetAddress";
  @SerializedName(SERIALIZED_NAME_STREET_ADDRESS)
  private Object streetAddress;

  public static final String SERIALIZED_NAME_TIMEZONE = "timezone";
  @SerializedName(SERIALIZED_NAME_TIMEZONE)
  private Object timezone;

  public static final String SERIALIZED_NAME_USER_TYPE = "userType";
  @SerializedName(SERIALIZED_NAME_USER_TYPE)
  private Object userType;

  public static final String SERIALIZED_NAME_ZIP_CODE = "zipCode";
  @SerializedName(SERIALIZED_NAME_ZIP_CODE)
  private Object zipCode;

  public UserSchemaBaseProperties() {
  }

  public UserSchemaBaseProperties title(Object title) {
    
    
    
    
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getTitle() {
    return title;
  }


  public void setTitle(Object title) {
    
    
    
    this.title = title;
  }


  public UserSchemaBaseProperties city(Object city) {
    
    
    
    
    this.city = city;
    return this;
  }

   /**
   * Get city
   * @return city
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getCity() {
    return city;
  }


  public void setCity(Object city) {
    
    
    
    this.city = city;
  }


  public UserSchemaBaseProperties costCenter(Object costCenter) {
    
    
    
    
    this.costCenter = costCenter;
    return this;
  }

   /**
   * Get costCenter
   * @return costCenter
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getCostCenter() {
    return costCenter;
  }


  public void setCostCenter(Object costCenter) {
    
    
    
    this.costCenter = costCenter;
  }


  public UserSchemaBaseProperties countryCode(Object countryCode) {
    
    
    
    
    this.countryCode = countryCode;
    return this;
  }

   /**
   * Get countryCode
   * @return countryCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getCountryCode() {
    return countryCode;
  }


  public void setCountryCode(Object countryCode) {
    
    
    
    this.countryCode = countryCode;
  }


  public UserSchemaBaseProperties department(Object department) {
    
    
    
    
    this.department = department;
    return this;
  }

   /**
   * Get department
   * @return department
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getDepartment() {
    return department;
  }


  public void setDepartment(Object department) {
    
    
    
    this.department = department;
  }


  public UserSchemaBaseProperties displayName(Object displayName) {
    
    
    
    
    this.displayName = displayName;
    return this;
  }

   /**
   * Get displayName
   * @return displayName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getDisplayName() {
    return displayName;
  }


  public void setDisplayName(Object displayName) {
    
    
    
    this.displayName = displayName;
  }


  public UserSchemaBaseProperties division(Object division) {
    
    
    
    
    this.division = division;
    return this;
  }

   /**
   * Get division
   * @return division
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getDivision() {
    return division;
  }


  public void setDivision(Object division) {
    
    
    
    this.division = division;
  }


  public UserSchemaBaseProperties email(Object email) {
    
    
    
    
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getEmail() {
    return email;
  }


  public void setEmail(Object email) {
    
    
    
    this.email = email;
  }


  public UserSchemaBaseProperties employeeNumber(Object employeeNumber) {
    
    
    
    
    this.employeeNumber = employeeNumber;
    return this;
  }

   /**
   * Get employeeNumber
   * @return employeeNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getEmployeeNumber() {
    return employeeNumber;
  }


  public void setEmployeeNumber(Object employeeNumber) {
    
    
    
    this.employeeNumber = employeeNumber;
  }


  public UserSchemaBaseProperties firstName(Object firstName) {
    
    
    
    
    this.firstName = firstName;
    return this;
  }

   /**
   * Get firstName
   * @return firstName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getFirstName() {
    return firstName;
  }


  public void setFirstName(Object firstName) {
    
    
    
    this.firstName = firstName;
  }


  public UserSchemaBaseProperties honorificPrefix(Object honorificPrefix) {
    
    
    
    
    this.honorificPrefix = honorificPrefix;
    return this;
  }

   /**
   * Get honorificPrefix
   * @return honorificPrefix
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getHonorificPrefix() {
    return honorificPrefix;
  }


  public void setHonorificPrefix(Object honorificPrefix) {
    
    
    
    this.honorificPrefix = honorificPrefix;
  }


  public UserSchemaBaseProperties honorificSuffix(Object honorificSuffix) {
    
    
    
    
    this.honorificSuffix = honorificSuffix;
    return this;
  }

   /**
   * Get honorificSuffix
   * @return honorificSuffix
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getHonorificSuffix() {
    return honorificSuffix;
  }


  public void setHonorificSuffix(Object honorificSuffix) {
    
    
    
    this.honorificSuffix = honorificSuffix;
  }


  public UserSchemaBaseProperties lastName(Object lastName) {
    
    
    
    
    this.lastName = lastName;
    return this;
  }

   /**
   * Get lastName
   * @return lastName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getLastName() {
    return lastName;
  }


  public void setLastName(Object lastName) {
    
    
    
    this.lastName = lastName;
  }


  public UserSchemaBaseProperties locale(Object locale) {
    
    
    
    
    this.locale = locale;
    return this;
  }

   /**
   * Get locale
   * @return locale
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getLocale() {
    return locale;
  }


  public void setLocale(Object locale) {
    
    
    
    this.locale = locale;
  }


  public UserSchemaBaseProperties login(Object login) {
    
    
    
    
    this.login = login;
    return this;
  }

   /**
   * Get login
   * @return login
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getLogin() {
    return login;
  }


  public void setLogin(Object login) {
    
    
    
    this.login = login;
  }


  public UserSchemaBaseProperties manager(Object manager) {
    
    
    
    
    this.manager = manager;
    return this;
  }

   /**
   * Get manager
   * @return manager
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getManager() {
    return manager;
  }


  public void setManager(Object manager) {
    
    
    
    this.manager = manager;
  }


  public UserSchemaBaseProperties managerId(Object managerId) {
    
    
    
    
    this.managerId = managerId;
    return this;
  }

   /**
   * Get managerId
   * @return managerId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getManagerId() {
    return managerId;
  }


  public void setManagerId(Object managerId) {
    
    
    
    this.managerId = managerId;
  }


  public UserSchemaBaseProperties middleName(Object middleName) {
    
    
    
    
    this.middleName = middleName;
    return this;
  }

   /**
   * Get middleName
   * @return middleName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getMiddleName() {
    return middleName;
  }


  public void setMiddleName(Object middleName) {
    
    
    
    this.middleName = middleName;
  }


  public UserSchemaBaseProperties mobilePhone(Object mobilePhone) {
    
    
    
    
    this.mobilePhone = mobilePhone;
    return this;
  }

   /**
   * Get mobilePhone
   * @return mobilePhone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getMobilePhone() {
    return mobilePhone;
  }


  public void setMobilePhone(Object mobilePhone) {
    
    
    
    this.mobilePhone = mobilePhone;
  }


  public UserSchemaBaseProperties nickName(Object nickName) {
    
    
    
    
    this.nickName = nickName;
    return this;
  }

   /**
   * Get nickName
   * @return nickName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getNickName() {
    return nickName;
  }


  public void setNickName(Object nickName) {
    
    
    
    this.nickName = nickName;
  }


  public UserSchemaBaseProperties organization(Object organization) {
    
    
    
    
    this.organization = organization;
    return this;
  }

   /**
   * Get organization
   * @return organization
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getOrganization() {
    return organization;
  }


  public void setOrganization(Object organization) {
    
    
    
    this.organization = organization;
  }


  public UserSchemaBaseProperties postalAddress(Object postalAddress) {
    
    
    
    
    this.postalAddress = postalAddress;
    return this;
  }

   /**
   * Get postalAddress
   * @return postalAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getPostalAddress() {
    return postalAddress;
  }


  public void setPostalAddress(Object postalAddress) {
    
    
    
    this.postalAddress = postalAddress;
  }


  public UserSchemaBaseProperties preferredLanguage(Object preferredLanguage) {
    
    
    
    
    this.preferredLanguage = preferredLanguage;
    return this;
  }

   /**
   * Get preferredLanguage
   * @return preferredLanguage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getPreferredLanguage() {
    return preferredLanguage;
  }


  public void setPreferredLanguage(Object preferredLanguage) {
    
    
    
    this.preferredLanguage = preferredLanguage;
  }


  public UserSchemaBaseProperties primaryPhone(Object primaryPhone) {
    
    
    
    
    this.primaryPhone = primaryPhone;
    return this;
  }

   /**
   * Get primaryPhone
   * @return primaryPhone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getPrimaryPhone() {
    return primaryPhone;
  }


  public void setPrimaryPhone(Object primaryPhone) {
    
    
    
    this.primaryPhone = primaryPhone;
  }


  public UserSchemaBaseProperties profileUrl(Object profileUrl) {
    
    
    
    
    this.profileUrl = profileUrl;
    return this;
  }

   /**
   * Get profileUrl
   * @return profileUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getProfileUrl() {
    return profileUrl;
  }


  public void setProfileUrl(Object profileUrl) {
    
    
    
    this.profileUrl = profileUrl;
  }


  public UserSchemaBaseProperties secondEmail(Object secondEmail) {
    
    
    
    
    this.secondEmail = secondEmail;
    return this;
  }

   /**
   * Get secondEmail
   * @return secondEmail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getSecondEmail() {
    return secondEmail;
  }


  public void setSecondEmail(Object secondEmail) {
    
    
    
    this.secondEmail = secondEmail;
  }


  public UserSchemaBaseProperties state(Object state) {
    
    
    
    
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getState() {
    return state;
  }


  public void setState(Object state) {
    
    
    
    this.state = state;
  }


  public UserSchemaBaseProperties streetAddress(Object streetAddress) {
    
    
    
    
    this.streetAddress = streetAddress;
    return this;
  }

   /**
   * Get streetAddress
   * @return streetAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getStreetAddress() {
    return streetAddress;
  }


  public void setStreetAddress(Object streetAddress) {
    
    
    
    this.streetAddress = streetAddress;
  }


  public UserSchemaBaseProperties timezone(Object timezone) {
    
    
    
    
    this.timezone = timezone;
    return this;
  }

   /**
   * Get timezone
   * @return timezone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getTimezone() {
    return timezone;
  }


  public void setTimezone(Object timezone) {
    
    
    
    this.timezone = timezone;
  }


  public UserSchemaBaseProperties userType(Object userType) {
    
    
    
    
    this.userType = userType;
    return this;
  }

   /**
   * Get userType
   * @return userType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getUserType() {
    return userType;
  }


  public void setUserType(Object userType) {
    
    
    
    this.userType = userType;
  }


  public UserSchemaBaseProperties zipCode(Object zipCode) {
    
    
    
    
    this.zipCode = zipCode;
    return this;
  }

   /**
   * Get zipCode
   * @return zipCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getZipCode() {
    return zipCode;
  }


  public void setZipCode(Object zipCode) {
    
    
    
    this.zipCode = zipCode;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the UserSchemaBaseProperties instance itself
   */
  public UserSchemaBaseProperties putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserSchemaBaseProperties userSchemaBaseProperties = (UserSchemaBaseProperties) o;
    return Objects.equals(this.title, userSchemaBaseProperties.title) &&
        Objects.equals(this.city, userSchemaBaseProperties.city) &&
        Objects.equals(this.costCenter, userSchemaBaseProperties.costCenter) &&
        Objects.equals(this.countryCode, userSchemaBaseProperties.countryCode) &&
        Objects.equals(this.department, userSchemaBaseProperties.department) &&
        Objects.equals(this.displayName, userSchemaBaseProperties.displayName) &&
        Objects.equals(this.division, userSchemaBaseProperties.division) &&
        Objects.equals(this.email, userSchemaBaseProperties.email) &&
        Objects.equals(this.employeeNumber, userSchemaBaseProperties.employeeNumber) &&
        Objects.equals(this.firstName, userSchemaBaseProperties.firstName) &&
        Objects.equals(this.honorificPrefix, userSchemaBaseProperties.honorificPrefix) &&
        Objects.equals(this.honorificSuffix, userSchemaBaseProperties.honorificSuffix) &&
        Objects.equals(this.lastName, userSchemaBaseProperties.lastName) &&
        Objects.equals(this.locale, userSchemaBaseProperties.locale) &&
        Objects.equals(this.login, userSchemaBaseProperties.login) &&
        Objects.equals(this.manager, userSchemaBaseProperties.manager) &&
        Objects.equals(this.managerId, userSchemaBaseProperties.managerId) &&
        Objects.equals(this.middleName, userSchemaBaseProperties.middleName) &&
        Objects.equals(this.mobilePhone, userSchemaBaseProperties.mobilePhone) &&
        Objects.equals(this.nickName, userSchemaBaseProperties.nickName) &&
        Objects.equals(this.organization, userSchemaBaseProperties.organization) &&
        Objects.equals(this.postalAddress, userSchemaBaseProperties.postalAddress) &&
        Objects.equals(this.preferredLanguage, userSchemaBaseProperties.preferredLanguage) &&
        Objects.equals(this.primaryPhone, userSchemaBaseProperties.primaryPhone) &&
        Objects.equals(this.profileUrl, userSchemaBaseProperties.profileUrl) &&
        Objects.equals(this.secondEmail, userSchemaBaseProperties.secondEmail) &&
        Objects.equals(this.state, userSchemaBaseProperties.state) &&
        Objects.equals(this.streetAddress, userSchemaBaseProperties.streetAddress) &&
        Objects.equals(this.timezone, userSchemaBaseProperties.timezone) &&
        Objects.equals(this.userType, userSchemaBaseProperties.userType) &&
        Objects.equals(this.zipCode, userSchemaBaseProperties.zipCode)&&
        Objects.equals(this.additionalProperties, userSchemaBaseProperties.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(title, city, costCenter, countryCode, department, displayName, division, email, employeeNumber, firstName, honorificPrefix, honorificSuffix, lastName, locale, login, manager, managerId, middleName, mobilePhone, nickName, organization, postalAddress, preferredLanguage, primaryPhone, profileUrl, secondEmail, state, streetAddress, timezone, userType, zipCode, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserSchemaBaseProperties {\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    costCenter: ").append(toIndentedString(costCenter)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    department: ").append(toIndentedString(department)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    division: ").append(toIndentedString(division)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    employeeNumber: ").append(toIndentedString(employeeNumber)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    honorificPrefix: ").append(toIndentedString(honorificPrefix)).append("\n");
    sb.append("    honorificSuffix: ").append(toIndentedString(honorificSuffix)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    locale: ").append(toIndentedString(locale)).append("\n");
    sb.append("    login: ").append(toIndentedString(login)).append("\n");
    sb.append("    manager: ").append(toIndentedString(manager)).append("\n");
    sb.append("    managerId: ").append(toIndentedString(managerId)).append("\n");
    sb.append("    middleName: ").append(toIndentedString(middleName)).append("\n");
    sb.append("    mobilePhone: ").append(toIndentedString(mobilePhone)).append("\n");
    sb.append("    nickName: ").append(toIndentedString(nickName)).append("\n");
    sb.append("    organization: ").append(toIndentedString(organization)).append("\n");
    sb.append("    postalAddress: ").append(toIndentedString(postalAddress)).append("\n");
    sb.append("    preferredLanguage: ").append(toIndentedString(preferredLanguage)).append("\n");
    sb.append("    primaryPhone: ").append(toIndentedString(primaryPhone)).append("\n");
    sb.append("    profileUrl: ").append(toIndentedString(profileUrl)).append("\n");
    sb.append("    secondEmail: ").append(toIndentedString(secondEmail)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    streetAddress: ").append(toIndentedString(streetAddress)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    userType: ").append(toIndentedString(userType)).append("\n");
    sb.append("    zipCode: ").append(toIndentedString(zipCode)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("title");
    openapiFields.add("city");
    openapiFields.add("costCenter");
    openapiFields.add("countryCode");
    openapiFields.add("department");
    openapiFields.add("displayName");
    openapiFields.add("division");
    openapiFields.add("email");
    openapiFields.add("employeeNumber");
    openapiFields.add("firstName");
    openapiFields.add("honorificPrefix");
    openapiFields.add("honorificSuffix");
    openapiFields.add("lastName");
    openapiFields.add("locale");
    openapiFields.add("login");
    openapiFields.add("manager");
    openapiFields.add("managerId");
    openapiFields.add("middleName");
    openapiFields.add("mobilePhone");
    openapiFields.add("nickName");
    openapiFields.add("organization");
    openapiFields.add("postalAddress");
    openapiFields.add("preferredLanguage");
    openapiFields.add("primaryPhone");
    openapiFields.add("profileUrl");
    openapiFields.add("secondEmail");
    openapiFields.add("state");
    openapiFields.add("streetAddress");
    openapiFields.add("timezone");
    openapiFields.add("userType");
    openapiFields.add("zipCode");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to UserSchemaBaseProperties
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!UserSchemaBaseProperties.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UserSchemaBaseProperties is not found in the empty JSON string", UserSchemaBaseProperties.openapiRequiredFields.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UserSchemaBaseProperties.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UserSchemaBaseProperties' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UserSchemaBaseProperties> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UserSchemaBaseProperties.class));

       return (TypeAdapter<T>) new TypeAdapter<UserSchemaBaseProperties>() {
           @Override
           public void write(JsonWriter out, UserSchemaBaseProperties value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public UserSchemaBaseProperties read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             UserSchemaBaseProperties instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of UserSchemaBaseProperties given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of UserSchemaBaseProperties
  * @throws IOException if the JSON string is invalid with respect to UserSchemaBaseProperties
  */
  public static UserSchemaBaseProperties fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UserSchemaBaseProperties.class);
  }

 /**
  * Convert an instance of UserSchemaBaseProperties to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

