/*
 * Okta API
 * Allows customers to easily access the Okta API
 *
 * The version of the OpenAPI document: 2.16.0
 * Contact: devex-public@okta.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.ApplicationPreviewSamlAppMetadataResponseEntityDescriptorIDPSSODescriptorKeyDescriptor;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * ApplicationPreviewSamlAppMetadataResponseEntityDescriptorIDPSSODescriptor
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class ApplicationPreviewSamlAppMetadataResponseEntityDescriptorIDPSSODescriptor {
  public static final String SERIALIZED_NAME_KEY_DESCRIPTOR = "KeyDescriptor";
  @SerializedName(SERIALIZED_NAME_KEY_DESCRIPTOR)
  private ApplicationPreviewSamlAppMetadataResponseEntityDescriptorIDPSSODescriptorKeyDescriptor keyDescriptor;

  public static final String SERIALIZED_NAME_NAME_I_D_FORMAT = "NameIDFormat";
  @SerializedName(SERIALIZED_NAME_NAME_I_D_FORMAT)
  private List<String> nameIDFormat = null;

  public static final String SERIALIZED_NAME_SINGLE_LOGOUT_SERVICE = "SingleLogoutService";
  @SerializedName(SERIALIZED_NAME_SINGLE_LOGOUT_SERVICE)
  private List<String> singleLogoutService = null;

  public static final String SERIALIZED_NAME_SINGLE_SIGN_ON_SERVICE = "SingleSignOnService";
  @SerializedName(SERIALIZED_NAME_SINGLE_SIGN_ON_SERVICE)
  private List<String> singleSignOnService = null;

  public static final String SERIALIZED_NAME_WANT_AUTHN_REQUESTS_SIGNED = "WantAuthnRequestsSigned";
  @SerializedName(SERIALIZED_NAME_WANT_AUTHN_REQUESTS_SIGNED)
  private Boolean wantAuthnRequestsSigned;

  public static final String SERIALIZED_NAME_PROTOCOL_SUPPORT_ENUMERATION = "protocolSupportEnumeration";
  @SerializedName(SERIALIZED_NAME_PROTOCOL_SUPPORT_ENUMERATION)
  private String protocolSupportEnumeration;

  public ApplicationPreviewSamlAppMetadataResponseEntityDescriptorIDPSSODescriptor() {
  }

  public ApplicationPreviewSamlAppMetadataResponseEntityDescriptorIDPSSODescriptor keyDescriptor(ApplicationPreviewSamlAppMetadataResponseEntityDescriptorIDPSSODescriptorKeyDescriptor keyDescriptor) {
    
    
    
    
    this.keyDescriptor = keyDescriptor;
    return this;
  }

   /**
   * Get keyDescriptor
   * @return keyDescriptor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ApplicationPreviewSamlAppMetadataResponseEntityDescriptorIDPSSODescriptorKeyDescriptor getKeyDescriptor() {
    return keyDescriptor;
  }


  public void setKeyDescriptor(ApplicationPreviewSamlAppMetadataResponseEntityDescriptorIDPSSODescriptorKeyDescriptor keyDescriptor) {
    
    
    
    this.keyDescriptor = keyDescriptor;
  }


  public ApplicationPreviewSamlAppMetadataResponseEntityDescriptorIDPSSODescriptor nameIDFormat(List<String> nameIDFormat) {
    
    
    
    
    this.nameIDFormat = nameIDFormat;
    return this;
  }

  public ApplicationPreviewSamlAppMetadataResponseEntityDescriptorIDPSSODescriptor addNameIDFormatItem(String nameIDFormatItem) {
    if (this.nameIDFormat == null) {
      this.nameIDFormat = new ArrayList<>();
    }
    this.nameIDFormat.add(nameIDFormatItem);
    return this;
  }

   /**
   * Get nameIDFormat
   * @return nameIDFormat
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getNameIDFormat() {
    return nameIDFormat;
  }


  public void setNameIDFormat(List<String> nameIDFormat) {
    
    
    
    this.nameIDFormat = nameIDFormat;
  }


  public ApplicationPreviewSamlAppMetadataResponseEntityDescriptorIDPSSODescriptor singleLogoutService(List<String> singleLogoutService) {
    
    
    
    
    this.singleLogoutService = singleLogoutService;
    return this;
  }

  public ApplicationPreviewSamlAppMetadataResponseEntityDescriptorIDPSSODescriptor addSingleLogoutServiceItem(String singleLogoutServiceItem) {
    if (this.singleLogoutService == null) {
      this.singleLogoutService = new ArrayList<>();
    }
    this.singleLogoutService.add(singleLogoutServiceItem);
    return this;
  }

   /**
   * Get singleLogoutService
   * @return singleLogoutService
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getSingleLogoutService() {
    return singleLogoutService;
  }


  public void setSingleLogoutService(List<String> singleLogoutService) {
    
    
    
    this.singleLogoutService = singleLogoutService;
  }


  public ApplicationPreviewSamlAppMetadataResponseEntityDescriptorIDPSSODescriptor singleSignOnService(List<String> singleSignOnService) {
    
    
    
    
    this.singleSignOnService = singleSignOnService;
    return this;
  }

  public ApplicationPreviewSamlAppMetadataResponseEntityDescriptorIDPSSODescriptor addSingleSignOnServiceItem(String singleSignOnServiceItem) {
    if (this.singleSignOnService == null) {
      this.singleSignOnService = new ArrayList<>();
    }
    this.singleSignOnService.add(singleSignOnServiceItem);
    return this;
  }

   /**
   * Get singleSignOnService
   * @return singleSignOnService
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getSingleSignOnService() {
    return singleSignOnService;
  }


  public void setSingleSignOnService(List<String> singleSignOnService) {
    
    
    
    this.singleSignOnService = singleSignOnService;
  }


  public ApplicationPreviewSamlAppMetadataResponseEntityDescriptorIDPSSODescriptor wantAuthnRequestsSigned(Boolean wantAuthnRequestsSigned) {
    
    
    
    
    this.wantAuthnRequestsSigned = wantAuthnRequestsSigned;
    return this;
  }

   /**
   * Get wantAuthnRequestsSigned
   * @return wantAuthnRequestsSigned
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getWantAuthnRequestsSigned() {
    return wantAuthnRequestsSigned;
  }


  public void setWantAuthnRequestsSigned(Boolean wantAuthnRequestsSigned) {
    
    
    
    this.wantAuthnRequestsSigned = wantAuthnRequestsSigned;
  }


  public ApplicationPreviewSamlAppMetadataResponseEntityDescriptorIDPSSODescriptor protocolSupportEnumeration(String protocolSupportEnumeration) {
    
    
    
    
    this.protocolSupportEnumeration = protocolSupportEnumeration;
    return this;
  }

   /**
   * Get protocolSupportEnumeration
   * @return protocolSupportEnumeration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getProtocolSupportEnumeration() {
    return protocolSupportEnumeration;
  }


  public void setProtocolSupportEnumeration(String protocolSupportEnumeration) {
    
    
    
    this.protocolSupportEnumeration = protocolSupportEnumeration;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the ApplicationPreviewSamlAppMetadataResponseEntityDescriptorIDPSSODescriptor instance itself
   */
  public ApplicationPreviewSamlAppMetadataResponseEntityDescriptorIDPSSODescriptor putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApplicationPreviewSamlAppMetadataResponseEntityDescriptorIDPSSODescriptor applicationPreviewSamlAppMetadataResponseEntityDescriptorIDPSSODescriptor = (ApplicationPreviewSamlAppMetadataResponseEntityDescriptorIDPSSODescriptor) o;
    return Objects.equals(this.keyDescriptor, applicationPreviewSamlAppMetadataResponseEntityDescriptorIDPSSODescriptor.keyDescriptor) &&
        Objects.equals(this.nameIDFormat, applicationPreviewSamlAppMetadataResponseEntityDescriptorIDPSSODescriptor.nameIDFormat) &&
        Objects.equals(this.singleLogoutService, applicationPreviewSamlAppMetadataResponseEntityDescriptorIDPSSODescriptor.singleLogoutService) &&
        Objects.equals(this.singleSignOnService, applicationPreviewSamlAppMetadataResponseEntityDescriptorIDPSSODescriptor.singleSignOnService) &&
        Objects.equals(this.wantAuthnRequestsSigned, applicationPreviewSamlAppMetadataResponseEntityDescriptorIDPSSODescriptor.wantAuthnRequestsSigned) &&
        Objects.equals(this.protocolSupportEnumeration, applicationPreviewSamlAppMetadataResponseEntityDescriptorIDPSSODescriptor.protocolSupportEnumeration)&&
        Objects.equals(this.additionalProperties, applicationPreviewSamlAppMetadataResponseEntityDescriptorIDPSSODescriptor.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(keyDescriptor, nameIDFormat, singleLogoutService, singleSignOnService, wantAuthnRequestsSigned, protocolSupportEnumeration, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApplicationPreviewSamlAppMetadataResponseEntityDescriptorIDPSSODescriptor {\n");
    sb.append("    keyDescriptor: ").append(toIndentedString(keyDescriptor)).append("\n");
    sb.append("    nameIDFormat: ").append(toIndentedString(nameIDFormat)).append("\n");
    sb.append("    singleLogoutService: ").append(toIndentedString(singleLogoutService)).append("\n");
    sb.append("    singleSignOnService: ").append(toIndentedString(singleSignOnService)).append("\n");
    sb.append("    wantAuthnRequestsSigned: ").append(toIndentedString(wantAuthnRequestsSigned)).append("\n");
    sb.append("    protocolSupportEnumeration: ").append(toIndentedString(protocolSupportEnumeration)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("KeyDescriptor");
    openapiFields.add("NameIDFormat");
    openapiFields.add("SingleLogoutService");
    openapiFields.add("SingleSignOnService");
    openapiFields.add("WantAuthnRequestsSigned");
    openapiFields.add("protocolSupportEnumeration");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ApplicationPreviewSamlAppMetadataResponseEntityDescriptorIDPSSODescriptor
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ApplicationPreviewSamlAppMetadataResponseEntityDescriptorIDPSSODescriptor.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ApplicationPreviewSamlAppMetadataResponseEntityDescriptorIDPSSODescriptor is not found in the empty JSON string", ApplicationPreviewSamlAppMetadataResponseEntityDescriptorIDPSSODescriptor.openapiRequiredFields.toString()));
        }
      }
      // validate the optional field `KeyDescriptor`
      if (jsonObj.get("KeyDescriptor") != null && !jsonObj.get("KeyDescriptor").isJsonNull()) {
        ApplicationPreviewSamlAppMetadataResponseEntityDescriptorIDPSSODescriptorKeyDescriptor.validateJsonObject(jsonObj.getAsJsonObject("KeyDescriptor"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("NameIDFormat") != null && !jsonObj.get("NameIDFormat").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `NameIDFormat` to be an array in the JSON string but got `%s`", jsonObj.get("NameIDFormat").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("SingleLogoutService") != null && !jsonObj.get("SingleLogoutService").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `SingleLogoutService` to be an array in the JSON string but got `%s`", jsonObj.get("SingleLogoutService").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("SingleSignOnService") != null && !jsonObj.get("SingleSignOnService").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `SingleSignOnService` to be an array in the JSON string but got `%s`", jsonObj.get("SingleSignOnService").toString()));
      }
      if ((jsonObj.get("protocolSupportEnumeration") != null && !jsonObj.get("protocolSupportEnumeration").isJsonNull()) && !jsonObj.get("protocolSupportEnumeration").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `protocolSupportEnumeration` to be a primitive type in the JSON string but got `%s`", jsonObj.get("protocolSupportEnumeration").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ApplicationPreviewSamlAppMetadataResponseEntityDescriptorIDPSSODescriptor.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ApplicationPreviewSamlAppMetadataResponseEntityDescriptorIDPSSODescriptor' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ApplicationPreviewSamlAppMetadataResponseEntityDescriptorIDPSSODescriptor> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ApplicationPreviewSamlAppMetadataResponseEntityDescriptorIDPSSODescriptor.class));

       return (TypeAdapter<T>) new TypeAdapter<ApplicationPreviewSamlAppMetadataResponseEntityDescriptorIDPSSODescriptor>() {
           @Override
           public void write(JsonWriter out, ApplicationPreviewSamlAppMetadataResponseEntityDescriptorIDPSSODescriptor value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public ApplicationPreviewSamlAppMetadataResponseEntityDescriptorIDPSSODescriptor read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             ApplicationPreviewSamlAppMetadataResponseEntityDescriptorIDPSSODescriptor instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ApplicationPreviewSamlAppMetadataResponseEntityDescriptorIDPSSODescriptor given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ApplicationPreviewSamlAppMetadataResponseEntityDescriptorIDPSSODescriptor
  * @throws IOException if the JSON string is invalid with respect to ApplicationPreviewSamlAppMetadataResponseEntityDescriptorIDPSSODescriptor
  */
  public static ApplicationPreviewSamlAppMetadataResponseEntityDescriptorIDPSSODescriptor fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ApplicationPreviewSamlAppMetadataResponseEntityDescriptorIDPSSODescriptor.class);
  }

 /**
  * Convert an instance of ApplicationPreviewSamlAppMetadataResponseEntityDescriptorIDPSSODescriptor to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

