/*
 * Okta API
 * Allows customers to easily access the Okta API
 *
 * The version of the OpenAPI document: 2.16.0
 * Contact: devex-public@okta.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.AcsEndpoint;
import com.konfigthis.client.model.SamlAttributeStatement;
import com.konfigthis.client.model.SignOnInlineHook;
import com.konfigthis.client.model.SingleLogout;
import com.konfigthis.client.model.SpCertificate;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * SamlApplicationSettingsSignOn
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class SamlApplicationSettingsSignOn {
  public static final String SERIALIZED_NAME_ACS_ENDPOINTS = "acsEndpoints";
  @SerializedName(SERIALIZED_NAME_ACS_ENDPOINTS)
  private List<AcsEndpoint> acsEndpoints = null;

  public static final String SERIALIZED_NAME_ALLOW_MULTIPLE_ACS_ENDPOINTS = "allowMultipleAcsEndpoints";
  @SerializedName(SERIALIZED_NAME_ALLOW_MULTIPLE_ACS_ENDPOINTS)
  private Boolean allowMultipleAcsEndpoints;

  public static final String SERIALIZED_NAME_ASSERTION_SIGNED = "assertionSigned";
  @SerializedName(SERIALIZED_NAME_ASSERTION_SIGNED)
  private Boolean assertionSigned;

  public static final String SERIALIZED_NAME_ATTRIBUTE_STATEMENTS = "attributeStatements";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTE_STATEMENTS)
  private List<SamlAttributeStatement> attributeStatements = null;

  public static final String SERIALIZED_NAME_AUDIENCE = "audience";
  @SerializedName(SERIALIZED_NAME_AUDIENCE)
  private String audience;

  public static final String SERIALIZED_NAME_AUDIENCE_OVERRIDE = "audienceOverride";
  @SerializedName(SERIALIZED_NAME_AUDIENCE_OVERRIDE)
  private String audienceOverride;

  public static final String SERIALIZED_NAME_AUTHN_CONTEXT_CLASS_REF = "authnContextClassRef";
  @SerializedName(SERIALIZED_NAME_AUTHN_CONTEXT_CLASS_REF)
  private String authnContextClassRef;

  public static final String SERIALIZED_NAME_DEFAULT_RELAY_STATE = "defaultRelayState";
  @SerializedName(SERIALIZED_NAME_DEFAULT_RELAY_STATE)
  private String defaultRelayState;

  public static final String SERIALIZED_NAME_DESTINATION = "destination";
  @SerializedName(SERIALIZED_NAME_DESTINATION)
  private String destination;

  public static final String SERIALIZED_NAME_DESTINATION_OVERRIDE = "destinationOverride";
  @SerializedName(SERIALIZED_NAME_DESTINATION_OVERRIDE)
  private String destinationOverride;

  public static final String SERIALIZED_NAME_DIGEST_ALGORITHM = "digestAlgorithm";
  @SerializedName(SERIALIZED_NAME_DIGEST_ALGORITHM)
  private String digestAlgorithm;

  public static final String SERIALIZED_NAME_HONOR_FORCE_AUTHN = "honorForceAuthn";
  @SerializedName(SERIALIZED_NAME_HONOR_FORCE_AUTHN)
  private Boolean honorForceAuthn;

  public static final String SERIALIZED_NAME_IDP_ISSUER = "idpIssuer";
  @SerializedName(SERIALIZED_NAME_IDP_ISSUER)
  private String idpIssuer;

  public static final String SERIALIZED_NAME_INLINE_HOOKS = "inlineHooks";
  @SerializedName(SERIALIZED_NAME_INLINE_HOOKS)
  private List<SignOnInlineHook> inlineHooks = null;

  public static final String SERIALIZED_NAME_RECIPIENT = "recipient";
  @SerializedName(SERIALIZED_NAME_RECIPIENT)
  private String recipient;

  public static final String SERIALIZED_NAME_RECIPIENT_OVERRIDE = "recipientOverride";
  @SerializedName(SERIALIZED_NAME_RECIPIENT_OVERRIDE)
  private String recipientOverride;

  public static final String SERIALIZED_NAME_REQUEST_COMPRESSED = "requestCompressed";
  @SerializedName(SERIALIZED_NAME_REQUEST_COMPRESSED)
  private Boolean requestCompressed;

  public static final String SERIALIZED_NAME_RESPONSE_SIGNED = "responseSigned";
  @SerializedName(SERIALIZED_NAME_RESPONSE_SIGNED)
  private Boolean responseSigned;

  public static final String SERIALIZED_NAME_SAML_SIGNED_REQUEST_ENABLED = "samlSignedRequestEnabled";
  @SerializedName(SERIALIZED_NAME_SAML_SIGNED_REQUEST_ENABLED)
  private Boolean samlSignedRequestEnabled;

  public static final String SERIALIZED_NAME_SIGNATURE_ALGORITHM = "signatureAlgorithm";
  @SerializedName(SERIALIZED_NAME_SIGNATURE_ALGORITHM)
  private String signatureAlgorithm;

  public static final String SERIALIZED_NAME_SLO = "slo";
  @SerializedName(SERIALIZED_NAME_SLO)
  private SingleLogout slo;

  public static final String SERIALIZED_NAME_SP_CERTIFICATE = "spCertificate";
  @SerializedName(SERIALIZED_NAME_SP_CERTIFICATE)
  private SpCertificate spCertificate;

  public static final String SERIALIZED_NAME_SP_ISSUER = "spIssuer";
  @SerializedName(SERIALIZED_NAME_SP_ISSUER)
  private String spIssuer;

  public static final String SERIALIZED_NAME_SSO_ACS_URL = "ssoAcsUrl";
  @SerializedName(SERIALIZED_NAME_SSO_ACS_URL)
  private String ssoAcsUrl;

  public static final String SERIALIZED_NAME_SSO_ACS_URL_OVERRIDE = "ssoAcsUrlOverride";
  @SerializedName(SERIALIZED_NAME_SSO_ACS_URL_OVERRIDE)
  private String ssoAcsUrlOverride;

  public static final String SERIALIZED_NAME_SUBJECT_NAME_ID_FORMAT = "subjectNameIdFormat";
  @SerializedName(SERIALIZED_NAME_SUBJECT_NAME_ID_FORMAT)
  private String subjectNameIdFormat;

  public static final String SERIALIZED_NAME_SUBJECT_NAME_ID_TEMPLATE = "subjectNameIdTemplate";
  @SerializedName(SERIALIZED_NAME_SUBJECT_NAME_ID_TEMPLATE)
  private String subjectNameIdTemplate;

  public SamlApplicationSettingsSignOn() {
  }

  public SamlApplicationSettingsSignOn acsEndpoints(List<AcsEndpoint> acsEndpoints) {
    
    
    
    
    this.acsEndpoints = acsEndpoints;
    return this;
  }

  public SamlApplicationSettingsSignOn addAcsEndpointsItem(AcsEndpoint acsEndpointsItem) {
    if (this.acsEndpoints == null) {
      this.acsEndpoints = new ArrayList<>();
    }
    this.acsEndpoints.add(acsEndpointsItem);
    return this;
  }

   /**
   * Get acsEndpoints
   * @return acsEndpoints
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<AcsEndpoint> getAcsEndpoints() {
    return acsEndpoints;
  }


  public void setAcsEndpoints(List<AcsEndpoint> acsEndpoints) {
    
    
    
    this.acsEndpoints = acsEndpoints;
  }


  public SamlApplicationSettingsSignOn allowMultipleAcsEndpoints(Boolean allowMultipleAcsEndpoints) {
    
    
    
    
    this.allowMultipleAcsEndpoints = allowMultipleAcsEndpoints;
    return this;
  }

   /**
   * Get allowMultipleAcsEndpoints
   * @return allowMultipleAcsEndpoints
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getAllowMultipleAcsEndpoints() {
    return allowMultipleAcsEndpoints;
  }


  public void setAllowMultipleAcsEndpoints(Boolean allowMultipleAcsEndpoints) {
    
    
    
    this.allowMultipleAcsEndpoints = allowMultipleAcsEndpoints;
  }


  public SamlApplicationSettingsSignOn assertionSigned(Boolean assertionSigned) {
    
    
    
    
    this.assertionSigned = assertionSigned;
    return this;
  }

   /**
   * Get assertionSigned
   * @return assertionSigned
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getAssertionSigned() {
    return assertionSigned;
  }


  public void setAssertionSigned(Boolean assertionSigned) {
    
    
    
    this.assertionSigned = assertionSigned;
  }


  public SamlApplicationSettingsSignOn attributeStatements(List<SamlAttributeStatement> attributeStatements) {
    
    
    
    
    this.attributeStatements = attributeStatements;
    return this;
  }

  public SamlApplicationSettingsSignOn addAttributeStatementsItem(SamlAttributeStatement attributeStatementsItem) {
    if (this.attributeStatements == null) {
      this.attributeStatements = new ArrayList<>();
    }
    this.attributeStatements.add(attributeStatementsItem);
    return this;
  }

   /**
   * Get attributeStatements
   * @return attributeStatements
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<SamlAttributeStatement> getAttributeStatements() {
    return attributeStatements;
  }


  public void setAttributeStatements(List<SamlAttributeStatement> attributeStatements) {
    
    
    
    this.attributeStatements = attributeStatements;
  }


  public SamlApplicationSettingsSignOn audience(String audience) {
    
    
    
    
    this.audience = audience;
    return this;
  }

   /**
   * Get audience
   * @return audience
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAudience() {
    return audience;
  }


  public void setAudience(String audience) {
    
    
    
    this.audience = audience;
  }


  public SamlApplicationSettingsSignOn audienceOverride(String audienceOverride) {
    
    
    
    
    this.audienceOverride = audienceOverride;
    return this;
  }

   /**
   * Get audienceOverride
   * @return audienceOverride
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAudienceOverride() {
    return audienceOverride;
  }


  public void setAudienceOverride(String audienceOverride) {
    
    
    
    this.audienceOverride = audienceOverride;
  }


  public SamlApplicationSettingsSignOn authnContextClassRef(String authnContextClassRef) {
    
    
    
    
    this.authnContextClassRef = authnContextClassRef;
    return this;
  }

   /**
   * Get authnContextClassRef
   * @return authnContextClassRef
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAuthnContextClassRef() {
    return authnContextClassRef;
  }


  public void setAuthnContextClassRef(String authnContextClassRef) {
    
    
    
    this.authnContextClassRef = authnContextClassRef;
  }


  public SamlApplicationSettingsSignOn defaultRelayState(String defaultRelayState) {
    
    
    
    
    this.defaultRelayState = defaultRelayState;
    return this;
  }

   /**
   * Get defaultRelayState
   * @return defaultRelayState
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDefaultRelayState() {
    return defaultRelayState;
  }


  public void setDefaultRelayState(String defaultRelayState) {
    
    
    
    this.defaultRelayState = defaultRelayState;
  }


  public SamlApplicationSettingsSignOn destination(String destination) {
    
    
    
    
    this.destination = destination;
    return this;
  }

   /**
   * Get destination
   * @return destination
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDestination() {
    return destination;
  }


  public void setDestination(String destination) {
    
    
    
    this.destination = destination;
  }


  public SamlApplicationSettingsSignOn destinationOverride(String destinationOverride) {
    
    
    
    
    this.destinationOverride = destinationOverride;
    return this;
  }

   /**
   * Get destinationOverride
   * @return destinationOverride
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDestinationOverride() {
    return destinationOverride;
  }


  public void setDestinationOverride(String destinationOverride) {
    
    
    
    this.destinationOverride = destinationOverride;
  }


  public SamlApplicationSettingsSignOn digestAlgorithm(String digestAlgorithm) {
    
    
    
    
    this.digestAlgorithm = digestAlgorithm;
    return this;
  }

   /**
   * Get digestAlgorithm
   * @return digestAlgorithm
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDigestAlgorithm() {
    return digestAlgorithm;
  }


  public void setDigestAlgorithm(String digestAlgorithm) {
    
    
    
    this.digestAlgorithm = digestAlgorithm;
  }


  public SamlApplicationSettingsSignOn honorForceAuthn(Boolean honorForceAuthn) {
    
    
    
    
    this.honorForceAuthn = honorForceAuthn;
    return this;
  }

   /**
   * Get honorForceAuthn
   * @return honorForceAuthn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getHonorForceAuthn() {
    return honorForceAuthn;
  }


  public void setHonorForceAuthn(Boolean honorForceAuthn) {
    
    
    
    this.honorForceAuthn = honorForceAuthn;
  }


  public SamlApplicationSettingsSignOn idpIssuer(String idpIssuer) {
    
    
    
    
    this.idpIssuer = idpIssuer;
    return this;
  }

   /**
   * Get idpIssuer
   * @return idpIssuer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIdpIssuer() {
    return idpIssuer;
  }


  public void setIdpIssuer(String idpIssuer) {
    
    
    
    this.idpIssuer = idpIssuer;
  }


  public SamlApplicationSettingsSignOn inlineHooks(List<SignOnInlineHook> inlineHooks) {
    
    
    
    
    this.inlineHooks = inlineHooks;
    return this;
  }

  public SamlApplicationSettingsSignOn addInlineHooksItem(SignOnInlineHook inlineHooksItem) {
    if (this.inlineHooks == null) {
      this.inlineHooks = new ArrayList<>();
    }
    this.inlineHooks.add(inlineHooksItem);
    return this;
  }

   /**
   * Get inlineHooks
   * @return inlineHooks
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<SignOnInlineHook> getInlineHooks() {
    return inlineHooks;
  }


  public void setInlineHooks(List<SignOnInlineHook> inlineHooks) {
    
    
    
    this.inlineHooks = inlineHooks;
  }


  public SamlApplicationSettingsSignOn recipient(String recipient) {
    
    
    
    
    this.recipient = recipient;
    return this;
  }

   /**
   * Get recipient
   * @return recipient
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getRecipient() {
    return recipient;
  }


  public void setRecipient(String recipient) {
    
    
    
    this.recipient = recipient;
  }


  public SamlApplicationSettingsSignOn recipientOverride(String recipientOverride) {
    
    
    
    
    this.recipientOverride = recipientOverride;
    return this;
  }

   /**
   * Get recipientOverride
   * @return recipientOverride
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getRecipientOverride() {
    return recipientOverride;
  }


  public void setRecipientOverride(String recipientOverride) {
    
    
    
    this.recipientOverride = recipientOverride;
  }


  public SamlApplicationSettingsSignOn requestCompressed(Boolean requestCompressed) {
    
    
    
    
    this.requestCompressed = requestCompressed;
    return this;
  }

   /**
   * Get requestCompressed
   * @return requestCompressed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getRequestCompressed() {
    return requestCompressed;
  }


  public void setRequestCompressed(Boolean requestCompressed) {
    
    
    
    this.requestCompressed = requestCompressed;
  }


  public SamlApplicationSettingsSignOn responseSigned(Boolean responseSigned) {
    
    
    
    
    this.responseSigned = responseSigned;
    return this;
  }

   /**
   * Get responseSigned
   * @return responseSigned
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getResponseSigned() {
    return responseSigned;
  }


  public void setResponseSigned(Boolean responseSigned) {
    
    
    
    this.responseSigned = responseSigned;
  }


  public SamlApplicationSettingsSignOn samlSignedRequestEnabled(Boolean samlSignedRequestEnabled) {
    
    
    
    
    this.samlSignedRequestEnabled = samlSignedRequestEnabled;
    return this;
  }

   /**
   * Get samlSignedRequestEnabled
   * @return samlSignedRequestEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getSamlSignedRequestEnabled() {
    return samlSignedRequestEnabled;
  }


  public void setSamlSignedRequestEnabled(Boolean samlSignedRequestEnabled) {
    
    
    
    this.samlSignedRequestEnabled = samlSignedRequestEnabled;
  }


  public SamlApplicationSettingsSignOn signatureAlgorithm(String signatureAlgorithm) {
    
    
    
    
    this.signatureAlgorithm = signatureAlgorithm;
    return this;
  }

   /**
   * Get signatureAlgorithm
   * @return signatureAlgorithm
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSignatureAlgorithm() {
    return signatureAlgorithm;
  }


  public void setSignatureAlgorithm(String signatureAlgorithm) {
    
    
    
    this.signatureAlgorithm = signatureAlgorithm;
  }


  public SamlApplicationSettingsSignOn slo(SingleLogout slo) {
    
    
    
    
    this.slo = slo;
    return this;
  }

   /**
   * Get slo
   * @return slo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SingleLogout getSlo() {
    return slo;
  }


  public void setSlo(SingleLogout slo) {
    
    
    
    this.slo = slo;
  }


  public SamlApplicationSettingsSignOn spCertificate(SpCertificate spCertificate) {
    
    
    
    
    this.spCertificate = spCertificate;
    return this;
  }

   /**
   * Get spCertificate
   * @return spCertificate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SpCertificate getSpCertificate() {
    return spCertificate;
  }


  public void setSpCertificate(SpCertificate spCertificate) {
    
    
    
    this.spCertificate = spCertificate;
  }


  public SamlApplicationSettingsSignOn spIssuer(String spIssuer) {
    
    
    
    
    this.spIssuer = spIssuer;
    return this;
  }

   /**
   * Get spIssuer
   * @return spIssuer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSpIssuer() {
    return spIssuer;
  }


  public void setSpIssuer(String spIssuer) {
    
    
    
    this.spIssuer = spIssuer;
  }


  public SamlApplicationSettingsSignOn ssoAcsUrl(String ssoAcsUrl) {
    
    
    
    
    this.ssoAcsUrl = ssoAcsUrl;
    return this;
  }

   /**
   * Get ssoAcsUrl
   * @return ssoAcsUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSsoAcsUrl() {
    return ssoAcsUrl;
  }


  public void setSsoAcsUrl(String ssoAcsUrl) {
    
    
    
    this.ssoAcsUrl = ssoAcsUrl;
  }


  public SamlApplicationSettingsSignOn ssoAcsUrlOverride(String ssoAcsUrlOverride) {
    
    
    
    
    this.ssoAcsUrlOverride = ssoAcsUrlOverride;
    return this;
  }

   /**
   * Get ssoAcsUrlOverride
   * @return ssoAcsUrlOverride
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSsoAcsUrlOverride() {
    return ssoAcsUrlOverride;
  }


  public void setSsoAcsUrlOverride(String ssoAcsUrlOverride) {
    
    
    
    this.ssoAcsUrlOverride = ssoAcsUrlOverride;
  }


  public SamlApplicationSettingsSignOn subjectNameIdFormat(String subjectNameIdFormat) {
    
    
    
    
    this.subjectNameIdFormat = subjectNameIdFormat;
    return this;
  }

   /**
   * Get subjectNameIdFormat
   * @return subjectNameIdFormat
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSubjectNameIdFormat() {
    return subjectNameIdFormat;
  }


  public void setSubjectNameIdFormat(String subjectNameIdFormat) {
    
    
    
    this.subjectNameIdFormat = subjectNameIdFormat;
  }


  public SamlApplicationSettingsSignOn subjectNameIdTemplate(String subjectNameIdTemplate) {
    
    
    
    
    this.subjectNameIdTemplate = subjectNameIdTemplate;
    return this;
  }

   /**
   * Get subjectNameIdTemplate
   * @return subjectNameIdTemplate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSubjectNameIdTemplate() {
    return subjectNameIdTemplate;
  }


  public void setSubjectNameIdTemplate(String subjectNameIdTemplate) {
    
    
    
    this.subjectNameIdTemplate = subjectNameIdTemplate;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the SamlApplicationSettingsSignOn instance itself
   */
  public SamlApplicationSettingsSignOn putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SamlApplicationSettingsSignOn samlApplicationSettingsSignOn = (SamlApplicationSettingsSignOn) o;
    return Objects.equals(this.acsEndpoints, samlApplicationSettingsSignOn.acsEndpoints) &&
        Objects.equals(this.allowMultipleAcsEndpoints, samlApplicationSettingsSignOn.allowMultipleAcsEndpoints) &&
        Objects.equals(this.assertionSigned, samlApplicationSettingsSignOn.assertionSigned) &&
        Objects.equals(this.attributeStatements, samlApplicationSettingsSignOn.attributeStatements) &&
        Objects.equals(this.audience, samlApplicationSettingsSignOn.audience) &&
        Objects.equals(this.audienceOverride, samlApplicationSettingsSignOn.audienceOverride) &&
        Objects.equals(this.authnContextClassRef, samlApplicationSettingsSignOn.authnContextClassRef) &&
        Objects.equals(this.defaultRelayState, samlApplicationSettingsSignOn.defaultRelayState) &&
        Objects.equals(this.destination, samlApplicationSettingsSignOn.destination) &&
        Objects.equals(this.destinationOverride, samlApplicationSettingsSignOn.destinationOverride) &&
        Objects.equals(this.digestAlgorithm, samlApplicationSettingsSignOn.digestAlgorithm) &&
        Objects.equals(this.honorForceAuthn, samlApplicationSettingsSignOn.honorForceAuthn) &&
        Objects.equals(this.idpIssuer, samlApplicationSettingsSignOn.idpIssuer) &&
        Objects.equals(this.inlineHooks, samlApplicationSettingsSignOn.inlineHooks) &&
        Objects.equals(this.recipient, samlApplicationSettingsSignOn.recipient) &&
        Objects.equals(this.recipientOverride, samlApplicationSettingsSignOn.recipientOverride) &&
        Objects.equals(this.requestCompressed, samlApplicationSettingsSignOn.requestCompressed) &&
        Objects.equals(this.responseSigned, samlApplicationSettingsSignOn.responseSigned) &&
        Objects.equals(this.samlSignedRequestEnabled, samlApplicationSettingsSignOn.samlSignedRequestEnabled) &&
        Objects.equals(this.signatureAlgorithm, samlApplicationSettingsSignOn.signatureAlgorithm) &&
        Objects.equals(this.slo, samlApplicationSettingsSignOn.slo) &&
        Objects.equals(this.spCertificate, samlApplicationSettingsSignOn.spCertificate) &&
        Objects.equals(this.spIssuer, samlApplicationSettingsSignOn.spIssuer) &&
        Objects.equals(this.ssoAcsUrl, samlApplicationSettingsSignOn.ssoAcsUrl) &&
        Objects.equals(this.ssoAcsUrlOverride, samlApplicationSettingsSignOn.ssoAcsUrlOverride) &&
        Objects.equals(this.subjectNameIdFormat, samlApplicationSettingsSignOn.subjectNameIdFormat) &&
        Objects.equals(this.subjectNameIdTemplate, samlApplicationSettingsSignOn.subjectNameIdTemplate)&&
        Objects.equals(this.additionalProperties, samlApplicationSettingsSignOn.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(acsEndpoints, allowMultipleAcsEndpoints, assertionSigned, attributeStatements, audience, audienceOverride, authnContextClassRef, defaultRelayState, destination, destinationOverride, digestAlgorithm, honorForceAuthn, idpIssuer, inlineHooks, recipient, recipientOverride, requestCompressed, responseSigned, samlSignedRequestEnabled, signatureAlgorithm, slo, spCertificate, spIssuer, ssoAcsUrl, ssoAcsUrlOverride, subjectNameIdFormat, subjectNameIdTemplate, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SamlApplicationSettingsSignOn {\n");
    sb.append("    acsEndpoints: ").append(toIndentedString(acsEndpoints)).append("\n");
    sb.append("    allowMultipleAcsEndpoints: ").append(toIndentedString(allowMultipleAcsEndpoints)).append("\n");
    sb.append("    assertionSigned: ").append(toIndentedString(assertionSigned)).append("\n");
    sb.append("    attributeStatements: ").append(toIndentedString(attributeStatements)).append("\n");
    sb.append("    audience: ").append(toIndentedString(audience)).append("\n");
    sb.append("    audienceOverride: ").append(toIndentedString(audienceOverride)).append("\n");
    sb.append("    authnContextClassRef: ").append(toIndentedString(authnContextClassRef)).append("\n");
    sb.append("    defaultRelayState: ").append(toIndentedString(defaultRelayState)).append("\n");
    sb.append("    destination: ").append(toIndentedString(destination)).append("\n");
    sb.append("    destinationOverride: ").append(toIndentedString(destinationOverride)).append("\n");
    sb.append("    digestAlgorithm: ").append(toIndentedString(digestAlgorithm)).append("\n");
    sb.append("    honorForceAuthn: ").append(toIndentedString(honorForceAuthn)).append("\n");
    sb.append("    idpIssuer: ").append(toIndentedString(idpIssuer)).append("\n");
    sb.append("    inlineHooks: ").append(toIndentedString(inlineHooks)).append("\n");
    sb.append("    recipient: ").append(toIndentedString(recipient)).append("\n");
    sb.append("    recipientOverride: ").append(toIndentedString(recipientOverride)).append("\n");
    sb.append("    requestCompressed: ").append(toIndentedString(requestCompressed)).append("\n");
    sb.append("    responseSigned: ").append(toIndentedString(responseSigned)).append("\n");
    sb.append("    samlSignedRequestEnabled: ").append(toIndentedString(samlSignedRequestEnabled)).append("\n");
    sb.append("    signatureAlgorithm: ").append(toIndentedString(signatureAlgorithm)).append("\n");
    sb.append("    slo: ").append(toIndentedString(slo)).append("\n");
    sb.append("    spCertificate: ").append(toIndentedString(spCertificate)).append("\n");
    sb.append("    spIssuer: ").append(toIndentedString(spIssuer)).append("\n");
    sb.append("    ssoAcsUrl: ").append(toIndentedString(ssoAcsUrl)).append("\n");
    sb.append("    ssoAcsUrlOverride: ").append(toIndentedString(ssoAcsUrlOverride)).append("\n");
    sb.append("    subjectNameIdFormat: ").append(toIndentedString(subjectNameIdFormat)).append("\n");
    sb.append("    subjectNameIdTemplate: ").append(toIndentedString(subjectNameIdTemplate)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("acsEndpoints");
    openapiFields.add("allowMultipleAcsEndpoints");
    openapiFields.add("assertionSigned");
    openapiFields.add("attributeStatements");
    openapiFields.add("audience");
    openapiFields.add("audienceOverride");
    openapiFields.add("authnContextClassRef");
    openapiFields.add("defaultRelayState");
    openapiFields.add("destination");
    openapiFields.add("destinationOverride");
    openapiFields.add("digestAlgorithm");
    openapiFields.add("honorForceAuthn");
    openapiFields.add("idpIssuer");
    openapiFields.add("inlineHooks");
    openapiFields.add("recipient");
    openapiFields.add("recipientOverride");
    openapiFields.add("requestCompressed");
    openapiFields.add("responseSigned");
    openapiFields.add("samlSignedRequestEnabled");
    openapiFields.add("signatureAlgorithm");
    openapiFields.add("slo");
    openapiFields.add("spCertificate");
    openapiFields.add("spIssuer");
    openapiFields.add("ssoAcsUrl");
    openapiFields.add("ssoAcsUrlOverride");
    openapiFields.add("subjectNameIdFormat");
    openapiFields.add("subjectNameIdTemplate");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to SamlApplicationSettingsSignOn
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!SamlApplicationSettingsSignOn.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SamlApplicationSettingsSignOn is not found in the empty JSON string", SamlApplicationSettingsSignOn.openapiRequiredFields.toString()));
        }
      }
      if (jsonObj.get("acsEndpoints") != null && !jsonObj.get("acsEndpoints").isJsonNull()) {
        JsonArray jsonArrayacsEndpoints = jsonObj.getAsJsonArray("acsEndpoints");
        if (jsonArrayacsEndpoints != null) {
          // ensure the json data is an array
          if (!jsonObj.get("acsEndpoints").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `acsEndpoints` to be an array in the JSON string but got `%s`", jsonObj.get("acsEndpoints").toString()));
          }

          // validate the optional field `acsEndpoints` (array)
          for (int i = 0; i < jsonArrayacsEndpoints.size(); i++) {
            AcsEndpoint.validateJsonObject(jsonArrayacsEndpoints.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("attributeStatements") != null && !jsonObj.get("attributeStatements").isJsonNull()) {
        JsonArray jsonArrayattributeStatements = jsonObj.getAsJsonArray("attributeStatements");
        if (jsonArrayattributeStatements != null) {
          // ensure the json data is an array
          if (!jsonObj.get("attributeStatements").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `attributeStatements` to be an array in the JSON string but got `%s`", jsonObj.get("attributeStatements").toString()));
          }

          // validate the optional field `attributeStatements` (array)
          for (int i = 0; i < jsonArrayattributeStatements.size(); i++) {
            SamlAttributeStatement.validateJsonObject(jsonArrayattributeStatements.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("audience") != null && !jsonObj.get("audience").isJsonNull()) && !jsonObj.get("audience").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `audience` to be a primitive type in the JSON string but got `%s`", jsonObj.get("audience").toString()));
      }
      if ((jsonObj.get("audienceOverride") != null && !jsonObj.get("audienceOverride").isJsonNull()) && !jsonObj.get("audienceOverride").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `audienceOverride` to be a primitive type in the JSON string but got `%s`", jsonObj.get("audienceOverride").toString()));
      }
      if ((jsonObj.get("authnContextClassRef") != null && !jsonObj.get("authnContextClassRef").isJsonNull()) && !jsonObj.get("authnContextClassRef").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `authnContextClassRef` to be a primitive type in the JSON string but got `%s`", jsonObj.get("authnContextClassRef").toString()));
      }
      if ((jsonObj.get("defaultRelayState") != null && !jsonObj.get("defaultRelayState").isJsonNull()) && !jsonObj.get("defaultRelayState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `defaultRelayState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("defaultRelayState").toString()));
      }
      if ((jsonObj.get("destination") != null && !jsonObj.get("destination").isJsonNull()) && !jsonObj.get("destination").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `destination` to be a primitive type in the JSON string but got `%s`", jsonObj.get("destination").toString()));
      }
      if ((jsonObj.get("destinationOverride") != null && !jsonObj.get("destinationOverride").isJsonNull()) && !jsonObj.get("destinationOverride").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `destinationOverride` to be a primitive type in the JSON string but got `%s`", jsonObj.get("destinationOverride").toString()));
      }
      if ((jsonObj.get("digestAlgorithm") != null && !jsonObj.get("digestAlgorithm").isJsonNull()) && !jsonObj.get("digestAlgorithm").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `digestAlgorithm` to be a primitive type in the JSON string but got `%s`", jsonObj.get("digestAlgorithm").toString()));
      }
      if ((jsonObj.get("idpIssuer") != null && !jsonObj.get("idpIssuer").isJsonNull()) && !jsonObj.get("idpIssuer").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `idpIssuer` to be a primitive type in the JSON string but got `%s`", jsonObj.get("idpIssuer").toString()));
      }
      if (jsonObj.get("inlineHooks") != null && !jsonObj.get("inlineHooks").isJsonNull()) {
        JsonArray jsonArrayinlineHooks = jsonObj.getAsJsonArray("inlineHooks");
        if (jsonArrayinlineHooks != null) {
          // ensure the json data is an array
          if (!jsonObj.get("inlineHooks").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `inlineHooks` to be an array in the JSON string but got `%s`", jsonObj.get("inlineHooks").toString()));
          }

          // validate the optional field `inlineHooks` (array)
          for (int i = 0; i < jsonArrayinlineHooks.size(); i++) {
            SignOnInlineHook.validateJsonObject(jsonArrayinlineHooks.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("recipient") != null && !jsonObj.get("recipient").isJsonNull()) && !jsonObj.get("recipient").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recipient` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recipient").toString()));
      }
      if ((jsonObj.get("recipientOverride") != null && !jsonObj.get("recipientOverride").isJsonNull()) && !jsonObj.get("recipientOverride").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recipientOverride` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recipientOverride").toString()));
      }
      if ((jsonObj.get("signatureAlgorithm") != null && !jsonObj.get("signatureAlgorithm").isJsonNull()) && !jsonObj.get("signatureAlgorithm").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `signatureAlgorithm` to be a primitive type in the JSON string but got `%s`", jsonObj.get("signatureAlgorithm").toString()));
      }
      // validate the optional field `slo`
      if (jsonObj.get("slo") != null && !jsonObj.get("slo").isJsonNull()) {
        SingleLogout.validateJsonObject(jsonObj.getAsJsonObject("slo"));
      }
      // validate the optional field `spCertificate`
      if (jsonObj.get("spCertificate") != null && !jsonObj.get("spCertificate").isJsonNull()) {
        SpCertificate.validateJsonObject(jsonObj.getAsJsonObject("spCertificate"));
      }
      if ((jsonObj.get("spIssuer") != null && !jsonObj.get("spIssuer").isJsonNull()) && !jsonObj.get("spIssuer").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `spIssuer` to be a primitive type in the JSON string but got `%s`", jsonObj.get("spIssuer").toString()));
      }
      if ((jsonObj.get("ssoAcsUrl") != null && !jsonObj.get("ssoAcsUrl").isJsonNull()) && !jsonObj.get("ssoAcsUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ssoAcsUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ssoAcsUrl").toString()));
      }
      if ((jsonObj.get("ssoAcsUrlOverride") != null && !jsonObj.get("ssoAcsUrlOverride").isJsonNull()) && !jsonObj.get("ssoAcsUrlOverride").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ssoAcsUrlOverride` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ssoAcsUrlOverride").toString()));
      }
      if ((jsonObj.get("subjectNameIdFormat") != null && !jsonObj.get("subjectNameIdFormat").isJsonNull()) && !jsonObj.get("subjectNameIdFormat").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subjectNameIdFormat` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subjectNameIdFormat").toString()));
      }
      if ((jsonObj.get("subjectNameIdTemplate") != null && !jsonObj.get("subjectNameIdTemplate").isJsonNull()) && !jsonObj.get("subjectNameIdTemplate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subjectNameIdTemplate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subjectNameIdTemplate").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SamlApplicationSettingsSignOn.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SamlApplicationSettingsSignOn' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SamlApplicationSettingsSignOn> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SamlApplicationSettingsSignOn.class));

       return (TypeAdapter<T>) new TypeAdapter<SamlApplicationSettingsSignOn>() {
           @Override
           public void write(JsonWriter out, SamlApplicationSettingsSignOn value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public SamlApplicationSettingsSignOn read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             SamlApplicationSettingsSignOn instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of SamlApplicationSettingsSignOn given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of SamlApplicationSettingsSignOn
  * @throws IOException if the JSON string is invalid with respect to SamlApplicationSettingsSignOn
  */
  public static SamlApplicationSettingsSignOn fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SamlApplicationSettingsSignOn.class);
  }

 /**
  * Convert an instance of SamlApplicationSettingsSignOn to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

