/*
 * Okta API
 * Allows customers to easily access the Okta API
 *
 * The version of the OpenAPI document: 2.16.0
 * Contact: devex-public@okta.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * SwaApplicationSettingsApplication
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class SwaApplicationSettingsApplication {
  public static final String SERIALIZED_NAME_BUTTON_FIELD = "buttonField";
  @SerializedName(SERIALIZED_NAME_BUTTON_FIELD)
  private String buttonField;

  public static final String SERIALIZED_NAME_CHECKBOX = "checkbox";
  @SerializedName(SERIALIZED_NAME_CHECKBOX)
  private String checkbox;

  public static final String SERIALIZED_NAME_LOGIN_URL_REGEX = "loginUrlRegex";
  @SerializedName(SERIALIZED_NAME_LOGIN_URL_REGEX)
  private String loginUrlRegex;

  public static final String SERIALIZED_NAME_PASSWORD_FIELD = "passwordField";
  @SerializedName(SERIALIZED_NAME_PASSWORD_FIELD)
  private String passwordField;

  public static final String SERIALIZED_NAME_REDIRECT_URL = "redirectUrl";
  @SerializedName(SERIALIZED_NAME_REDIRECT_URL)
  private String redirectUrl;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_USERNAME_FIELD = "usernameField";
  @SerializedName(SERIALIZED_NAME_USERNAME_FIELD)
  private String usernameField;

  public SwaApplicationSettingsApplication() {
  }

  public SwaApplicationSettingsApplication buttonField(String buttonField) {
    
    
    
    
    this.buttonField = buttonField;
    return this;
  }

   /**
   * Get buttonField
   * @return buttonField
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getButtonField() {
    return buttonField;
  }


  public void setButtonField(String buttonField) {
    
    
    
    this.buttonField = buttonField;
  }


  public SwaApplicationSettingsApplication checkbox(String checkbox) {
    
    
    
    
    this.checkbox = checkbox;
    return this;
  }

   /**
   * Get checkbox
   * @return checkbox
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCheckbox() {
    return checkbox;
  }


  public void setCheckbox(String checkbox) {
    
    
    
    this.checkbox = checkbox;
  }


  public SwaApplicationSettingsApplication loginUrlRegex(String loginUrlRegex) {
    
    
    
    
    this.loginUrlRegex = loginUrlRegex;
    return this;
  }

   /**
   * Get loginUrlRegex
   * @return loginUrlRegex
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLoginUrlRegex() {
    return loginUrlRegex;
  }


  public void setLoginUrlRegex(String loginUrlRegex) {
    
    
    
    this.loginUrlRegex = loginUrlRegex;
  }


  public SwaApplicationSettingsApplication passwordField(String passwordField) {
    
    
    
    
    this.passwordField = passwordField;
    return this;
  }

   /**
   * Get passwordField
   * @return passwordField
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPasswordField() {
    return passwordField;
  }


  public void setPasswordField(String passwordField) {
    
    
    
    this.passwordField = passwordField;
  }


  public SwaApplicationSettingsApplication redirectUrl(String redirectUrl) {
    
    
    
    
    this.redirectUrl = redirectUrl;
    return this;
  }

   /**
   * Get redirectUrl
   * @return redirectUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getRedirectUrl() {
    return redirectUrl;
  }


  public void setRedirectUrl(String redirectUrl) {
    
    
    
    this.redirectUrl = redirectUrl;
  }


  public SwaApplicationSettingsApplication url(String url) {
    
    
    
    
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUrl() {
    return url;
  }


  public void setUrl(String url) {
    
    
    
    this.url = url;
  }


  public SwaApplicationSettingsApplication usernameField(String usernameField) {
    
    
    
    
    this.usernameField = usernameField;
    return this;
  }

   /**
   * Get usernameField
   * @return usernameField
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUsernameField() {
    return usernameField;
  }


  public void setUsernameField(String usernameField) {
    
    
    
    this.usernameField = usernameField;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the SwaApplicationSettingsApplication instance itself
   */
  public SwaApplicationSettingsApplication putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SwaApplicationSettingsApplication swaApplicationSettingsApplication = (SwaApplicationSettingsApplication) o;
    return Objects.equals(this.buttonField, swaApplicationSettingsApplication.buttonField) &&
        Objects.equals(this.checkbox, swaApplicationSettingsApplication.checkbox) &&
        Objects.equals(this.loginUrlRegex, swaApplicationSettingsApplication.loginUrlRegex) &&
        Objects.equals(this.passwordField, swaApplicationSettingsApplication.passwordField) &&
        Objects.equals(this.redirectUrl, swaApplicationSettingsApplication.redirectUrl) &&
        Objects.equals(this.url, swaApplicationSettingsApplication.url) &&
        Objects.equals(this.usernameField, swaApplicationSettingsApplication.usernameField)&&
        Objects.equals(this.additionalProperties, swaApplicationSettingsApplication.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(buttonField, checkbox, loginUrlRegex, passwordField, redirectUrl, url, usernameField, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SwaApplicationSettingsApplication {\n");
    sb.append("    buttonField: ").append(toIndentedString(buttonField)).append("\n");
    sb.append("    checkbox: ").append(toIndentedString(checkbox)).append("\n");
    sb.append("    loginUrlRegex: ").append(toIndentedString(loginUrlRegex)).append("\n");
    sb.append("    passwordField: ").append(toIndentedString(passwordField)).append("\n");
    sb.append("    redirectUrl: ").append(toIndentedString(redirectUrl)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    usernameField: ").append(toIndentedString(usernameField)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("buttonField");
    openapiFields.add("checkbox");
    openapiFields.add("loginUrlRegex");
    openapiFields.add("passwordField");
    openapiFields.add("redirectUrl");
    openapiFields.add("url");
    openapiFields.add("usernameField");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to SwaApplicationSettingsApplication
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!SwaApplicationSettingsApplication.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SwaApplicationSettingsApplication is not found in the empty JSON string", SwaApplicationSettingsApplication.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("buttonField") != null && !jsonObj.get("buttonField").isJsonNull()) && !jsonObj.get("buttonField").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `buttonField` to be a primitive type in the JSON string but got `%s`", jsonObj.get("buttonField").toString()));
      }
      if ((jsonObj.get("checkbox") != null && !jsonObj.get("checkbox").isJsonNull()) && !jsonObj.get("checkbox").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `checkbox` to be a primitive type in the JSON string but got `%s`", jsonObj.get("checkbox").toString()));
      }
      if ((jsonObj.get("loginUrlRegex") != null && !jsonObj.get("loginUrlRegex").isJsonNull()) && !jsonObj.get("loginUrlRegex").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `loginUrlRegex` to be a primitive type in the JSON string but got `%s`", jsonObj.get("loginUrlRegex").toString()));
      }
      if ((jsonObj.get("passwordField") != null && !jsonObj.get("passwordField").isJsonNull()) && !jsonObj.get("passwordField").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `passwordField` to be a primitive type in the JSON string but got `%s`", jsonObj.get("passwordField").toString()));
      }
      if ((jsonObj.get("redirectUrl") != null && !jsonObj.get("redirectUrl").isJsonNull()) && !jsonObj.get("redirectUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `redirectUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("redirectUrl").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
      if ((jsonObj.get("usernameField") != null && !jsonObj.get("usernameField").isJsonNull()) && !jsonObj.get("usernameField").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `usernameField` to be a primitive type in the JSON string but got `%s`", jsonObj.get("usernameField").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SwaApplicationSettingsApplication.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SwaApplicationSettingsApplication' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SwaApplicationSettingsApplication> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SwaApplicationSettingsApplication.class));

       return (TypeAdapter<T>) new TypeAdapter<SwaApplicationSettingsApplication>() {
           @Override
           public void write(JsonWriter out, SwaApplicationSettingsApplication value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public SwaApplicationSettingsApplication read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             SwaApplicationSettingsApplication instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of SwaApplicationSettingsApplication given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of SwaApplicationSettingsApplication
  * @throws IOException if the JSON string is invalid with respect to SwaApplicationSettingsApplication
  */
  public static SwaApplicationSettingsApplication fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SwaApplicationSettingsApplication.class);
  }

 /**
  * Convert an instance of SwaApplicationSettingsApplication to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

