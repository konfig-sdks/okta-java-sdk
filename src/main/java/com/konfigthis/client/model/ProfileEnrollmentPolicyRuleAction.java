/*
 * Okta API
 * Allows customers to easily access the Okta API
 *
 * The version of the OpenAPI document: 2.16.0
 * Contact: devex-public@okta.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.PreRegistrationInlineHook;
import com.konfigthis.client.model.ProfileEnrollmentPolicyRuleActivationRequirement;
import com.konfigthis.client.model.ProfileEnrollmentPolicyRuleProfileAttribute;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * ProfileEnrollmentPolicyRuleAction
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class ProfileEnrollmentPolicyRuleAction {
  public static final String SERIALIZED_NAME_ACCESS = "access";
  @SerializedName(SERIALIZED_NAME_ACCESS)
  private String access;

  public static final String SERIALIZED_NAME_ACTIVATION_REQUIREMENTS = "activationRequirements";
  @SerializedName(SERIALIZED_NAME_ACTIVATION_REQUIREMENTS)
  private ProfileEnrollmentPolicyRuleActivationRequirement activationRequirements;

  public static final String SERIALIZED_NAME_PRE_REGISTRATION_INLINE_HOOKS = "preRegistrationInlineHooks";
  @SerializedName(SERIALIZED_NAME_PRE_REGISTRATION_INLINE_HOOKS)
  private List<PreRegistrationInlineHook> preRegistrationInlineHooks = null;

  public static final String SERIALIZED_NAME_PROFILE_ATTRIBUTES = "profileAttributes";
  @SerializedName(SERIALIZED_NAME_PROFILE_ATTRIBUTES)
  private List<ProfileEnrollmentPolicyRuleProfileAttribute> profileAttributes = null;

  public static final String SERIALIZED_NAME_TARGET_GROUP_IDS = "targetGroupIds";
  @SerializedName(SERIALIZED_NAME_TARGET_GROUP_IDS)
  private List<String> targetGroupIds = null;

  public static final String SERIALIZED_NAME_UI_SCHEMA_ID = "uiSchemaId";
  @SerializedName(SERIALIZED_NAME_UI_SCHEMA_ID)
  private String uiSchemaId;

  public static final String SERIALIZED_NAME_UNKNOWN_USER_ACTION = "unknownUserAction";
  @SerializedName(SERIALIZED_NAME_UNKNOWN_USER_ACTION)
  private String unknownUserAction;

  public ProfileEnrollmentPolicyRuleAction() {
  }

  public ProfileEnrollmentPolicyRuleAction access(String access) {
    
    
    
    
    this.access = access;
    return this;
  }

   /**
   * Get access
   * @return access
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAccess() {
    return access;
  }


  public void setAccess(String access) {
    
    
    
    this.access = access;
  }


  public ProfileEnrollmentPolicyRuleAction activationRequirements(ProfileEnrollmentPolicyRuleActivationRequirement activationRequirements) {
    
    
    
    
    this.activationRequirements = activationRequirements;
    return this;
  }

   /**
   * Get activationRequirements
   * @return activationRequirements
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ProfileEnrollmentPolicyRuleActivationRequirement getActivationRequirements() {
    return activationRequirements;
  }


  public void setActivationRequirements(ProfileEnrollmentPolicyRuleActivationRequirement activationRequirements) {
    
    
    
    this.activationRequirements = activationRequirements;
  }


  public ProfileEnrollmentPolicyRuleAction preRegistrationInlineHooks(List<PreRegistrationInlineHook> preRegistrationInlineHooks) {
    
    
    
    
    this.preRegistrationInlineHooks = preRegistrationInlineHooks;
    return this;
  }

  public ProfileEnrollmentPolicyRuleAction addPreRegistrationInlineHooksItem(PreRegistrationInlineHook preRegistrationInlineHooksItem) {
    if (this.preRegistrationInlineHooks == null) {
      this.preRegistrationInlineHooks = new ArrayList<>();
    }
    this.preRegistrationInlineHooks.add(preRegistrationInlineHooksItem);
    return this;
  }

   /**
   * Get preRegistrationInlineHooks
   * @return preRegistrationInlineHooks
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<PreRegistrationInlineHook> getPreRegistrationInlineHooks() {
    return preRegistrationInlineHooks;
  }


  public void setPreRegistrationInlineHooks(List<PreRegistrationInlineHook> preRegistrationInlineHooks) {
    
    
    
    this.preRegistrationInlineHooks = preRegistrationInlineHooks;
  }


  public ProfileEnrollmentPolicyRuleAction profileAttributes(List<ProfileEnrollmentPolicyRuleProfileAttribute> profileAttributes) {
    
    
    
    
    this.profileAttributes = profileAttributes;
    return this;
  }

  public ProfileEnrollmentPolicyRuleAction addProfileAttributesItem(ProfileEnrollmentPolicyRuleProfileAttribute profileAttributesItem) {
    if (this.profileAttributes == null) {
      this.profileAttributes = new ArrayList<>();
    }
    this.profileAttributes.add(profileAttributesItem);
    return this;
  }

   /**
   * Get profileAttributes
   * @return profileAttributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ProfileEnrollmentPolicyRuleProfileAttribute> getProfileAttributes() {
    return profileAttributes;
  }


  public void setProfileAttributes(List<ProfileEnrollmentPolicyRuleProfileAttribute> profileAttributes) {
    
    
    
    this.profileAttributes = profileAttributes;
  }


  public ProfileEnrollmentPolicyRuleAction targetGroupIds(List<String> targetGroupIds) {
    
    
    
    
    this.targetGroupIds = targetGroupIds;
    return this;
  }

  public ProfileEnrollmentPolicyRuleAction addTargetGroupIdsItem(String targetGroupIdsItem) {
    if (this.targetGroupIds == null) {
      this.targetGroupIds = new ArrayList<>();
    }
    this.targetGroupIds.add(targetGroupIdsItem);
    return this;
  }

   /**
   * Get targetGroupIds
   * @return targetGroupIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getTargetGroupIds() {
    return targetGroupIds;
  }


  public void setTargetGroupIds(List<String> targetGroupIds) {
    
    
    
    this.targetGroupIds = targetGroupIds;
  }


  public ProfileEnrollmentPolicyRuleAction uiSchemaId(String uiSchemaId) {
    
    
    
    
    this.uiSchemaId = uiSchemaId;
    return this;
  }

   /**
   * Get uiSchemaId
   * @return uiSchemaId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUiSchemaId() {
    return uiSchemaId;
  }


  public void setUiSchemaId(String uiSchemaId) {
    
    
    
    this.uiSchemaId = uiSchemaId;
  }


  public ProfileEnrollmentPolicyRuleAction unknownUserAction(String unknownUserAction) {
    
    
    
    
    this.unknownUserAction = unknownUserAction;
    return this;
  }

   /**
   * Get unknownUserAction
   * @return unknownUserAction
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUnknownUserAction() {
    return unknownUserAction;
  }


  public void setUnknownUserAction(String unknownUserAction) {
    
    
    
    this.unknownUserAction = unknownUserAction;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the ProfileEnrollmentPolicyRuleAction instance itself
   */
  public ProfileEnrollmentPolicyRuleAction putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProfileEnrollmentPolicyRuleAction profileEnrollmentPolicyRuleAction = (ProfileEnrollmentPolicyRuleAction) o;
    return Objects.equals(this.access, profileEnrollmentPolicyRuleAction.access) &&
        Objects.equals(this.activationRequirements, profileEnrollmentPolicyRuleAction.activationRequirements) &&
        Objects.equals(this.preRegistrationInlineHooks, profileEnrollmentPolicyRuleAction.preRegistrationInlineHooks) &&
        Objects.equals(this.profileAttributes, profileEnrollmentPolicyRuleAction.profileAttributes) &&
        Objects.equals(this.targetGroupIds, profileEnrollmentPolicyRuleAction.targetGroupIds) &&
        Objects.equals(this.uiSchemaId, profileEnrollmentPolicyRuleAction.uiSchemaId) &&
        Objects.equals(this.unknownUserAction, profileEnrollmentPolicyRuleAction.unknownUserAction)&&
        Objects.equals(this.additionalProperties, profileEnrollmentPolicyRuleAction.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(access, activationRequirements, preRegistrationInlineHooks, profileAttributes, targetGroupIds, uiSchemaId, unknownUserAction, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProfileEnrollmentPolicyRuleAction {\n");
    sb.append("    access: ").append(toIndentedString(access)).append("\n");
    sb.append("    activationRequirements: ").append(toIndentedString(activationRequirements)).append("\n");
    sb.append("    preRegistrationInlineHooks: ").append(toIndentedString(preRegistrationInlineHooks)).append("\n");
    sb.append("    profileAttributes: ").append(toIndentedString(profileAttributes)).append("\n");
    sb.append("    targetGroupIds: ").append(toIndentedString(targetGroupIds)).append("\n");
    sb.append("    uiSchemaId: ").append(toIndentedString(uiSchemaId)).append("\n");
    sb.append("    unknownUserAction: ").append(toIndentedString(unknownUserAction)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("access");
    openapiFields.add("activationRequirements");
    openapiFields.add("preRegistrationInlineHooks");
    openapiFields.add("profileAttributes");
    openapiFields.add("targetGroupIds");
    openapiFields.add("uiSchemaId");
    openapiFields.add("unknownUserAction");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ProfileEnrollmentPolicyRuleAction
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ProfileEnrollmentPolicyRuleAction.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ProfileEnrollmentPolicyRuleAction is not found in the empty JSON string", ProfileEnrollmentPolicyRuleAction.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("access") != null && !jsonObj.get("access").isJsonNull()) && !jsonObj.get("access").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `access` to be a primitive type in the JSON string but got `%s`", jsonObj.get("access").toString()));
      }
      // validate the optional field `activationRequirements`
      if (jsonObj.get("activationRequirements") != null && !jsonObj.get("activationRequirements").isJsonNull()) {
        ProfileEnrollmentPolicyRuleActivationRequirement.validateJsonObject(jsonObj.getAsJsonObject("activationRequirements"));
      }
      if (jsonObj.get("preRegistrationInlineHooks") != null && !jsonObj.get("preRegistrationInlineHooks").isJsonNull()) {
        JsonArray jsonArraypreRegistrationInlineHooks = jsonObj.getAsJsonArray("preRegistrationInlineHooks");
        if (jsonArraypreRegistrationInlineHooks != null) {
          // ensure the json data is an array
          if (!jsonObj.get("preRegistrationInlineHooks").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `preRegistrationInlineHooks` to be an array in the JSON string but got `%s`", jsonObj.get("preRegistrationInlineHooks").toString()));
          }

          // validate the optional field `preRegistrationInlineHooks` (array)
          for (int i = 0; i < jsonArraypreRegistrationInlineHooks.size(); i++) {
            PreRegistrationInlineHook.validateJsonObject(jsonArraypreRegistrationInlineHooks.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("profileAttributes") != null && !jsonObj.get("profileAttributes").isJsonNull()) {
        JsonArray jsonArrayprofileAttributes = jsonObj.getAsJsonArray("profileAttributes");
        if (jsonArrayprofileAttributes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("profileAttributes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `profileAttributes` to be an array in the JSON string but got `%s`", jsonObj.get("profileAttributes").toString()));
          }

          // validate the optional field `profileAttributes` (array)
          for (int i = 0; i < jsonArrayprofileAttributes.size(); i++) {
            ProfileEnrollmentPolicyRuleProfileAttribute.validateJsonObject(jsonArrayprofileAttributes.get(i).getAsJsonObject());
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("targetGroupIds") != null && !jsonObj.get("targetGroupIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `targetGroupIds` to be an array in the JSON string but got `%s`", jsonObj.get("targetGroupIds").toString()));
      }
      if ((jsonObj.get("uiSchemaId") != null && !jsonObj.get("uiSchemaId").isJsonNull()) && !jsonObj.get("uiSchemaId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uiSchemaId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uiSchemaId").toString()));
      }
      if ((jsonObj.get("unknownUserAction") != null && !jsonObj.get("unknownUserAction").isJsonNull()) && !jsonObj.get("unknownUserAction").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `unknownUserAction` to be a primitive type in the JSON string but got `%s`", jsonObj.get("unknownUserAction").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ProfileEnrollmentPolicyRuleAction.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ProfileEnrollmentPolicyRuleAction' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ProfileEnrollmentPolicyRuleAction> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ProfileEnrollmentPolicyRuleAction.class));

       return (TypeAdapter<T>) new TypeAdapter<ProfileEnrollmentPolicyRuleAction>() {
           @Override
           public void write(JsonWriter out, ProfileEnrollmentPolicyRuleAction value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public ProfileEnrollmentPolicyRuleAction read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             ProfileEnrollmentPolicyRuleAction instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ProfileEnrollmentPolicyRuleAction given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ProfileEnrollmentPolicyRuleAction
  * @throws IOException if the JSON string is invalid with respect to ProfileEnrollmentPolicyRuleAction
  */
  public static ProfileEnrollmentPolicyRuleAction fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ProfileEnrollmentPolicyRuleAction.class);
  }

 /**
  * Convert an instance of ProfileEnrollmentPolicyRuleAction to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

