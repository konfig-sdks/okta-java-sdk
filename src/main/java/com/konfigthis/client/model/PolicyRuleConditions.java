/*
 * Okta API
 * Allows customers to easily access the Okta API
 *
 * The version of the OpenAPI document: 2.16.0
 * Contact: devex-public@okta.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.AppAndInstancePolicyRuleCondition;
import com.konfigthis.client.model.AppInstancePolicyRuleCondition;
import com.konfigthis.client.model.BeforeScheduledActionPolicyRuleCondition;
import com.konfigthis.client.model.ClientPolicyCondition;
import com.konfigthis.client.model.ContextPolicyRuleCondition;
import com.konfigthis.client.model.DevicePolicyRuleCondition;
import com.konfigthis.client.model.GrantTypePolicyRuleCondition;
import com.konfigthis.client.model.GroupPolicyRuleCondition;
import com.konfigthis.client.model.IdentityProviderPolicyRuleCondition;
import com.konfigthis.client.model.MDMEnrollmentPolicyRuleCondition;
import com.konfigthis.client.model.OAuth2ScopesMediationPolicyRuleCondition;
import com.konfigthis.client.model.PasswordPolicyAuthenticationProviderCondition;
import com.konfigthis.client.model.PlatformPolicyRuleCondition;
import com.konfigthis.client.model.PolicyNetworkCondition;
import com.konfigthis.client.model.PolicyPeopleCondition;
import com.konfigthis.client.model.PolicyRuleAuthContextCondition;
import com.konfigthis.client.model.RiskPolicyRuleCondition;
import com.konfigthis.client.model.RiskScorePolicyRuleCondition;
import com.konfigthis.client.model.UserIdentifierPolicyRuleCondition;
import com.konfigthis.client.model.UserPolicyRuleCondition;
import com.konfigthis.client.model.UserStatusPolicyRuleCondition;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * PolicyRuleConditions
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class PolicyRuleConditions {
  public static final String SERIALIZED_NAME_APP = "app";
  @SerializedName(SERIALIZED_NAME_APP)
  private AppAndInstancePolicyRuleCondition app;

  public static final String SERIALIZED_NAME_APPS = "apps";
  @SerializedName(SERIALIZED_NAME_APPS)
  private AppInstancePolicyRuleCondition apps;

  public static final String SERIALIZED_NAME_AUTH_CONTEXT = "authContext";
  @SerializedName(SERIALIZED_NAME_AUTH_CONTEXT)
  private PolicyRuleAuthContextCondition authContext;

  public static final String SERIALIZED_NAME_AUTH_PROVIDER = "authProvider";
  @SerializedName(SERIALIZED_NAME_AUTH_PROVIDER)
  private PasswordPolicyAuthenticationProviderCondition authProvider;

  public static final String SERIALIZED_NAME_BEFORE_SCHEDULED_ACTION = "beforeScheduledAction";
  @SerializedName(SERIALIZED_NAME_BEFORE_SCHEDULED_ACTION)
  private BeforeScheduledActionPolicyRuleCondition beforeScheduledAction;

  public static final String SERIALIZED_NAME_CLIENTS = "clients";
  @SerializedName(SERIALIZED_NAME_CLIENTS)
  private ClientPolicyCondition clients;

  public static final String SERIALIZED_NAME_CONTEXT = "context";
  @SerializedName(SERIALIZED_NAME_CONTEXT)
  private ContextPolicyRuleCondition context;

  public static final String SERIALIZED_NAME_DEVICE = "device";
  @SerializedName(SERIALIZED_NAME_DEVICE)
  private DevicePolicyRuleCondition device;

  public static final String SERIALIZED_NAME_GRANT_TYPES = "grantTypes";
  @SerializedName(SERIALIZED_NAME_GRANT_TYPES)
  private GrantTypePolicyRuleCondition grantTypes;

  public static final String SERIALIZED_NAME_GROUPS = "groups";
  @SerializedName(SERIALIZED_NAME_GROUPS)
  private GroupPolicyRuleCondition groups;

  public static final String SERIALIZED_NAME_IDENTITY_PROVIDER = "identityProvider";
  @SerializedName(SERIALIZED_NAME_IDENTITY_PROVIDER)
  private IdentityProviderPolicyRuleCondition identityProvider;

  public static final String SERIALIZED_NAME_MDM_ENROLLMENT = "mdmEnrollment";
  @SerializedName(SERIALIZED_NAME_MDM_ENROLLMENT)
  private MDMEnrollmentPolicyRuleCondition mdmEnrollment;

  public static final String SERIALIZED_NAME_NETWORK = "network";
  @SerializedName(SERIALIZED_NAME_NETWORK)
  private PolicyNetworkCondition network;

  public static final String SERIALIZED_NAME_PEOPLE = "people";
  @SerializedName(SERIALIZED_NAME_PEOPLE)
  private PolicyPeopleCondition people;

  public static final String SERIALIZED_NAME_PLATFORM = "platform";
  @SerializedName(SERIALIZED_NAME_PLATFORM)
  private PlatformPolicyRuleCondition platform;

  public static final String SERIALIZED_NAME_RISK = "risk";
  @SerializedName(SERIALIZED_NAME_RISK)
  private RiskPolicyRuleCondition risk;

  public static final String SERIALIZED_NAME_RISK_SCORE = "riskScore";
  @SerializedName(SERIALIZED_NAME_RISK_SCORE)
  private RiskScorePolicyRuleCondition riskScore;

  public static final String SERIALIZED_NAME_SCOPES = "scopes";
  @SerializedName(SERIALIZED_NAME_SCOPES)
  private OAuth2ScopesMediationPolicyRuleCondition scopes;

  public static final String SERIALIZED_NAME_USER_IDENTIFIER = "userIdentifier";
  @SerializedName(SERIALIZED_NAME_USER_IDENTIFIER)
  private UserIdentifierPolicyRuleCondition userIdentifier;

  public static final String SERIALIZED_NAME_USER_STATUS = "userStatus";
  @SerializedName(SERIALIZED_NAME_USER_STATUS)
  private UserStatusPolicyRuleCondition userStatus;

  public static final String SERIALIZED_NAME_USERS = "users";
  @SerializedName(SERIALIZED_NAME_USERS)
  private UserPolicyRuleCondition users;

  public PolicyRuleConditions() {
  }

  public PolicyRuleConditions app(AppAndInstancePolicyRuleCondition app) {
    
    
    
    
    this.app = app;
    return this;
  }

   /**
   * Get app
   * @return app
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AppAndInstancePolicyRuleCondition getApp() {
    return app;
  }


  public void setApp(AppAndInstancePolicyRuleCondition app) {
    
    
    
    this.app = app;
  }


  public PolicyRuleConditions apps(AppInstancePolicyRuleCondition apps) {
    
    
    
    
    this.apps = apps;
    return this;
  }

   /**
   * Get apps
   * @return apps
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AppInstancePolicyRuleCondition getApps() {
    return apps;
  }


  public void setApps(AppInstancePolicyRuleCondition apps) {
    
    
    
    this.apps = apps;
  }


  public PolicyRuleConditions authContext(PolicyRuleAuthContextCondition authContext) {
    
    
    
    
    this.authContext = authContext;
    return this;
  }

   /**
   * Get authContext
   * @return authContext
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PolicyRuleAuthContextCondition getAuthContext() {
    return authContext;
  }


  public void setAuthContext(PolicyRuleAuthContextCondition authContext) {
    
    
    
    this.authContext = authContext;
  }


  public PolicyRuleConditions authProvider(PasswordPolicyAuthenticationProviderCondition authProvider) {
    
    
    
    
    this.authProvider = authProvider;
    return this;
  }

   /**
   * Get authProvider
   * @return authProvider
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PasswordPolicyAuthenticationProviderCondition getAuthProvider() {
    return authProvider;
  }


  public void setAuthProvider(PasswordPolicyAuthenticationProviderCondition authProvider) {
    
    
    
    this.authProvider = authProvider;
  }


  public PolicyRuleConditions beforeScheduledAction(BeforeScheduledActionPolicyRuleCondition beforeScheduledAction) {
    
    
    
    
    this.beforeScheduledAction = beforeScheduledAction;
    return this;
  }

   /**
   * Get beforeScheduledAction
   * @return beforeScheduledAction
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BeforeScheduledActionPolicyRuleCondition getBeforeScheduledAction() {
    return beforeScheduledAction;
  }


  public void setBeforeScheduledAction(BeforeScheduledActionPolicyRuleCondition beforeScheduledAction) {
    
    
    
    this.beforeScheduledAction = beforeScheduledAction;
  }


  public PolicyRuleConditions clients(ClientPolicyCondition clients) {
    
    
    
    
    this.clients = clients;
    return this;
  }

   /**
   * Get clients
   * @return clients
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ClientPolicyCondition getClients() {
    return clients;
  }


  public void setClients(ClientPolicyCondition clients) {
    
    
    
    this.clients = clients;
  }


  public PolicyRuleConditions context(ContextPolicyRuleCondition context) {
    
    
    
    
    this.context = context;
    return this;
  }

   /**
   * Get context
   * @return context
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ContextPolicyRuleCondition getContext() {
    return context;
  }


  public void setContext(ContextPolicyRuleCondition context) {
    
    
    
    this.context = context;
  }


  public PolicyRuleConditions device(DevicePolicyRuleCondition device) {
    
    
    
    
    this.device = device;
    return this;
  }

   /**
   * Get device
   * @return device
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DevicePolicyRuleCondition getDevice() {
    return device;
  }


  public void setDevice(DevicePolicyRuleCondition device) {
    
    
    
    this.device = device;
  }


  public PolicyRuleConditions grantTypes(GrantTypePolicyRuleCondition grantTypes) {
    
    
    
    
    this.grantTypes = grantTypes;
    return this;
  }

   /**
   * Get grantTypes
   * @return grantTypes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GrantTypePolicyRuleCondition getGrantTypes() {
    return grantTypes;
  }


  public void setGrantTypes(GrantTypePolicyRuleCondition grantTypes) {
    
    
    
    this.grantTypes = grantTypes;
  }


  public PolicyRuleConditions groups(GroupPolicyRuleCondition groups) {
    
    
    
    
    this.groups = groups;
    return this;
  }

   /**
   * Get groups
   * @return groups
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GroupPolicyRuleCondition getGroups() {
    return groups;
  }


  public void setGroups(GroupPolicyRuleCondition groups) {
    
    
    
    this.groups = groups;
  }


  public PolicyRuleConditions identityProvider(IdentityProviderPolicyRuleCondition identityProvider) {
    
    
    
    
    this.identityProvider = identityProvider;
    return this;
  }

   /**
   * Get identityProvider
   * @return identityProvider
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public IdentityProviderPolicyRuleCondition getIdentityProvider() {
    return identityProvider;
  }


  public void setIdentityProvider(IdentityProviderPolicyRuleCondition identityProvider) {
    
    
    
    this.identityProvider = identityProvider;
  }


  public PolicyRuleConditions mdmEnrollment(MDMEnrollmentPolicyRuleCondition mdmEnrollment) {
    
    
    
    
    this.mdmEnrollment = mdmEnrollment;
    return this;
  }

   /**
   * Get mdmEnrollment
   * @return mdmEnrollment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public MDMEnrollmentPolicyRuleCondition getMdmEnrollment() {
    return mdmEnrollment;
  }


  public void setMdmEnrollment(MDMEnrollmentPolicyRuleCondition mdmEnrollment) {
    
    
    
    this.mdmEnrollment = mdmEnrollment;
  }


  public PolicyRuleConditions network(PolicyNetworkCondition network) {
    
    
    
    
    this.network = network;
    return this;
  }

   /**
   * Get network
   * @return network
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PolicyNetworkCondition getNetwork() {
    return network;
  }


  public void setNetwork(PolicyNetworkCondition network) {
    
    
    
    this.network = network;
  }


  public PolicyRuleConditions people(PolicyPeopleCondition people) {
    
    
    
    
    this.people = people;
    return this;
  }

   /**
   * Get people
   * @return people
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PolicyPeopleCondition getPeople() {
    return people;
  }


  public void setPeople(PolicyPeopleCondition people) {
    
    
    
    this.people = people;
  }


  public PolicyRuleConditions platform(PlatformPolicyRuleCondition platform) {
    
    
    
    
    this.platform = platform;
    return this;
  }

   /**
   * Get platform
   * @return platform
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PlatformPolicyRuleCondition getPlatform() {
    return platform;
  }


  public void setPlatform(PlatformPolicyRuleCondition platform) {
    
    
    
    this.platform = platform;
  }


  public PolicyRuleConditions risk(RiskPolicyRuleCondition risk) {
    
    
    
    
    this.risk = risk;
    return this;
  }

   /**
   * Get risk
   * @return risk
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public RiskPolicyRuleCondition getRisk() {
    return risk;
  }


  public void setRisk(RiskPolicyRuleCondition risk) {
    
    
    
    this.risk = risk;
  }


  public PolicyRuleConditions riskScore(RiskScorePolicyRuleCondition riskScore) {
    
    
    
    
    this.riskScore = riskScore;
    return this;
  }

   /**
   * Get riskScore
   * @return riskScore
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public RiskScorePolicyRuleCondition getRiskScore() {
    return riskScore;
  }


  public void setRiskScore(RiskScorePolicyRuleCondition riskScore) {
    
    
    
    this.riskScore = riskScore;
  }


  public PolicyRuleConditions scopes(OAuth2ScopesMediationPolicyRuleCondition scopes) {
    
    
    
    
    this.scopes = scopes;
    return this;
  }

   /**
   * Get scopes
   * @return scopes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OAuth2ScopesMediationPolicyRuleCondition getScopes() {
    return scopes;
  }


  public void setScopes(OAuth2ScopesMediationPolicyRuleCondition scopes) {
    
    
    
    this.scopes = scopes;
  }


  public PolicyRuleConditions userIdentifier(UserIdentifierPolicyRuleCondition userIdentifier) {
    
    
    
    
    this.userIdentifier = userIdentifier;
    return this;
  }

   /**
   * Get userIdentifier
   * @return userIdentifier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserIdentifierPolicyRuleCondition getUserIdentifier() {
    return userIdentifier;
  }


  public void setUserIdentifier(UserIdentifierPolicyRuleCondition userIdentifier) {
    
    
    
    this.userIdentifier = userIdentifier;
  }


  public PolicyRuleConditions userStatus(UserStatusPolicyRuleCondition userStatus) {
    
    
    
    
    this.userStatus = userStatus;
    return this;
  }

   /**
   * Get userStatus
   * @return userStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserStatusPolicyRuleCondition getUserStatus() {
    return userStatus;
  }


  public void setUserStatus(UserStatusPolicyRuleCondition userStatus) {
    
    
    
    this.userStatus = userStatus;
  }


  public PolicyRuleConditions users(UserPolicyRuleCondition users) {
    
    
    
    
    this.users = users;
    return this;
  }

   /**
   * Get users
   * @return users
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserPolicyRuleCondition getUsers() {
    return users;
  }


  public void setUsers(UserPolicyRuleCondition users) {
    
    
    
    this.users = users;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the PolicyRuleConditions instance itself
   */
  public PolicyRuleConditions putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PolicyRuleConditions policyRuleConditions = (PolicyRuleConditions) o;
    return Objects.equals(this.app, policyRuleConditions.app) &&
        Objects.equals(this.apps, policyRuleConditions.apps) &&
        Objects.equals(this.authContext, policyRuleConditions.authContext) &&
        Objects.equals(this.authProvider, policyRuleConditions.authProvider) &&
        Objects.equals(this.beforeScheduledAction, policyRuleConditions.beforeScheduledAction) &&
        Objects.equals(this.clients, policyRuleConditions.clients) &&
        Objects.equals(this.context, policyRuleConditions.context) &&
        Objects.equals(this.device, policyRuleConditions.device) &&
        Objects.equals(this.grantTypes, policyRuleConditions.grantTypes) &&
        Objects.equals(this.groups, policyRuleConditions.groups) &&
        Objects.equals(this.identityProvider, policyRuleConditions.identityProvider) &&
        Objects.equals(this.mdmEnrollment, policyRuleConditions.mdmEnrollment) &&
        Objects.equals(this.network, policyRuleConditions.network) &&
        Objects.equals(this.people, policyRuleConditions.people) &&
        Objects.equals(this.platform, policyRuleConditions.platform) &&
        Objects.equals(this.risk, policyRuleConditions.risk) &&
        Objects.equals(this.riskScore, policyRuleConditions.riskScore) &&
        Objects.equals(this.scopes, policyRuleConditions.scopes) &&
        Objects.equals(this.userIdentifier, policyRuleConditions.userIdentifier) &&
        Objects.equals(this.userStatus, policyRuleConditions.userStatus) &&
        Objects.equals(this.users, policyRuleConditions.users)&&
        Objects.equals(this.additionalProperties, policyRuleConditions.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(app, apps, authContext, authProvider, beforeScheduledAction, clients, context, device, grantTypes, groups, identityProvider, mdmEnrollment, network, people, platform, risk, riskScore, scopes, userIdentifier, userStatus, users, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PolicyRuleConditions {\n");
    sb.append("    app: ").append(toIndentedString(app)).append("\n");
    sb.append("    apps: ").append(toIndentedString(apps)).append("\n");
    sb.append("    authContext: ").append(toIndentedString(authContext)).append("\n");
    sb.append("    authProvider: ").append(toIndentedString(authProvider)).append("\n");
    sb.append("    beforeScheduledAction: ").append(toIndentedString(beforeScheduledAction)).append("\n");
    sb.append("    clients: ").append(toIndentedString(clients)).append("\n");
    sb.append("    context: ").append(toIndentedString(context)).append("\n");
    sb.append("    device: ").append(toIndentedString(device)).append("\n");
    sb.append("    grantTypes: ").append(toIndentedString(grantTypes)).append("\n");
    sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
    sb.append("    identityProvider: ").append(toIndentedString(identityProvider)).append("\n");
    sb.append("    mdmEnrollment: ").append(toIndentedString(mdmEnrollment)).append("\n");
    sb.append("    network: ").append(toIndentedString(network)).append("\n");
    sb.append("    people: ").append(toIndentedString(people)).append("\n");
    sb.append("    platform: ").append(toIndentedString(platform)).append("\n");
    sb.append("    risk: ").append(toIndentedString(risk)).append("\n");
    sb.append("    riskScore: ").append(toIndentedString(riskScore)).append("\n");
    sb.append("    scopes: ").append(toIndentedString(scopes)).append("\n");
    sb.append("    userIdentifier: ").append(toIndentedString(userIdentifier)).append("\n");
    sb.append("    userStatus: ").append(toIndentedString(userStatus)).append("\n");
    sb.append("    users: ").append(toIndentedString(users)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("app");
    openapiFields.add("apps");
    openapiFields.add("authContext");
    openapiFields.add("authProvider");
    openapiFields.add("beforeScheduledAction");
    openapiFields.add("clients");
    openapiFields.add("context");
    openapiFields.add("device");
    openapiFields.add("grantTypes");
    openapiFields.add("groups");
    openapiFields.add("identityProvider");
    openapiFields.add("mdmEnrollment");
    openapiFields.add("network");
    openapiFields.add("people");
    openapiFields.add("platform");
    openapiFields.add("risk");
    openapiFields.add("riskScore");
    openapiFields.add("scopes");
    openapiFields.add("userIdentifier");
    openapiFields.add("userStatus");
    openapiFields.add("users");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to PolicyRuleConditions
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!PolicyRuleConditions.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PolicyRuleConditions is not found in the empty JSON string", PolicyRuleConditions.openapiRequiredFields.toString()));
        }
      }
      // validate the optional field `app`
      if (jsonObj.get("app") != null && !jsonObj.get("app").isJsonNull()) {
        AppAndInstancePolicyRuleCondition.validateJsonObject(jsonObj.getAsJsonObject("app"));
      }
      // validate the optional field `apps`
      if (jsonObj.get("apps") != null && !jsonObj.get("apps").isJsonNull()) {
        AppInstancePolicyRuleCondition.validateJsonObject(jsonObj.getAsJsonObject("apps"));
      }
      // validate the optional field `authContext`
      if (jsonObj.get("authContext") != null && !jsonObj.get("authContext").isJsonNull()) {
        PolicyRuleAuthContextCondition.validateJsonObject(jsonObj.getAsJsonObject("authContext"));
      }
      // validate the optional field `authProvider`
      if (jsonObj.get("authProvider") != null && !jsonObj.get("authProvider").isJsonNull()) {
        PasswordPolicyAuthenticationProviderCondition.validateJsonObject(jsonObj.getAsJsonObject("authProvider"));
      }
      // validate the optional field `beforeScheduledAction`
      if (jsonObj.get("beforeScheduledAction") != null && !jsonObj.get("beforeScheduledAction").isJsonNull()) {
        BeforeScheduledActionPolicyRuleCondition.validateJsonObject(jsonObj.getAsJsonObject("beforeScheduledAction"));
      }
      // validate the optional field `clients`
      if (jsonObj.get("clients") != null && !jsonObj.get("clients").isJsonNull()) {
        ClientPolicyCondition.validateJsonObject(jsonObj.getAsJsonObject("clients"));
      }
      // validate the optional field `context`
      if (jsonObj.get("context") != null && !jsonObj.get("context").isJsonNull()) {
        ContextPolicyRuleCondition.validateJsonObject(jsonObj.getAsJsonObject("context"));
      }
      // validate the optional field `device`
      if (jsonObj.get("device") != null && !jsonObj.get("device").isJsonNull()) {
        DevicePolicyRuleCondition.validateJsonObject(jsonObj.getAsJsonObject("device"));
      }
      // validate the optional field `grantTypes`
      if (jsonObj.get("grantTypes") != null && !jsonObj.get("grantTypes").isJsonNull()) {
        GrantTypePolicyRuleCondition.validateJsonObject(jsonObj.getAsJsonObject("grantTypes"));
      }
      // validate the optional field `groups`
      if (jsonObj.get("groups") != null && !jsonObj.get("groups").isJsonNull()) {
        GroupPolicyRuleCondition.validateJsonObject(jsonObj.getAsJsonObject("groups"));
      }
      // validate the optional field `identityProvider`
      if (jsonObj.get("identityProvider") != null && !jsonObj.get("identityProvider").isJsonNull()) {
        IdentityProviderPolicyRuleCondition.validateJsonObject(jsonObj.getAsJsonObject("identityProvider"));
      }
      // validate the optional field `mdmEnrollment`
      if (jsonObj.get("mdmEnrollment") != null && !jsonObj.get("mdmEnrollment").isJsonNull()) {
        MDMEnrollmentPolicyRuleCondition.validateJsonObject(jsonObj.getAsJsonObject("mdmEnrollment"));
      }
      // validate the optional field `network`
      if (jsonObj.get("network") != null && !jsonObj.get("network").isJsonNull()) {
        PolicyNetworkCondition.validateJsonObject(jsonObj.getAsJsonObject("network"));
      }
      // validate the optional field `people`
      if (jsonObj.get("people") != null && !jsonObj.get("people").isJsonNull()) {
        PolicyPeopleCondition.validateJsonObject(jsonObj.getAsJsonObject("people"));
      }
      // validate the optional field `platform`
      if (jsonObj.get("platform") != null && !jsonObj.get("platform").isJsonNull()) {
        PlatformPolicyRuleCondition.validateJsonObject(jsonObj.getAsJsonObject("platform"));
      }
      // validate the optional field `risk`
      if (jsonObj.get("risk") != null && !jsonObj.get("risk").isJsonNull()) {
        RiskPolicyRuleCondition.validateJsonObject(jsonObj.getAsJsonObject("risk"));
      }
      // validate the optional field `riskScore`
      if (jsonObj.get("riskScore") != null && !jsonObj.get("riskScore").isJsonNull()) {
        RiskScorePolicyRuleCondition.validateJsonObject(jsonObj.getAsJsonObject("riskScore"));
      }
      // validate the optional field `scopes`
      if (jsonObj.get("scopes") != null && !jsonObj.get("scopes").isJsonNull()) {
        OAuth2ScopesMediationPolicyRuleCondition.validateJsonObject(jsonObj.getAsJsonObject("scopes"));
      }
      // validate the optional field `userIdentifier`
      if (jsonObj.get("userIdentifier") != null && !jsonObj.get("userIdentifier").isJsonNull()) {
        UserIdentifierPolicyRuleCondition.validateJsonObject(jsonObj.getAsJsonObject("userIdentifier"));
      }
      // validate the optional field `userStatus`
      if (jsonObj.get("userStatus") != null && !jsonObj.get("userStatus").isJsonNull()) {
        UserStatusPolicyRuleCondition.validateJsonObject(jsonObj.getAsJsonObject("userStatus"));
      }
      // validate the optional field `users`
      if (jsonObj.get("users") != null && !jsonObj.get("users").isJsonNull()) {
        UserPolicyRuleCondition.validateJsonObject(jsonObj.getAsJsonObject("users"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PolicyRuleConditions.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PolicyRuleConditions' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PolicyRuleConditions> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PolicyRuleConditions.class));

       return (TypeAdapter<T>) new TypeAdapter<PolicyRuleConditions>() {
           @Override
           public void write(JsonWriter out, PolicyRuleConditions value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public PolicyRuleConditions read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             PolicyRuleConditions instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PolicyRuleConditions given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PolicyRuleConditions
  * @throws IOException if the JSON string is invalid with respect to PolicyRuleConditions
  */
  public static PolicyRuleConditions fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PolicyRuleConditions.class);
  }

 /**
  * Convert an instance of PolicyRuleConditions to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

