/*
 * Okta API
 * Allows customers to easily access the Okta API
 *
 * The version of the OpenAPI document: 2.16.0
 * Contact: devex-public@okta.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.OAuthGrantType;
import com.konfigthis.client.model.OAuthResponseType;
import com.konfigthis.client.model.OpenIdConnectApplicationConsentMethod;
import com.konfigthis.client.model.OpenIdConnectApplicationIdpInitiatedLogin;
import com.konfigthis.client.model.OpenIdConnectApplicationIssuerMode;
import com.konfigthis.client.model.OpenIdConnectApplicationSettingsClientKeys;
import com.konfigthis.client.model.OpenIdConnectApplicationSettingsRefreshToken;
import com.konfigthis.client.model.OpenIdConnectApplicationType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for OpenIdConnectApplicationSettingsClient
 */
public class OpenIdConnectApplicationSettingsClientTest {
    private final OpenIdConnectApplicationSettingsClient model = new OpenIdConnectApplicationSettingsClient();

    /**
     * Model tests for OpenIdConnectApplicationSettingsClient
     */
    @Test
    public void testOpenIdConnectApplicationSettingsClient() {
        // TODO: test OpenIdConnectApplicationSettingsClient
    }

    /**
     * Test the property 'applicationType'
     */
    @Test
    public void applicationTypeTest() {
        // TODO: test applicationType
    }

    /**
     * Test the property 'clientUri'
     */
    @Test
    public void clientUriTest() {
        // TODO: test clientUri
    }

    /**
     * Test the property 'consentMethod'
     */
    @Test
    public void consentMethodTest() {
        // TODO: test consentMethod
    }

    /**
     * Test the property 'grantTypes'
     */
    @Test
    public void grantTypesTest() {
        // TODO: test grantTypes
    }

    /**
     * Test the property 'idpInitiatedLogin'
     */
    @Test
    public void idpInitiatedLoginTest() {
        // TODO: test idpInitiatedLogin
    }

    /**
     * Test the property 'initiateLoginUri'
     */
    @Test
    public void initiateLoginUriTest() {
        // TODO: test initiateLoginUri
    }

    /**
     * Test the property 'issuerMode'
     */
    @Test
    public void issuerModeTest() {
        // TODO: test issuerMode
    }

    /**
     * Test the property 'jwks'
     */
    @Test
    public void jwksTest() {
        // TODO: test jwks
    }

    /**
     * Test the property 'logoUri'
     */
    @Test
    public void logoUriTest() {
        // TODO: test logoUri
    }

    /**
     * Test the property 'policyUri'
     */
    @Test
    public void policyUriTest() {
        // TODO: test policyUri
    }

    /**
     * Test the property 'postLogoutRedirectUris'
     */
    @Test
    public void postLogoutRedirectUrisTest() {
        // TODO: test postLogoutRedirectUris
    }

    /**
     * Test the property 'redirectUris'
     */
    @Test
    public void redirectUrisTest() {
        // TODO: test redirectUris
    }

    /**
     * Test the property 'refreshToken'
     */
    @Test
    public void refreshTokenTest() {
        // TODO: test refreshToken
    }

    /**
     * Test the property 'responseTypes'
     */
    @Test
    public void responseTypesTest() {
        // TODO: test responseTypes
    }

    /**
     * Test the property 'tosUri'
     */
    @Test
    public void tosUriTest() {
        // TODO: test tosUri
    }

    /**
     * Test the property 'wildcardRedirect'
     */
    @Test
    public void wildcardRedirectTest() {
        // TODO: test wildcardRedirect
    }

}
