/*
 * Okta API
 * Allows customers to easily access the Okta API
 *
 * The version of the OpenAPI document: 2.16.0
 * Contact: devex-public@okta.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.AppAndInstancePolicyRuleCondition;
import com.konfigthis.client.model.AppInstancePolicyRuleCondition;
import com.konfigthis.client.model.BeforeScheduledActionPolicyRuleCondition;
import com.konfigthis.client.model.ClientPolicyCondition;
import com.konfigthis.client.model.ContextPolicyRuleCondition;
import com.konfigthis.client.model.DevicePolicyRuleCondition;
import com.konfigthis.client.model.GrantTypePolicyRuleCondition;
import com.konfigthis.client.model.GroupPolicyRuleCondition;
import com.konfigthis.client.model.IdentityProviderPolicyRuleCondition;
import com.konfigthis.client.model.MDMEnrollmentPolicyRuleCondition;
import com.konfigthis.client.model.OAuth2ScopesMediationPolicyRuleCondition;
import com.konfigthis.client.model.PasswordPolicyAuthenticationProviderCondition;
import com.konfigthis.client.model.PlatformPolicyRuleCondition;
import com.konfigthis.client.model.PolicyNetworkCondition;
import com.konfigthis.client.model.PolicyPeopleCondition;
import com.konfigthis.client.model.PolicyRuleAuthContextCondition;
import com.konfigthis.client.model.RiskPolicyRuleCondition;
import com.konfigthis.client.model.RiskScorePolicyRuleCondition;
import com.konfigthis.client.model.UserIdentifierPolicyRuleCondition;
import com.konfigthis.client.model.UserPolicyRuleCondition;
import com.konfigthis.client.model.UserStatusPolicyRuleCondition;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for PolicyRuleConditions
 */
public class PolicyRuleConditionsTest {
    private final PolicyRuleConditions model = new PolicyRuleConditions();

    /**
     * Model tests for PolicyRuleConditions
     */
    @Test
    public void testPolicyRuleConditions() {
        // TODO: test PolicyRuleConditions
    }

    /**
     * Test the property 'app'
     */
    @Test
    public void appTest() {
        // TODO: test app
    }

    /**
     * Test the property 'apps'
     */
    @Test
    public void appsTest() {
        // TODO: test apps
    }

    /**
     * Test the property 'authContext'
     */
    @Test
    public void authContextTest() {
        // TODO: test authContext
    }

    /**
     * Test the property 'authProvider'
     */
    @Test
    public void authProviderTest() {
        // TODO: test authProvider
    }

    /**
     * Test the property 'beforeScheduledAction'
     */
    @Test
    public void beforeScheduledActionTest() {
        // TODO: test beforeScheduledAction
    }

    /**
     * Test the property 'clients'
     */
    @Test
    public void clientsTest() {
        // TODO: test clients
    }

    /**
     * Test the property 'context'
     */
    @Test
    public void contextTest() {
        // TODO: test context
    }

    /**
     * Test the property 'device'
     */
    @Test
    public void deviceTest() {
        // TODO: test device
    }

    /**
     * Test the property 'grantTypes'
     */
    @Test
    public void grantTypesTest() {
        // TODO: test grantTypes
    }

    /**
     * Test the property 'groups'
     */
    @Test
    public void groupsTest() {
        // TODO: test groups
    }

    /**
     * Test the property 'identityProvider'
     */
    @Test
    public void identityProviderTest() {
        // TODO: test identityProvider
    }

    /**
     * Test the property 'mdmEnrollment'
     */
    @Test
    public void mdmEnrollmentTest() {
        // TODO: test mdmEnrollment
    }

    /**
     * Test the property 'network'
     */
    @Test
    public void networkTest() {
        // TODO: test network
    }

    /**
     * Test the property 'people'
     */
    @Test
    public void peopleTest() {
        // TODO: test people
    }

    /**
     * Test the property 'platform'
     */
    @Test
    public void platformTest() {
        // TODO: test platform
    }

    /**
     * Test the property 'risk'
     */
    @Test
    public void riskTest() {
        // TODO: test risk
    }

    /**
     * Test the property 'riskScore'
     */
    @Test
    public void riskScoreTest() {
        // TODO: test riskScore
    }

    /**
     * Test the property 'scopes'
     */
    @Test
    public void scopesTest() {
        // TODO: test scopes
    }

    /**
     * Test the property 'userIdentifier'
     */
    @Test
    public void userIdentifierTest() {
        // TODO: test userIdentifier
    }

    /**
     * Test the property 'userStatus'
     */
    @Test
    public void userStatusTest() {
        // TODO: test userStatus
    }

    /**
     * Test the property 'users'
     */
    @Test
    public void usersTest() {
        // TODO: test users
    }

}
