/*
 * Okta API
 * Allows customers to easily access the Okta API
 *
 * The version of the OpenAPI document: 2.16.0
 * Contact: devex-public@okta.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.UserSchema;
import com.konfigthis.client.model.UserSchemaDefinitions;
import com.konfigthis.client.model.UserSchemaProperties;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UserSchemaApi
 */
@Disabled
public class UserSchemaApiTest {

    private static UserSchemaApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new UserSchemaApi(apiClient);
    }

    /**
     * Fetches the schema for a Schema Id.
     *
     * Fetches the schema for a Schema Id.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSchemaByIdTest() throws ApiException {
        String schemaId = null;
        UserSchema response = api.getSchemaById(schemaId)
                .execute();
        // TODO: test validations
    }

    /**
     * Fetches the Schema for an App User
     *
     * Fetches the Schema for an App User
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUserSchemaTest() throws ApiException {
        String appInstanceId = null;
        UserSchema response = api.getUserSchema(appInstanceId)
                .execute();
        // TODO: test validations
    }

    /**
     * Partial updates on the User Profile properties of the Application User Schema.
     *
     * Partial updates on the User Profile properties of the Application User Schema.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void partialUpdateUserProfileTest() throws ApiException {
        String appInstanceId = null;
        String title = null;
        String $schema = null;
        Map<String, Object> links = null;
        String created = null;
        UserSchemaDefinitions definitions = null;
        String id = null;
        String lastUpdated = null;
        String name = null;
        UserSchemaProperties properties = null;
        String type = null;
        UserSchema response = api.partialUpdateUserProfile(appInstanceId)
                .title(title)
                .$schema($schema)
                .links(links)
                .created(created)
                .definitions(definitions)
                .id(id)
                .lastUpdated(lastUpdated)
                .name(name)
                .properties(properties)
                .type(type)
                .execute();
        // TODO: test validations
    }

    /**
     * Partial updates on the User Profile properties of the user schema.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void partialUpdateUserProfile_0Test() throws ApiException {
        String schemaId = null;
        String title = null;
        String $schema = null;
        Map<String, Object> links = null;
        String created = null;
        UserSchemaDefinitions definitions = null;
        String id = null;
        String lastUpdated = null;
        String name = null;
        UserSchemaProperties properties = null;
        String type = null;
        UserSchema response = api.partialUpdateUserProfile_0(schemaId)
                .title(title)
                .$schema($schema)
                .links(links)
                .created(created)
                .definitions(definitions)
                .id(id)
                .lastUpdated(lastUpdated)
                .name(name)
                .properties(properties)
                .type(type)
                .execute();
        // TODO: test validations
    }

}
