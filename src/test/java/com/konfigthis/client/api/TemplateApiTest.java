/*
 * Okta API
 * Allows customers to easily access the Okta API
 *
 * The version of the OpenAPI document: 2.16.0
 * Contact: devex-public@okta.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import java.time.OffsetDateTime;
import com.konfigthis.client.model.SmsTemplate;
import com.konfigthis.client.model.SmsTemplateType;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TemplateApi
 */
@Disabled
public class TemplateApiTest {

    private static TemplateApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new TemplateApi(apiClient);
    }

    /**
     * Add SMS Template
     *
     * Adds a new custom SMS template to your organization.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addNewCustomSmsTest() throws ApiException {
        OffsetDateTime created = null;
        String id = null;
        OffsetDateTime lastUpdated = null;
        String name = null;
        String template = null;
        Object translations = null;
        SmsTemplateType type = null;
        SmsTemplate response = api.addNewCustomSms()
                .created(created)
                .id(id)
                .lastUpdated(lastUpdated)
                .name(name)
                .template(template)
                .translations(translations)
                .type(type)
                .execute();
        // TODO: test validations
    }

    /**
     * List SMS Templates
     *
     * Enumerates custom SMS templates in your organization. A subset of templates can be returned that match a template type.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void enumerateSmsTemplatesTest() throws ApiException {
        String templateType = null;
        List<SmsTemplate> response = api.enumerateSmsTemplates()
                .templateType(templateType)
                .execute();
        // TODO: test validations
    }

    /**
     * Get SMS Template
     *
     * Fetches a specific template by &#x60;id&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByIdTest() throws ApiException {
        String templateId = null;
        SmsTemplate response = api.getById(templateId)
                .execute();
        // TODO: test validations
    }

    /**
     * Partial SMS Template Update
     *
     * Updates only some of the SMS template properties:
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void partialSmsUpdateTest() throws ApiException {
        String templateId = null;
        OffsetDateTime created = null;
        String id = null;
        OffsetDateTime lastUpdated = null;
        String name = null;
        String template = null;
        Object translations = null;
        SmsTemplateType type = null;
        SmsTemplate response = api.partialSmsUpdate(templateId)
                .created(created)
                .id(id)
                .lastUpdated(lastUpdated)
                .name(name)
                .template(template)
                .translations(translations)
                .type(type)
                .execute();
        // TODO: test validations
    }

    /**
     * Remove SMS Template
     *
     * Removes an SMS template.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeSmsTest() throws ApiException {
        String templateId = null;
        api.removeSms(templateId)
                .execute();
        // TODO: test validations
    }

    /**
     * Update SMS Template
     *
     * Updates the SMS template.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateSmsTemplateTest() throws ApiException {
        String templateId = null;
        OffsetDateTime created = null;
        String id = null;
        OffsetDateTime lastUpdated = null;
        String name = null;
        String template = null;
        Object translations = null;
        SmsTemplateType type = null;
        SmsTemplate response = api.updateSmsTemplate(templateId)
                .created(created)
                .id(id)
                .lastUpdated(lastUpdated)
                .name(name)
                .template(template)
                .translations(translations)
                .type(type)
                .execute();
        // TODO: test validations
    }

}
